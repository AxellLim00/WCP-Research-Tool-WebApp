/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/datatables.net-dt/css/jquery.dataTables.min.css":
/*!************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/datatables.net-dt/css/jquery.dataTables.min.css ***!
  \************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root{--dt-row-selected: 13, 110, 253;--dt-row-selected-text: 255, 255, 255;--dt-row-selected-link: 9, 10, 11;--dt-row-stripe: 0, 0, 0;--dt-row-hover: 0, 0, 0;--dt-column-ordering: 0, 0, 0;--dt-html-background: white}:root.dark{--dt-html-background: rgb(33, 37, 41)}table.dataTable td.dt-control{text-align:center;cursor:pointer}table.dataTable td.dt-control:before{display:inline-block;color:rgba(0, 0, 0, 0.5);content:\"▶\"}table.dataTable tr.dt-hasChild td.dt-control:before{content:\"▼\"}html.dark table.dataTable td.dt-control:before{color:rgba(255, 255, 255, 0.5)}html.dark table.dataTable tr.dt-hasChild td.dt-control:before{color:rgba(255, 255, 255, 0.5)}table.dataTable thead>tr>th.sorting,table.dataTable thead>tr>th.sorting_asc,table.dataTable thead>tr>th.sorting_desc,table.dataTable thead>tr>th.sorting_asc_disabled,table.dataTable thead>tr>th.sorting_desc_disabled,table.dataTable thead>tr>td.sorting,table.dataTable thead>tr>td.sorting_asc,table.dataTable thead>tr>td.sorting_desc,table.dataTable thead>tr>td.sorting_asc_disabled,table.dataTable thead>tr>td.sorting_desc_disabled{cursor:pointer;position:relative;padding-right:26px}table.dataTable thead>tr>th.sorting:before,table.dataTable thead>tr>th.sorting:after,table.dataTable thead>tr>th.sorting_asc:before,table.dataTable thead>tr>th.sorting_asc:after,table.dataTable thead>tr>th.sorting_desc:before,table.dataTable thead>tr>th.sorting_desc:after,table.dataTable thead>tr>th.sorting_asc_disabled:before,table.dataTable thead>tr>th.sorting_asc_disabled:after,table.dataTable thead>tr>th.sorting_desc_disabled:before,table.dataTable thead>tr>th.sorting_desc_disabled:after,table.dataTable thead>tr>td.sorting:before,table.dataTable thead>tr>td.sorting:after,table.dataTable thead>tr>td.sorting_asc:before,table.dataTable thead>tr>td.sorting_asc:after,table.dataTable thead>tr>td.sorting_desc:before,table.dataTable thead>tr>td.sorting_desc:after,table.dataTable thead>tr>td.sorting_asc_disabled:before,table.dataTable thead>tr>td.sorting_asc_disabled:after,table.dataTable thead>tr>td.sorting_desc_disabled:before,table.dataTable thead>tr>td.sorting_desc_disabled:after{position:absolute;display:block;opacity:.125;right:10px;line-height:9px;font-size:.8em}table.dataTable thead>tr>th.sorting:before,table.dataTable thead>tr>th.sorting_asc:before,table.dataTable thead>tr>th.sorting_desc:before,table.dataTable thead>tr>th.sorting_asc_disabled:before,table.dataTable thead>tr>th.sorting_desc_disabled:before,table.dataTable thead>tr>td.sorting:before,table.dataTable thead>tr>td.sorting_asc:before,table.dataTable thead>tr>td.sorting_desc:before,table.dataTable thead>tr>td.sorting_asc_disabled:before,table.dataTable thead>tr>td.sorting_desc_disabled:before{bottom:50%;content:\"▲\";content:\"▲\"/\"\"}table.dataTable thead>tr>th.sorting:after,table.dataTable thead>tr>th.sorting_asc:after,table.dataTable thead>tr>th.sorting_desc:after,table.dataTable thead>tr>th.sorting_asc_disabled:after,table.dataTable thead>tr>th.sorting_desc_disabled:after,table.dataTable thead>tr>td.sorting:after,table.dataTable thead>tr>td.sorting_asc:after,table.dataTable thead>tr>td.sorting_desc:after,table.dataTable thead>tr>td.sorting_asc_disabled:after,table.dataTable thead>tr>td.sorting_desc_disabled:after{top:50%;content:\"▼\";content:\"▼\"/\"\"}table.dataTable thead>tr>th.sorting_asc:before,table.dataTable thead>tr>th.sorting_desc:after,table.dataTable thead>tr>td.sorting_asc:before,table.dataTable thead>tr>td.sorting_desc:after{opacity:.6}table.dataTable thead>tr>th.sorting_desc_disabled:after,table.dataTable thead>tr>th.sorting_asc_disabled:before,table.dataTable thead>tr>td.sorting_desc_disabled:after,table.dataTable thead>tr>td.sorting_asc_disabled:before{display:none}table.dataTable thead>tr>th:active,table.dataTable thead>tr>td:active{outline:none}div.dataTables_scrollBody>table.dataTable>thead>tr>th:before,div.dataTables_scrollBody>table.dataTable>thead>tr>th:after,div.dataTables_scrollBody>table.dataTable>thead>tr>td:before,div.dataTables_scrollBody>table.dataTable>thead>tr>td:after{display:none}div.dataTables_processing{position:absolute;top:50%;left:50%;width:200px;margin-left:-100px;margin-top:-26px;text-align:center;padding:2px;z-index:10}div.dataTables_processing>div:last-child{position:relative;width:80px;height:15px;margin:1em auto}div.dataTables_processing>div:last-child>div{position:absolute;top:0;width:13px;height:13px;border-radius:50%;background:#0d6efd;background:rgb(var(--dt-row-selected));animation-timing-function:cubic-bezier(0, 1, 1, 0)}div.dataTables_processing>div:last-child>div:nth-child(1){left:8px;animation:datatables-loader-1 .6s infinite}div.dataTables_processing>div:last-child>div:nth-child(2){left:8px;animation:datatables-loader-2 .6s infinite}div.dataTables_processing>div:last-child>div:nth-child(3){left:32px;animation:datatables-loader-2 .6s infinite}div.dataTables_processing>div:last-child>div:nth-child(4){left:56px;animation:datatables-loader-3 .6s infinite}@keyframes datatables-loader-1{0%{transform:scale(0)}100%{transform:scale(1)}}@keyframes datatables-loader-3{0%{transform:scale(1)}100%{transform:scale(0)}}@keyframes datatables-loader-2{0%{transform:translate(0, 0)}100%{transform:translate(24px, 0)}}table.dataTable.nowrap th,table.dataTable.nowrap td{white-space:nowrap}table.dataTable th.dt-left,table.dataTable td.dt-left{text-align:left}table.dataTable th.dt-center,table.dataTable td.dt-center,table.dataTable td.dataTables_empty{text-align:center}table.dataTable th.dt-right,table.dataTable td.dt-right{text-align:right}table.dataTable th.dt-justify,table.dataTable td.dt-justify{text-align:justify}table.dataTable th.dt-nowrap,table.dataTable td.dt-nowrap{white-space:nowrap}table.dataTable thead th,table.dataTable thead td,table.dataTable tfoot th,table.dataTable tfoot td{text-align:left}table.dataTable thead th.dt-head-left,table.dataTable thead td.dt-head-left,table.dataTable tfoot th.dt-head-left,table.dataTable tfoot td.dt-head-left{text-align:left}table.dataTable thead th.dt-head-center,table.dataTable thead td.dt-head-center,table.dataTable tfoot th.dt-head-center,table.dataTable tfoot td.dt-head-center{text-align:center}table.dataTable thead th.dt-head-right,table.dataTable thead td.dt-head-right,table.dataTable tfoot th.dt-head-right,table.dataTable tfoot td.dt-head-right{text-align:right}table.dataTable thead th.dt-head-justify,table.dataTable thead td.dt-head-justify,table.dataTable tfoot th.dt-head-justify,table.dataTable tfoot td.dt-head-justify{text-align:justify}table.dataTable thead th.dt-head-nowrap,table.dataTable thead td.dt-head-nowrap,table.dataTable tfoot th.dt-head-nowrap,table.dataTable tfoot td.dt-head-nowrap{white-space:nowrap}table.dataTable tbody th.dt-body-left,table.dataTable tbody td.dt-body-left{text-align:left}table.dataTable tbody th.dt-body-center,table.dataTable tbody td.dt-body-center{text-align:center}table.dataTable tbody th.dt-body-right,table.dataTable tbody td.dt-body-right{text-align:right}table.dataTable tbody th.dt-body-justify,table.dataTable tbody td.dt-body-justify{text-align:justify}table.dataTable tbody th.dt-body-nowrap,table.dataTable tbody td.dt-body-nowrap{white-space:nowrap}table.dataTable{width:100%;margin:0 auto;clear:both;border-collapse:separate;border-spacing:0}table.dataTable thead th,table.dataTable tfoot th{font-weight:bold}table.dataTable>thead>tr>th,table.dataTable>thead>tr>td{padding:10px;border-bottom:1px solid rgba(0, 0, 0, 0.3)}table.dataTable>thead>tr>th:active,table.dataTable>thead>tr>td:active{outline:none}table.dataTable>tfoot>tr>th,table.dataTable>tfoot>tr>td{padding:10px 10px 6px 10px;border-top:1px solid rgba(0, 0, 0, 0.3)}table.dataTable tbody tr{background-color:transparent}table.dataTable tbody tr.selected>*{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.9);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.9);color:white;color:rgb(var(--dt-row-selected-text))}table.dataTable tbody tr.selected a{color:#090a0b;color:rgb(var(--dt-row-selected-link))}table.dataTable tbody th,table.dataTable tbody td{padding:8px 10px}table.dataTable.row-border>tbody>tr>th,table.dataTable.row-border>tbody>tr>td,table.dataTable.display>tbody>tr>th,table.dataTable.display>tbody>tr>td{border-top:1px solid rgba(0, 0, 0, 0.15)}table.dataTable.row-border>tbody>tr:first-child>th,table.dataTable.row-border>tbody>tr:first-child>td,table.dataTable.display>tbody>tr:first-child>th,table.dataTable.display>tbody>tr:first-child>td{border-top:none}table.dataTable.row-border>tbody>tr.selected+tr.selected>td,table.dataTable.display>tbody>tr.selected+tr.selected>td{border-top-color:#0262ef}table.dataTable.cell-border>tbody>tr>th,table.dataTable.cell-border>tbody>tr>td{border-top:1px solid rgba(0, 0, 0, 0.15);border-right:1px solid rgba(0, 0, 0, 0.15)}table.dataTable.cell-border>tbody>tr>th:first-child,table.dataTable.cell-border>tbody>tr>td:first-child{border-left:1px solid rgba(0, 0, 0, 0.15)}table.dataTable.cell-border>tbody>tr:first-child>th,table.dataTable.cell-border>tbody>tr:first-child>td{border-top:none}table.dataTable.stripe>tbody>tr.odd>*,table.dataTable.display>tbody>tr.odd>*{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.023);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-stripe), 0.023)}table.dataTable.stripe>tbody>tr.odd.selected>*,table.dataTable.display>tbody>tr.odd.selected>*{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.923);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.923)}table.dataTable.hover>tbody>tr:hover>*,table.dataTable.display>tbody>tr:hover>*{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.035);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.035)}table.dataTable.hover>tbody>tr.selected:hover>*,table.dataTable.display>tbody>tr.selected:hover>*{box-shadow:inset 0 0 0 9999px #0d6efd !important;box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 1) !important}table.dataTable.order-column>tbody tr>.sorting_1,table.dataTable.order-column>tbody tr>.sorting_2,table.dataTable.order-column>tbody tr>.sorting_3,table.dataTable.display>tbody tr>.sorting_1,table.dataTable.display>tbody tr>.sorting_2,table.dataTable.display>tbody tr>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.019);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.019)}table.dataTable.order-column>tbody tr.selected>.sorting_1,table.dataTable.order-column>tbody tr.selected>.sorting_2,table.dataTable.order-column>tbody tr.selected>.sorting_3,table.dataTable.display>tbody tr.selected>.sorting_1,table.dataTable.display>tbody tr.selected>.sorting_2,table.dataTable.display>tbody tr.selected>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.919);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.919)}table.dataTable.display>tbody>tr.odd>.sorting_1,table.dataTable.order-column.stripe>tbody>tr.odd>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.054);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.054)}table.dataTable.display>tbody>tr.odd>.sorting_2,table.dataTable.order-column.stripe>tbody>tr.odd>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.047);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.047)}table.dataTable.display>tbody>tr.odd>.sorting_3,table.dataTable.order-column.stripe>tbody>tr.odd>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.039);box-shadow:inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.039)}table.dataTable.display>tbody>tr.odd.selected>.sorting_1,table.dataTable.order-column.stripe>tbody>tr.odd.selected>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.954);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.954)}table.dataTable.display>tbody>tr.odd.selected>.sorting_2,table.dataTable.order-column.stripe>tbody>tr.odd.selected>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.947);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.947)}table.dataTable.display>tbody>tr.odd.selected>.sorting_3,table.dataTable.order-column.stripe>tbody>tr.odd.selected>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.939);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.939)}table.dataTable.display>tbody>tr.even>.sorting_1,table.dataTable.order-column.stripe>tbody>tr.even>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.019);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.019)}table.dataTable.display>tbody>tr.even>.sorting_2,table.dataTable.order-column.stripe>tbody>tr.even>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.011);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.011)}table.dataTable.display>tbody>tr.even>.sorting_3,table.dataTable.order-column.stripe>tbody>tr.even>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.003);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.003)}table.dataTable.display>tbody>tr.even.selected>.sorting_1,table.dataTable.order-column.stripe>tbody>tr.even.selected>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.919);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.919)}table.dataTable.display>tbody>tr.even.selected>.sorting_2,table.dataTable.order-column.stripe>tbody>tr.even.selected>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.911);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.911)}table.dataTable.display>tbody>tr.even.selected>.sorting_3,table.dataTable.order-column.stripe>tbody>tr.even.selected>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.903);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.903)}table.dataTable.display tbody tr:hover>.sorting_1,table.dataTable.order-column.hover tbody tr:hover>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.082);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.082)}table.dataTable.display tbody tr:hover>.sorting_2,table.dataTable.order-column.hover tbody tr:hover>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.074);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.074)}table.dataTable.display tbody tr:hover>.sorting_3,table.dataTable.order-column.hover tbody tr:hover>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.062);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.062)}table.dataTable.display tbody tr:hover.selected>.sorting_1,table.dataTable.order-column.hover tbody tr:hover.selected>.sorting_1{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.982);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.982)}table.dataTable.display tbody tr:hover.selected>.sorting_2,table.dataTable.order-column.hover tbody tr:hover.selected>.sorting_2{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.974);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.974)}table.dataTable.display tbody tr:hover.selected>.sorting_3,table.dataTable.order-column.hover tbody tr:hover.selected>.sorting_3{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.962);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.962)}table.dataTable.no-footer{border-bottom:1px solid rgba(0, 0, 0, 0.3)}table.dataTable.compact thead th,table.dataTable.compact thead td,table.dataTable.compact tfoot th,table.dataTable.compact tfoot td,table.dataTable.compact tbody th,table.dataTable.compact tbody td{padding:4px}table.dataTable th,table.dataTable td{box-sizing:content-box}.dataTables_wrapper{position:relative;clear:both}.dataTables_wrapper .dataTables_length{float:left}.dataTables_wrapper .dataTables_length select{border:1px solid #aaa;border-radius:3px;padding:5px;background-color:transparent;color:inherit;padding:4px}.dataTables_wrapper .dataTables_filter{float:right;text-align:right}.dataTables_wrapper .dataTables_filter input{border:1px solid #aaa;border-radius:3px;padding:5px;background-color:transparent;color:inherit;margin-left:3px}.dataTables_wrapper .dataTables_info{clear:both;float:left;padding-top:.755em}.dataTables_wrapper .dataTables_paginate{float:right;text-align:right;padding-top:.25em}.dataTables_wrapper .dataTables_paginate .paginate_button{box-sizing:border-box;display:inline-block;min-width:1.5em;padding:.5em 1em;margin-left:2px;text-align:center;text-decoration:none !important;cursor:pointer;color:inherit !important;border:1px solid transparent;border-radius:2px;background:transparent}.dataTables_wrapper .dataTables_paginate .paginate_button.current,.dataTables_wrapper .dataTables_paginate .paginate_button.current:hover{color:inherit !important;border:1px solid rgba(0, 0, 0, 0.3);background-color:rgba(0, 0, 0, 0.05);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(230, 230, 230, 0.05)), color-stop(100%, rgba(0, 0, 0, 0.05)));background:-webkit-linear-gradient(top, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%);background:-moz-linear-gradient(top, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%);background:-ms-linear-gradient(top, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%);background:-o-linear-gradient(top, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%);background:linear-gradient(to bottom, rgba(230, 230, 230, 0.05) 0%, rgba(0, 0, 0, 0.05) 100%)}.dataTables_wrapper .dataTables_paginate .paginate_button.disabled,.dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover,.dataTables_wrapper .dataTables_paginate .paginate_button.disabled:active{cursor:default;color:#666 !important;border:1px solid transparent;background:transparent;box-shadow:none}.dataTables_wrapper .dataTables_paginate .paginate_button:hover{color:white !important;border:1px solid #111;background-color:#111;background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #585858), color-stop(100%, #111));background:-webkit-linear-gradient(top, #585858 0%, #111 100%);background:-moz-linear-gradient(top, #585858 0%, #111 100%);background:-ms-linear-gradient(top, #585858 0%, #111 100%);background:-o-linear-gradient(top, #585858 0%, #111 100%);background:linear-gradient(to bottom, #585858 0%, #111 100%)}.dataTables_wrapper .dataTables_paginate .paginate_button:active{outline:none;background-color:#0c0c0c;background:-webkit-gradient(linear, left top, left bottom, color-stop(0%, #2b2b2b), color-stop(100%, #0c0c0c));background:-webkit-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);background:-moz-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);background:-ms-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);background:-o-linear-gradient(top, #2b2b2b 0%, #0c0c0c 100%);background:linear-gradient(to bottom, #2b2b2b 0%, #0c0c0c 100%);box-shadow:inset 0 0 3px #111}.dataTables_wrapper .dataTables_paginate .ellipsis{padding:0 1em}.dataTables_wrapper .dataTables_length,.dataTables_wrapper .dataTables_filter,.dataTables_wrapper .dataTables_info,.dataTables_wrapper .dataTables_processing,.dataTables_wrapper .dataTables_paginate{color:inherit}.dataTables_wrapper .dataTables_scroll{clear:both}.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody{-webkit-overflow-scrolling:touch}.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody>table>thead>tr>th,.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody>table>thead>tr>td,.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody>table>tbody>tr>th,.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody>table>tbody>tr>td{vertical-align:middle}.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody>table>thead>tr>th>div.dataTables_sizing,.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody>table>thead>tr>td>div.dataTables_sizing,.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody>table>tbody>tr>th>div.dataTables_sizing,.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody>table>tbody>tr>td>div.dataTables_sizing{height:0;overflow:hidden;margin:0 !important;padding:0 !important}.dataTables_wrapper.no-footer .dataTables_scrollBody{border-bottom:1px solid rgba(0, 0, 0, 0.3)}.dataTables_wrapper.no-footer div.dataTables_scrollHead table.dataTable,.dataTables_wrapper.no-footer div.dataTables_scrollBody>table{border-bottom:none}.dataTables_wrapper:after{visibility:hidden;display:block;content:\"\";clear:both;height:0}@media screen and (max-width: 767px){.dataTables_wrapper .dataTables_info,.dataTables_wrapper .dataTables_paginate{float:none;text-align:center}.dataTables_wrapper .dataTables_paginate{margin-top:.5em}}@media screen and (max-width: 640px){.dataTables_wrapper .dataTables_length,.dataTables_wrapper .dataTables_filter{float:none;text-align:center}.dataTables_wrapper .dataTables_filter{margin-top:.5em}}html.dark{--dt-row-hover: 255, 255, 255;--dt-row-stripe: 255, 255, 255;--dt-column-ordering: 255, 255, 255}html.dark table.dataTable>thead>tr>th,html.dark table.dataTable>thead>tr>td{border-bottom:1px solid #595b5e}html.dark table.dataTable>thead>tr>th:active,html.dark table.dataTable>thead>tr>td:active{outline:none}html.dark table.dataTable>tfoot>tr>th,html.dark table.dataTable>tfoot>tr>td{border-top:1px solid #595b5e}html.dark table.dataTable.row-border>tbody>tr>th,html.dark table.dataTable.row-border>tbody>tr>td,html.dark table.dataTable.display>tbody>tr>th,html.dark table.dataTable.display>tbody>tr>td{border-top:1px solid #404346}html.dark table.dataTable.row-border>tbody>tr.selected+tr.selected>td,html.dark table.dataTable.display>tbody>tr.selected+tr.selected>td{border-top-color:#0257d5}html.dark table.dataTable.cell-border>tbody>tr>th,html.dark table.dataTable.cell-border>tbody>tr>td{border-top:1px solid #404346;border-right:1px solid #404346}html.dark table.dataTable.cell-border>tbody>tr>th:first-child,html.dark table.dataTable.cell-border>tbody>tr>td:first-child{border-left:1px solid #404346}html.dark .dataTables_wrapper .dataTables_filter input,html.dark .dataTables_wrapper .dataTables_length select{border:1px solid rgba(255, 255, 255, 0.2);background-color:var(--dt-html-background)}html.dark .dataTables_wrapper .dataTables_paginate .paginate_button.current,html.dark .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover{border:1px solid #595b5e;background:rgba(255, 255, 255, 0.15)}html.dark .dataTables_wrapper .dataTables_paginate .paginate_button.disabled,html.dark .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover,html.dark .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:active{color:#666 !important}html.dark .dataTables_wrapper .dataTables_paginate .paginate_button:hover{border:1px solid #353535;background:#353535}html.dark .dataTables_wrapper .dataTables_paginate .paginate_button:active{background:#3a3a3a}\r\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://server-client/./node_modules/datatables.net-dt/css/jquery.dataTables.min.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function (cssWithMappingToString) {\r\n  var list = [];\r\n\r\n  // return the list of modules as css string\r\n  list.toString = function toString() {\r\n    return this.map(function (item) {\r\n      var content = \"\";\r\n      var needLayer = typeof item[5] !== \"undefined\";\r\n      if (item[4]) {\r\n        content += \"@supports (\".concat(item[4], \") {\");\r\n      }\r\n      if (item[2]) {\r\n        content += \"@media \".concat(item[2], \" {\");\r\n      }\r\n      if (needLayer) {\r\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\r\n      }\r\n      content += cssWithMappingToString(item);\r\n      if (needLayer) {\r\n        content += \"}\";\r\n      }\r\n      if (item[2]) {\r\n        content += \"}\";\r\n      }\r\n      if (item[4]) {\r\n        content += \"}\";\r\n      }\r\n      return content;\r\n    }).join(\"\");\r\n  };\r\n\r\n  // import a list of modules into the list\r\n  list.i = function i(modules, media, dedupe, supports, layer) {\r\n    if (typeof modules === \"string\") {\r\n      modules = [[null, modules, undefined]];\r\n    }\r\n    var alreadyImportedModules = {};\r\n    if (dedupe) {\r\n      for (var k = 0; k < this.length; k++) {\r\n        var id = this[k][0];\r\n        if (id != null) {\r\n          alreadyImportedModules[id] = true;\r\n        }\r\n      }\r\n    }\r\n    for (var _k = 0; _k < modules.length; _k++) {\r\n      var item = [].concat(modules[_k]);\r\n      if (dedupe && alreadyImportedModules[item[0]]) {\r\n        continue;\r\n      }\r\n      if (typeof layer !== \"undefined\") {\r\n        if (typeof item[5] === \"undefined\") {\r\n          item[5] = layer;\r\n        } else {\r\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\r\n          item[5] = layer;\r\n        }\r\n      }\r\n      if (media) {\r\n        if (!item[2]) {\r\n          item[2] = media;\r\n        } else {\r\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\r\n          item[2] = media;\r\n        }\r\n      }\r\n      if (supports) {\r\n        if (!item[4]) {\r\n          item[4] = \"\".concat(supports);\r\n        } else {\r\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\r\n          item[4] = supports;\r\n        }\r\n      }\r\n      list.push(item);\r\n    }\r\n  };\r\n  return list;\r\n};\n\n//# sourceURL=webpack://server-client/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nmodule.exports = function (i) {\r\n  return i[1];\r\n};\n\n//# sourceURL=webpack://server-client/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * jQuery JavaScript Library v3.7.1\r\n * https://jquery.com/\r\n *\r\n * Copyright OpenJS Foundation and other contributors\r\n * Released under the MIT license\r\n * https://jquery.org/license\r\n *\r\n * Date: 2023-08-28T13:37Z\r\n */\r\n( function( global, factory ) {\r\n\r\n\t\"use strict\";\r\n\r\n\tif (  true && typeof module.exports === \"object\" ) {\r\n\r\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\r\n\t\t// is present, execute the factory and get jQuery.\r\n\t\t// For environments that do not have a `window` with a `document`\r\n\t\t// (such as Node.js), expose a factory as module.exports.\r\n\t\t// This accentuates the need for the creation of a real `window`.\r\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\r\n\t\t// See ticket trac-14549 for more info.\r\n\t\tmodule.exports = global.document ?\r\n\t\t\tfactory( global, true ) :\r\n\t\t\tfunction( w ) {\r\n\t\t\t\tif ( !w.document ) {\r\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\r\n\t\t\t\t}\r\n\t\t\t\treturn factory( w );\r\n\t\t\t};\r\n\t} else {\r\n\t\tfactory( global );\r\n\t}\r\n\r\n// Pass this if window is not defined yet\r\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\r\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\r\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\r\n// enough that all such attempts are guarded in a try block.\r\n\"use strict\";\r\n\r\nvar arr = [];\r\n\r\nvar getProto = Object.getPrototypeOf;\r\n\r\nvar slice = arr.slice;\r\n\r\nvar flat = arr.flat ? function( array ) {\r\n\treturn arr.flat.call( array );\r\n} : function( array ) {\r\n\treturn arr.concat.apply( [], array );\r\n};\r\n\r\n\r\nvar push = arr.push;\r\n\r\nvar indexOf = arr.indexOf;\r\n\r\nvar class2type = {};\r\n\r\nvar toString = class2type.toString;\r\n\r\nvar hasOwn = class2type.hasOwnProperty;\r\n\r\nvar fnToString = hasOwn.toString;\r\n\r\nvar ObjectFunctionString = fnToString.call( Object );\r\n\r\nvar support = {};\r\n\r\nvar isFunction = function isFunction( obj ) {\r\n\r\n\t\t// Support: Chrome <=57, Firefox <=52\r\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\r\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\r\n\t\t// We don't want to classify *any* DOM node as a function.\r\n\t\t// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\r\n\t\t// Plus for old WebKit, typeof returns \"function\" for HTML collections\r\n\t\t// (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\r\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\" &&\r\n\t\t\ttypeof obj.item !== \"function\";\r\n\t};\r\n\r\n\r\nvar isWindow = function isWindow( obj ) {\r\n\t\treturn obj != null && obj === obj.window;\r\n\t};\r\n\r\n\r\nvar document = window.document;\r\n\r\n\r\n\r\n\tvar preservedScriptAttributes = {\r\n\t\ttype: true,\r\n\t\tsrc: true,\r\n\t\tnonce: true,\r\n\t\tnoModule: true\r\n\t};\r\n\r\n\tfunction DOMEval( code, node, doc ) {\r\n\t\tdoc = doc || document;\r\n\r\n\t\tvar i, val,\r\n\t\t\tscript = doc.createElement( \"script\" );\r\n\r\n\t\tscript.text = code;\r\n\t\tif ( node ) {\r\n\t\t\tfor ( i in preservedScriptAttributes ) {\r\n\r\n\t\t\t\t// Support: Firefox 64+, Edge 18+\r\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\r\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\r\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\r\n\t\t\t\t// becomes browsing-context connected.\r\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\r\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\r\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\r\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\r\n\t\t\t\t// via an object.\r\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n\t\t\t\tif ( val ) {\r\n\t\t\t\t\tscript.setAttribute( i, val );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\r\n\t}\r\n\r\n\r\nfunction toType( obj ) {\r\n\tif ( obj == null ) {\r\n\t\treturn obj + \"\";\r\n\t}\r\n\r\n\t// Support: Android <=2.3 only (functionish RegExp)\r\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\r\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\r\n\t\ttypeof obj;\r\n}\r\n/* global Symbol */\r\n// Defining this global in .eslintrc.json would create a danger of using the global\r\n// unguarded in another place, it seems safer to define global only for this module\r\n\r\n\r\n\r\nvar version = \"3.7.1\",\r\n\r\n\trhtmlSuffix = /HTML$/i,\r\n\r\n\t// Define a local copy of jQuery\r\n\tjQuery = function( selector, context ) {\r\n\r\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\r\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\r\n\t\treturn new jQuery.fn.init( selector, context );\r\n\t};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n\r\n\t// The current version of jQuery being used\r\n\tjquery: version,\r\n\r\n\tconstructor: jQuery,\r\n\r\n\t// The default length of a jQuery object is 0\r\n\tlength: 0,\r\n\r\n\ttoArray: function() {\r\n\t\treturn slice.call( this );\r\n\t},\r\n\r\n\t// Get the Nth element in the matched element set OR\r\n\t// Get the whole matched element set as a clean array\r\n\tget: function( num ) {\r\n\r\n\t\t// Return all the elements in a clean array\r\n\t\tif ( num == null ) {\r\n\t\t\treturn slice.call( this );\r\n\t\t}\r\n\r\n\t\t// Return just the one element from the set\r\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\r\n\t},\r\n\r\n\t// Take an array of elements and push it onto the stack\r\n\t// (returning the new matched element set)\r\n\tpushStack: function( elems ) {\r\n\r\n\t\t// Build a new jQuery matched element set\r\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\r\n\r\n\t\t// Add the old object onto the stack (as a reference)\r\n\t\tret.prevObject = this;\r\n\r\n\t\t// Return the newly-formed element set\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t// Execute a callback for every element in the matched set.\r\n\teach: function( callback ) {\r\n\t\treturn jQuery.each( this, callback );\r\n\t},\r\n\r\n\tmap: function( callback ) {\r\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\r\n\t\t\treturn callback.call( elem, i, elem );\r\n\t\t} ) );\r\n\t},\r\n\r\n\tslice: function() {\r\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\r\n\t},\r\n\r\n\tfirst: function() {\r\n\t\treturn this.eq( 0 );\r\n\t},\r\n\r\n\tlast: function() {\r\n\t\treturn this.eq( -1 );\r\n\t},\r\n\r\n\teven: function() {\r\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\r\n\t\t\treturn ( i + 1 ) % 2;\r\n\t\t} ) );\r\n\t},\r\n\r\n\todd: function() {\r\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\r\n\t\t\treturn i % 2;\r\n\t\t} ) );\r\n\t},\r\n\r\n\teq: function( i ) {\r\n\t\tvar len = this.length,\r\n\t\t\tj = +i + ( i < 0 ? len : 0 );\r\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\r\n\t},\r\n\r\n\tend: function() {\r\n\t\treturn this.prevObject || this.constructor();\r\n\t},\r\n\r\n\t// For internal use only.\r\n\t// Behaves like an Array's method, not like a jQuery method.\r\n\tpush: push,\r\n\tsort: arr.sort,\r\n\tsplice: arr.splice\r\n};\r\n\r\njQuery.extend = jQuery.fn.extend = function() {\r\n\tvar options, name, src, copy, copyIsArray, clone,\r\n\t\ttarget = arguments[ 0 ] || {},\r\n\t\ti = 1,\r\n\t\tlength = arguments.length,\r\n\t\tdeep = false;\r\n\r\n\t// Handle a deep copy situation\r\n\tif ( typeof target === \"boolean\" ) {\r\n\t\tdeep = target;\r\n\r\n\t\t// Skip the boolean and the target\r\n\t\ttarget = arguments[ i ] || {};\r\n\t\ti++;\r\n\t}\r\n\r\n\t// Handle case when target is a string or something (possible in deep copy)\r\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\r\n\t\ttarget = {};\r\n\t}\r\n\r\n\t// Extend jQuery itself if only one argument is passed\r\n\tif ( i === length ) {\r\n\t\ttarget = this;\r\n\t\ti--;\r\n\t}\r\n\r\n\tfor ( ; i < length; i++ ) {\r\n\r\n\t\t// Only deal with non-null/undefined values\r\n\t\tif ( ( options = arguments[ i ] ) != null ) {\r\n\r\n\t\t\t// Extend the base object\r\n\t\t\tfor ( name in options ) {\r\n\t\t\t\tcopy = options[ name ];\r\n\r\n\t\t\t\t// Prevent Object.prototype pollution\r\n\t\t\t\t// Prevent never-ending loop\r\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Recurse if we're merging plain objects or arrays\r\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\r\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\r\n\t\t\t\t\tsrc = target[ name ];\r\n\r\n\t\t\t\t\t// Ensure proper type for the source value\r\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\r\n\t\t\t\t\t\tclone = [];\r\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\r\n\t\t\t\t\t\tclone = {};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclone = src;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcopyIsArray = false;\r\n\r\n\t\t\t\t\t// Never move original objects, clone them\r\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n\t\t\t\t// Don't bring in undefined values\r\n\t\t\t\t} else if ( copy !== undefined ) {\r\n\t\t\t\t\ttarget[ name ] = copy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the modified object\r\n\treturn target;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Unique for each copy of jQuery on the page\r\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n\t// Assume jQuery is ready without the ready module\r\n\tisReady: true,\r\n\r\n\terror: function( msg ) {\r\n\t\tthrow new Error( msg );\r\n\t},\r\n\r\n\tnoop: function() {},\r\n\r\n\tisPlainObject: function( obj ) {\r\n\t\tvar proto, Ctor;\r\n\r\n\t\t// Detect obvious negatives\r\n\t\t// Use toString instead of jQuery.type to catch host objects\r\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tproto = getProto( obj );\r\n\r\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\r\n\t\tif ( !proto ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\r\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\r\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\r\n\t},\r\n\r\n\tisEmptyObject: function( obj ) {\r\n\t\tvar name;\r\n\r\n\t\tfor ( name in obj ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t// Evaluates a script in a provided context; falls back to the global one\r\n\t// if not specified.\r\n\tglobalEval: function( code, options, doc ) {\r\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\r\n\t},\r\n\r\n\teach: function( obj, callback ) {\r\n\t\tvar length, i = 0;\r\n\r\n\t\tif ( isArrayLike( obj ) ) {\r\n\t\t\tlength = obj.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor ( i in obj ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t},\r\n\r\n\r\n\t// Retrieve the text value of an array of DOM nodes\r\n\ttext: function( elem ) {\r\n\t\tvar node,\r\n\t\t\tret = \"\",\r\n\t\t\ti = 0,\r\n\t\t\tnodeType = elem.nodeType;\r\n\r\n\t\tif ( !nodeType ) {\r\n\r\n\t\t\t// If no nodeType, this is expected to be an array\r\n\t\t\twhile ( ( node = elem[ i++ ] ) ) {\r\n\r\n\t\t\t\t// Do not traverse comment nodes\r\n\t\t\t\tret += jQuery.text( node );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( nodeType === 1 || nodeType === 11 ) {\r\n\t\t\treturn elem.textContent;\r\n\t\t}\r\n\t\tif ( nodeType === 9 ) {\r\n\t\t\treturn elem.documentElement.textContent;\r\n\t\t}\r\n\t\tif ( nodeType === 3 || nodeType === 4 ) {\r\n\t\t\treturn elem.nodeValue;\r\n\t\t}\r\n\r\n\t\t// Do not include comment or processing instruction nodes\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t// results is for internal usage only\r\n\tmakeArray: function( arr, results ) {\r\n\t\tvar ret = results || [];\r\n\r\n\t\tif ( arr != null ) {\r\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\r\n\t\t\t\tjQuery.merge( ret,\r\n\t\t\t\t\ttypeof arr === \"string\" ?\r\n\t\t\t\t\t\t[ arr ] : arr\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpush.call( ret, arr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tinArray: function( elem, arr, i ) {\r\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\r\n\t},\r\n\r\n\tisXMLDoc: function( elem ) {\r\n\t\tvar namespace = elem && elem.namespaceURI,\r\n\t\t\tdocElem = elem && ( elem.ownerDocument || elem ).documentElement;\r\n\r\n\t\t// Assume HTML when documentElement doesn't yet exist, such as inside\r\n\t\t// document fragments.\r\n\t\treturn !rhtmlSuffix.test( namespace || docElem && docElem.nodeName || \"HTML\" );\r\n\t},\r\n\r\n\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\tmerge: function( first, second ) {\r\n\t\tvar len = +second.length,\r\n\t\t\tj = 0,\r\n\t\t\ti = first.length;\r\n\r\n\t\tfor ( ; j < len; j++ ) {\r\n\t\t\tfirst[ i++ ] = second[ j ];\r\n\t\t}\r\n\r\n\t\tfirst.length = i;\r\n\r\n\t\treturn first;\r\n\t},\r\n\r\n\tgrep: function( elems, callback, invert ) {\r\n\t\tvar callbackInverse,\r\n\t\t\tmatches = [],\r\n\t\t\ti = 0,\r\n\t\t\tlength = elems.length,\r\n\t\t\tcallbackExpect = !invert;\r\n\r\n\t\t// Go through the array, only saving the items\r\n\t\t// that pass the validator function\r\n\t\tfor ( ; i < length; i++ ) {\r\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\r\n\t\t\tif ( callbackInverse !== callbackExpect ) {\r\n\t\t\t\tmatches.push( elems[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matches;\r\n\t},\r\n\r\n\t// arg is for internal usage only\r\n\tmap: function( elems, callback, arg ) {\r\n\t\tvar length, value,\r\n\t\t\ti = 0,\r\n\t\t\tret = [];\r\n\r\n\t\t// Go through the array, translating each of the items to their new values\r\n\t\tif ( isArrayLike( elems ) ) {\r\n\t\t\tlength = elems.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Go through every key on the object,\r\n\t\t} else {\r\n\t\t\tfor ( i in elems ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Flatten any nested arrays\r\n\t\treturn flat( ret );\r\n\t},\r\n\r\n\t// A global GUID counter for objects\r\n\tguid: 1,\r\n\r\n\t// jQuery.support is not used in Core but other projects attach their\r\n\t// properties to it so it needs to exist.\r\n\tsupport: support\r\n} );\r\n\r\nif ( typeof Symbol === \"function\" ) {\r\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\r\n}\r\n\r\n// Populate the class2type map\r\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\r\n\tfunction( _i, name ) {\r\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n\t} );\r\n\r\nfunction isArrayLike( obj ) {\r\n\r\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\r\n\t// `in` check used to prevent JIT error (gh-2145)\r\n\t// hasOwn isn't used here due to false negatives\r\n\t// regarding Nodelist length in IE\r\n\tvar length = !!obj && \"length\" in obj && obj.length,\r\n\t\ttype = toType( obj );\r\n\r\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn type === \"array\" || length === 0 ||\r\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\r\n}\r\n\r\n\r\nfunction nodeName( elem, name ) {\r\n\r\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n\r\n}\r\nvar pop = arr.pop;\r\n\r\n\r\nvar sort = arr.sort;\r\n\r\n\r\nvar splice = arr.splice;\r\n\r\n\r\nvar whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\r\n\r\n\r\nvar rtrimCSS = new RegExp(\r\n\t\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\",\r\n\t\"g\"\r\n);\r\n\r\n\r\n\r\n\r\n// Note: an element does not contain itself\r\njQuery.contains = function( a, b ) {\r\n\tvar bup = b && b.parentNode;\r\n\r\n\treturn a === bup || !!( bup && bup.nodeType === 1 && (\r\n\r\n\t\t// Support: IE 9 - 11+\r\n\t\t// IE doesn't have `contains` on SVG.\r\n\t\ta.contains ?\r\n\t\t\ta.contains( bup ) :\r\n\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\r\n\t) );\r\n};\r\n\r\n\r\n\r\n\r\n// CSS string/identifier serialization\r\n// https://drafts.csswg.org/cssom/#common-serializing-idioms\r\nvar rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g;\r\n\r\nfunction fcssescape( ch, asCodePoint ) {\r\n\tif ( asCodePoint ) {\r\n\r\n\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\r\n\t\tif ( ch === \"\\0\" ) {\r\n\t\t\treturn \"\\uFFFD\";\r\n\t\t}\r\n\r\n\t\t// Control characters and (dependent upon position) numbers get escaped as code points\r\n\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\r\n\t}\r\n\r\n\t// Other potentially-special ASCII characters get backslash-escaped\r\n\treturn \"\\\\\" + ch;\r\n}\r\n\r\njQuery.escapeSelector = function( sel ) {\r\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\r\n};\r\n\r\n\r\n\r\n\r\nvar preferredDoc = document,\r\n\tpushNative = push;\r\n\r\n( function() {\r\n\r\nvar i,\r\n\tExpr,\r\n\toutermostContext,\r\n\tsortInput,\r\n\thasDuplicate,\r\n\tpush = pushNative,\r\n\r\n\t// Local document vars\r\n\tdocument,\r\n\tdocumentElement,\r\n\tdocumentIsHTML,\r\n\trbuggyQSA,\r\n\tmatches,\r\n\r\n\t// Instance-specific data\r\n\texpando = jQuery.expando,\r\n\tdirruns = 0,\r\n\tdone = 0,\r\n\tclassCache = createCache(),\r\n\ttokenCache = createCache(),\r\n\tcompilerCache = createCache(),\r\n\tnonnativeSelectorCache = createCache(),\r\n\tsortOrder = function( a, b ) {\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|\" +\r\n\t\t\"loop|multiple|open|readonly|required|scoped\",\r\n\r\n\t// Regular expressions\r\n\r\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\r\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\r\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\r\n\r\n\t// Attribute selectors: https://www.w3.org/TR/selectors/#attribute-selectors\r\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\r\n\r\n\t\t// Operator (capture 2)\r\n\t\t\"*([*^$|!~]?=)\" + whitespace +\r\n\r\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\r\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\r\n\t\twhitespace + \"*\\\\]\",\r\n\r\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\r\n\r\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\r\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\r\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\r\n\r\n\t\t// 2. simple (capture 6)\r\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\r\n\r\n\t\t// 3. anything else (capture 2)\r\n\t\t\".*\" +\r\n\t\t\")\\\\)|)\",\r\n\r\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\r\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\r\n\r\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\r\n\trleadingCombinator = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" +\r\n\t\twhitespace + \"*\" ),\r\n\trdescend = new RegExp( whitespace + \"|>\" ),\r\n\r\n\trpseudo = new RegExp( pseudos ),\r\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\r\n\r\n\tmatchExpr = {\r\n\t\tID: new RegExp( \"^#(\" + identifier + \")\" ),\r\n\t\tCLASS: new RegExp( \"^\\\\.(\" + identifier + \")\" ),\r\n\t\tTAG: new RegExp( \"^(\" + identifier + \"|[*])\" ),\r\n\t\tATTR: new RegExp( \"^\" + attributes ),\r\n\t\tPSEUDO: new RegExp( \"^\" + pseudos ),\r\n\t\tCHILD: new RegExp(\r\n\t\t\t\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\r\n\t\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\r\n\t\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\r\n\t\tbool: new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\r\n\r\n\t\t// For use in libraries implementing .is()\r\n\t\t// We use this for POS matching in `select`\r\n\t\tneedsContext: new RegExp( \"^\" + whitespace +\r\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\r\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\r\n\t},\r\n\r\n\trinputs = /^(?:input|select|textarea|button)$/i,\r\n\trheader = /^h\\d$/i,\r\n\r\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\r\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\r\n\r\n\trsibling = /[+~]/,\r\n\r\n\t// CSS escapes\r\n\t// https://www.w3.org/TR/CSS21/syndata.html#escaped-characters\r\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\r\n\t\t\"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\r\n\tfunescape = function( escape, nonHex ) {\r\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\r\n\r\n\t\tif ( nonHex ) {\r\n\r\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\r\n\t\t\treturn nonHex;\r\n\t\t}\r\n\r\n\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\r\n\t\t// Support: IE <=11+\r\n\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\r\n\t\t// surrogate pair\r\n\t\treturn high < 0 ?\r\n\t\t\tString.fromCharCode( high + 0x10000 ) :\r\n\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\r\n\t},\r\n\r\n\t// Used for iframes; see `setDocument`.\r\n\t// Support: IE 9 - 11+, Edge 12 - 18+\r\n\t// Removing the function wrapper causes a \"Permission Denied\"\r\n\t// error in IE/Edge.\r\n\tunloadHandler = function() {\r\n\t\tsetDocument();\r\n\t},\r\n\r\n\tinDisabledFieldset = addCombinator(\r\n\t\tfunction( elem ) {\r\n\t\t\treturn elem.disabled === true && nodeName( elem, \"fieldset\" );\r\n\t\t},\r\n\t\t{ dir: \"parentNode\", next: \"legend\" }\r\n\t);\r\n\r\n// Support: IE <=9 only\r\n// Accessing document.activeElement can throw unexpectedly\r\n// https://bugs.jquery.com/ticket/13393\r\nfunction safeActiveElement() {\r\n\ttry {\r\n\t\treturn document.activeElement;\r\n\t} catch ( err ) { }\r\n}\r\n\r\n// Optimize for push.apply( _, NodeList )\r\ntry {\r\n\tpush.apply(\r\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\r\n\t\tpreferredDoc.childNodes\r\n\t);\r\n\r\n\t// Support: Android <=4.0\r\n\t// Detect silently failing push.apply\r\n\t// eslint-disable-next-line no-unused-expressions\r\n\tarr[ preferredDoc.childNodes.length ].nodeType;\r\n} catch ( e ) {\r\n\tpush = {\r\n\t\tapply: function( target, els ) {\r\n\t\t\tpushNative.apply( target, slice.call( els ) );\r\n\t\t},\r\n\t\tcall: function( target ) {\r\n\t\t\tpushNative.apply( target, slice.call( arguments, 1 ) );\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction find( selector, context, results, seed ) {\r\n\tvar m, i, elem, nid, match, groups, newSelector,\r\n\t\tnewContext = context && context.ownerDocument,\r\n\r\n\t\t// nodeType defaults to 9, since context defaults to document\r\n\t\tnodeType = context ? context.nodeType : 9;\r\n\r\n\tresults = results || [];\r\n\r\n\t// Return early from calls with invalid selector or context\r\n\tif ( typeof selector !== \"string\" || !selector ||\r\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\r\n\tif ( !seed ) {\r\n\t\tsetDocument( context );\r\n\t\tcontext = context || document;\r\n\r\n\t\tif ( documentIsHTML ) {\r\n\r\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\r\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\r\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\r\n\r\n\t\t\t\t// ID selector\r\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\r\n\r\n\t\t\t\t\t// Document context\r\n\t\t\t\t\tif ( nodeType === 9 ) {\r\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\r\n\r\n\t\t\t\t\t\t\t// Support: IE 9 only\r\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\t\tif ( elem.id === m ) {\r\n\t\t\t\t\t\t\t\tpush.call( results, elem );\r\n\t\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Element context\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// Support: IE 9 only\r\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\r\n\t\t\t\t\t\t\tfind.contains( context, elem ) &&\r\n\t\t\t\t\t\t\telem.id === m ) {\r\n\r\n\t\t\t\t\t\t\tpush.call( results, elem );\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Type selector\r\n\t\t\t\t} else if ( match[ 2 ] ) {\r\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\r\n\t\t\t\t\treturn results;\r\n\r\n\t\t\t\t// Class selector\r\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && context.getElementsByClassName ) {\r\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\r\n\t\t\t\t\treturn results;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Take advantage of querySelectorAll\r\n\t\t\tif ( !nonnativeSelectorCache[ selector + \" \" ] &&\r\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) ) {\r\n\r\n\t\t\t\tnewSelector = selector;\r\n\t\t\t\tnewContext = context;\r\n\r\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\r\n\t\t\t\t// descendant combinators, which is not what we want.\r\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\r\n\t\t\t\t// list with an ID selector referencing the scope context.\r\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\r\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\r\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\r\n\t\t\t\tif ( nodeType === 1 &&\r\n\t\t\t\t\t( rdescend.test( selector ) || rleadingCombinator.test( selector ) ) ) {\r\n\r\n\t\t\t\t\t// Expand context for sibling selectors\r\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\r\n\t\t\t\t\t\tcontext;\r\n\r\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\r\n\t\t\t\t\t// supports it & if we're not changing the context.\r\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\r\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when\r\n\t\t\t\t\t// strict-comparing two documents; shallow comparisons work.\r\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\t\t\tif ( newContext != context || !support.scope ) {\r\n\r\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\r\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\r\n\t\t\t\t\t\t\tnid = jQuery.escapeSelector( nid );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prefix every selector in the list\r\n\t\t\t\t\tgroups = tokenize( selector );\r\n\t\t\t\t\ti = groups.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\r\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewSelector = groups.join( \",\" );\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tpush.apply( results,\r\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn results;\r\n\t\t\t\t} catch ( qsaError ) {\r\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif ( nid === expando ) {\r\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// All others\r\n\treturn select( selector.replace( rtrimCSS, \"$1\" ), context, results, seed );\r\n}\r\n\r\n/**\r\n * Create key-value caches of limited size\r\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\r\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\r\n *\tdeleting the oldest entry\r\n */\r\nfunction createCache() {\r\n\tvar keys = [];\r\n\r\n\tfunction cache( key, value ) {\r\n\r\n\t\t// Use (key + \" \") to avoid collision with native prototype properties\r\n\t\t// (see https://github.com/jquery/sizzle/issues/157)\r\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\r\n\r\n\t\t\t// Only keep the most recent entries\r\n\t\t\tdelete cache[ keys.shift() ];\r\n\t\t}\r\n\t\treturn ( cache[ key + \" \" ] = value );\r\n\t}\r\n\treturn cache;\r\n}\r\n\r\n/**\r\n * Mark a function for special use by jQuery selector module\r\n * @param {Function} fn The function to mark\r\n */\r\nfunction markFunction( fn ) {\r\n\tfn[ expando ] = true;\r\n\treturn fn;\r\n}\r\n\r\n/**\r\n * Support testing using an element\r\n * @param {Function} fn Passed the created element and returns a boolean result\r\n */\r\nfunction assert( fn ) {\r\n\tvar el = document.createElement( \"fieldset\" );\r\n\r\n\ttry {\r\n\t\treturn !!fn( el );\r\n\t} catch ( e ) {\r\n\t\treturn false;\r\n\t} finally {\r\n\r\n\t\t// Remove from its parent by default\r\n\t\tif ( el.parentNode ) {\r\n\t\t\tel.parentNode.removeChild( el );\r\n\t\t}\r\n\r\n\t\t// release memory in IE\r\n\t\tel = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for input types\r\n * @param {String} type\r\n */\r\nfunction createInputPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\treturn nodeName( elem, \"input\" ) && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for buttons\r\n * @param {String} type\r\n */\r\nfunction createButtonPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\treturn ( nodeName( elem, \"input\" ) || nodeName( elem, \"button\" ) ) &&\r\n\t\t\telem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for :enabled/:disabled\r\n * @param {Boolean} disabled true for :disabled; false for :enabled\r\n */\r\nfunction createDisabledPseudo( disabled ) {\r\n\r\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\r\n\treturn function( elem ) {\r\n\r\n\t\t// Only certain elements can match :enabled or :disabled\r\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\r\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\r\n\t\tif ( \"form\" in elem ) {\r\n\r\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\r\n\t\t\t// * listed form-associated elements in a disabled fieldset\r\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\r\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\r\n\t\t\t// * option elements in a disabled optgroup\r\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\r\n\t\t\t// All such elements have a \"form\" property.\r\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\r\n\r\n\t\t\t\t// Option elements defer to a parent optgroup if present\r\n\t\t\t\tif ( \"label\" in elem ) {\r\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\r\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn elem.disabled === disabled;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Support: IE 6 - 11+\r\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\r\n\t\t\t\treturn elem.isDisabled === disabled ||\r\n\r\n\t\t\t\t\t// Where there is no isDisabled, check manually\r\n\t\t\t\t\telem.isDisabled !== !disabled &&\r\n\t\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\r\n\t\t\t}\r\n\r\n\t\t\treturn elem.disabled === disabled;\r\n\r\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\r\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\r\n\t\t// even exist on them, let alone have a boolean value.\r\n\t\t} else if ( \"label\" in elem ) {\r\n\t\t\treturn elem.disabled === disabled;\r\n\t\t}\r\n\r\n\t\t// Remaining elements are neither :enabled nor :disabled\r\n\t\treturn false;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for positionals\r\n * @param {Function} fn\r\n */\r\nfunction createPositionalPseudo( fn ) {\r\n\treturn markFunction( function( argument ) {\r\n\t\targument = +argument;\r\n\t\treturn markFunction( function( seed, matches ) {\r\n\t\t\tvar j,\r\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\r\n\t\t\t\ti = matchIndexes.length;\r\n\r\n\t\t\t// Match elements found at the specified indexes\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\r\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t} );\r\n}\r\n\r\n/**\r\n * Checks a node for validity as a jQuery selector context\r\n * @param {Element|Object=} context\r\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\r\n */\r\nfunction testContext( context ) {\r\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\r\n}\r\n\r\n/**\r\n * Sets document-related variables once based on the current document\r\n * @param {Element|Object} [node] An element or document object to use to set the document\r\n * @returns {Object} Returns the current document\r\n */\r\nfunction setDocument( node ) {\r\n\tvar subWindow,\r\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\r\n\r\n\t// Return early if doc is invalid or already selected\r\n\t// Support: IE 11+, Edge 17 - 18+\r\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t// two documents; shallow comparisons work.\r\n\t// eslint-disable-next-line eqeqeq\r\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\r\n\t\treturn document;\r\n\t}\r\n\r\n\t// Update global variables\r\n\tdocument = doc;\r\n\tdocumentElement = document.documentElement;\r\n\tdocumentIsHTML = !jQuery.isXMLDoc( document );\r\n\r\n\t// Support: iOS 7 only, IE 9 - 11+\r\n\t// Older browsers didn't support unprefixed `matches`.\r\n\tmatches = documentElement.matches ||\r\n\t\tdocumentElement.webkitMatchesSelector ||\r\n\t\tdocumentElement.msMatchesSelector;\r\n\r\n\t// Support: IE 9 - 11+, Edge 12 - 18+\r\n\t// Accessing iframe documents after unload throws \"permission denied\" errors\r\n\t// (see trac-13936).\r\n\t// Limit the fix to IE & Edge Legacy; despite Edge 15+ implementing `matches`,\r\n\t// all IE 9+ and Edge Legacy versions implement `msMatchesSelector` as well.\r\n\tif ( documentElement.msMatchesSelector &&\r\n\r\n\t\t// Support: IE 11+, Edge 17 - 18+\r\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t\t// two documents; shallow comparisons work.\r\n\t\t// eslint-disable-next-line eqeqeq\r\n\t\tpreferredDoc != document &&\r\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\r\n\r\n\t\t// Support: IE 9 - 11+, Edge 12 - 18+\r\n\t\tsubWindow.addEventListener( \"unload\", unloadHandler );\r\n\t}\r\n\r\n\t// Support: IE <10\r\n\t// Check if getElementById returns elements by name\r\n\t// The broken getElementById methods don't pick up programmatically-set names,\r\n\t// so use a roundabout getElementsByName test\r\n\tsupport.getById = assert( function( el ) {\r\n\t\tdocumentElement.appendChild( el ).id = jQuery.expando;\r\n\t\treturn !document.getElementsByName ||\r\n\t\t\t!document.getElementsByName( jQuery.expando ).length;\r\n\t} );\r\n\r\n\t// Support: IE 9 only\r\n\t// Check to see if it's possible to do matchesSelector\r\n\t// on a disconnected node.\r\n\tsupport.disconnectedMatch = assert( function( el ) {\r\n\t\treturn matches.call( el, \"*\" );\r\n\t} );\r\n\r\n\t// Support: IE 9 - 11+, Edge 12 - 18+\r\n\t// IE/Edge don't support the :scope pseudo-class.\r\n\tsupport.scope = assert( function() {\r\n\t\treturn document.querySelectorAll( \":scope\" );\r\n\t} );\r\n\r\n\t// Support: Chrome 105 - 111 only, Safari 15.4 - 16.3 only\r\n\t// Make sure the `:has()` argument is parsed unforgivingly.\r\n\t// We include `*` in the test to detect buggy implementations that are\r\n\t// _selectively_ forgiving (specifically when the list includes at least\r\n\t// one valid selector).\r\n\t// Note that we treat complete lack of support for `:has()` as if it were\r\n\t// spec-compliant support, which is fine because use of `:has()` in such\r\n\t// environments will fail in the qSA path and fall back to jQuery traversal\r\n\t// anyway.\r\n\tsupport.cssHas = assert( function() {\r\n\t\ttry {\r\n\t\t\tdocument.querySelector( \":has(*,:jqfake)\" );\r\n\t\t\treturn false;\r\n\t\t} catch ( e ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t} );\r\n\r\n\t// ID filter and find\r\n\tif ( support.getById ) {\r\n\t\tExpr.filter.ID = function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t\tExpr.find.ID = function( id, context ) {\r\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\r\n\t\t\t\tvar elem = context.getElementById( id );\r\n\t\t\t\treturn elem ? [ elem ] : [];\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tExpr.filter.ID =  function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\r\n\t\t\t\t\telem.getAttributeNode( \"id\" );\r\n\t\t\t\treturn node && node.value === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\t// Support: IE 6 - 7 only\r\n\t\t// getElementById is not reliable as a find shortcut\r\n\t\tExpr.find.ID = function( id, context ) {\r\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\r\n\t\t\t\tvar node, i, elems,\r\n\t\t\t\t\telem = context.getElementById( id );\r\n\r\n\t\t\t\tif ( elem ) {\r\n\r\n\t\t\t\t\t// Verify the id attribute\r\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\r\n\t\t\t\t\tif ( node && node.value === id ) {\r\n\t\t\t\t\t\treturn [ elem ];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Fall back on getElementsByName\r\n\t\t\t\t\telems = context.getElementsByName( id );\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\r\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\r\n\t\t\t\t\t\tif ( node && node.value === id ) {\r\n\t\t\t\t\t\t\treturn [ elem ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// Tag\r\n\tExpr.find.TAG = function( tag, context ) {\r\n\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\r\n\t\t\treturn context.getElementsByTagName( tag );\r\n\r\n\t\t// DocumentFragment nodes don't have gEBTN\r\n\t\t} else {\r\n\t\t\treturn context.querySelectorAll( tag );\r\n\t\t}\r\n\t};\r\n\r\n\t// Class\r\n\tExpr.find.CLASS = function( className, context ) {\r\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\r\n\t\t\treturn context.getElementsByClassName( className );\r\n\t\t}\r\n\t};\r\n\r\n\t/* QSA/matchesSelector\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// QSA and matchesSelector support\r\n\r\n\trbuggyQSA = [];\r\n\r\n\t// Build QSA regex\r\n\t// Regex strategy adopted from Diego Perini\r\n\tassert( function( el ) {\r\n\r\n\t\tvar input;\r\n\r\n\t\tdocumentElement.appendChild( el ).innerHTML =\r\n\t\t\t\"<a id='\" + expando + \"' href='' disabled='disabled'></a>\" +\r\n\t\t\t\"<select id='\" + expando + \"-\\r\\\\' disabled='disabled'>\" +\r\n\t\t\t\"<option selected=''></option></select>\";\r\n\r\n\t\t// Support: iOS <=7 - 8 only\r\n\t\t// Boolean attributes and \"value\" are not treated correctly in some XML documents\r\n\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\r\n\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\r\n\t\t}\r\n\r\n\t\t// Support: iOS <=7 - 8 only\r\n\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\r\n\t\t\trbuggyQSA.push( \"~=\" );\r\n\t\t}\r\n\r\n\t\t// Support: iOS 8 only\r\n\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\r\n\t\t// In-page `selector#id sibling-combinator selector` fails\r\n\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\r\n\t\t\trbuggyQSA.push( \".#.+[+~]\" );\r\n\t\t}\r\n\r\n\t\t// Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+\r\n\t\t// In some of the document kinds, these selectors wouldn't work natively.\r\n\t\t// This is probably OK but for backwards compatibility we want to maintain\r\n\t\t// handling them through jQuery traversal in jQuery 3.x.\r\n\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\r\n\t\t\trbuggyQSA.push( \":checked\" );\r\n\t\t}\r\n\r\n\t\t// Support: Windows 8 Native Apps\r\n\t\t// The type and name attributes are restricted during .innerHTML assignment\r\n\t\tinput = document.createElement( \"input\" );\r\n\t\tinput.setAttribute( \"type\", \"hidden\" );\r\n\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\r\n\r\n\t\t// Support: IE 9 - 11+\r\n\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\r\n\t\t// Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+\r\n\t\t// In some of the document kinds, these selectors wouldn't work natively.\r\n\t\t// This is probably OK but for backwards compatibility we want to maintain\r\n\t\t// handling them through jQuery traversal in jQuery 3.x.\r\n\t\tdocumentElement.appendChild( el ).disabled = true;\r\n\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\r\n\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\r\n\t\t}\r\n\r\n\t\t// Support: IE 11+, Edge 15 - 18+\r\n\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\r\n\t\t// Adding a temporary attribute to the document before the selection works\r\n\t\t// around the issue.\r\n\t\t// Interestingly, IE 10 & older don't seem to have the issue.\r\n\t\tinput = document.createElement( \"input\" );\r\n\t\tinput.setAttribute( \"name\", \"\" );\r\n\t\tel.appendChild( input );\r\n\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\r\n\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\r\n\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\r\n\t\t}\r\n\t} );\r\n\r\n\tif ( !support.cssHas ) {\r\n\r\n\t\t// Support: Chrome 105 - 110+, Safari 15.4 - 16.3+\r\n\t\t// Our regular `try-catch` mechanism fails to detect natively-unsupported\r\n\t\t// pseudo-classes inside `:has()` (such as `:has(:contains(\"Foo\"))`)\r\n\t\t// in browsers that parse the `:has()` argument as a forgiving selector list.\r\n\t\t// https://drafts.csswg.org/selectors/#relational now requires the argument\r\n\t\t// to be parsed unforgivingly, but browsers have not yet fully adjusted.\r\n\t\trbuggyQSA.push( \":has\" );\r\n\t}\r\n\r\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\r\n\r\n\t/* Sorting\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Document order sorting\r\n\tsortOrder = function( a, b ) {\r\n\r\n\t\t// Flag for duplicate removal\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Sort on method existence if only one input has compareDocumentPosition\r\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\r\n\t\tif ( compare ) {\r\n\t\t\treturn compare;\r\n\t\t}\r\n\r\n\t\t// Calculate position if both inputs belong to the same document\r\n\t\t// Support: IE 11+, Edge 17 - 18+\r\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t\t// two documents; shallow comparisons work.\r\n\t\t// eslint-disable-next-line eqeqeq\r\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\r\n\t\t\ta.compareDocumentPosition( b ) :\r\n\r\n\t\t\t// Otherwise we know they are disconnected\r\n\t\t\t1;\r\n\r\n\t\t// Disconnected nodes\r\n\t\tif ( compare & 1 ||\r\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\r\n\r\n\t\t\t// Choose the first element that is related to our preferred document\r\n\t\t\t// Support: IE 11+, Edge 17 - 18+\r\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t\t\t// two documents; shallow comparisons work.\r\n\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\tif ( a === document || a.ownerDocument == preferredDoc &&\r\n\t\t\t\tfind.contains( preferredDoc, a ) ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE 11+, Edge 17 - 18+\r\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t\t\t// two documents; shallow comparisons work.\r\n\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\tif ( b === document || b.ownerDocument == preferredDoc &&\r\n\t\t\t\tfind.contains( preferredDoc, b ) ) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Maintain original order\r\n\t\t\treturn sortInput ?\r\n\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\t\t}\r\n\r\n\t\treturn compare & 4 ? -1 : 1;\r\n\t};\r\n\r\n\treturn document;\r\n}\r\n\r\nfind.matches = function( expr, elements ) {\r\n\treturn find( expr, null, null, elements );\r\n};\r\n\r\nfind.matchesSelector = function( elem, expr ) {\r\n\tsetDocument( elem );\r\n\r\n\tif ( documentIsHTML &&\r\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\r\n\t\t( !rbuggyQSA || !rbuggyQSA.test( expr ) ) ) {\r\n\r\n\t\ttry {\r\n\t\t\tvar ret = matches.call( elem, expr );\r\n\r\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\r\n\t\t\tif ( ret || support.disconnectedMatch ||\r\n\r\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\r\n\t\t\t\t\t// fragment in IE 9\r\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t} catch ( e ) {\r\n\t\t\tnonnativeSelectorCache( expr, true );\r\n\t\t}\r\n\t}\r\n\r\n\treturn find( expr, document, null, [ elem ] ).length > 0;\r\n};\r\n\r\nfind.contains = function( context, elem ) {\r\n\r\n\t// Set document vars if needed\r\n\t// Support: IE 11+, Edge 17 - 18+\r\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t// two documents; shallow comparisons work.\r\n\t// eslint-disable-next-line eqeqeq\r\n\tif ( ( context.ownerDocument || context ) != document ) {\r\n\t\tsetDocument( context );\r\n\t}\r\n\treturn jQuery.contains( context, elem );\r\n};\r\n\r\n\r\nfind.attr = function( elem, name ) {\r\n\r\n\t// Set document vars if needed\r\n\t// Support: IE 11+, Edge 17 - 18+\r\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t// two documents; shallow comparisons work.\r\n\t// eslint-disable-next-line eqeqeq\r\n\tif ( ( elem.ownerDocument || elem ) != document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\r\n\r\n\t\t// Don't get fooled by Object.prototype properties (see trac-13807)\r\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\r\n\t\t\tfn( elem, name, !documentIsHTML ) :\r\n\t\t\tundefined;\r\n\r\n\tif ( val !== undefined ) {\r\n\t\treturn val;\r\n\t}\r\n\r\n\treturn elem.getAttribute( name );\r\n};\r\n\r\nfind.error = function( msg ) {\r\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\r\n};\r\n\r\n/**\r\n * Document sorting and removing duplicates\r\n * @param {ArrayLike} results\r\n */\r\njQuery.uniqueSort = function( results ) {\r\n\tvar elem,\r\n\t\tduplicates = [],\r\n\t\tj = 0,\r\n\t\ti = 0;\r\n\r\n\t// Unless we *know* we can detect duplicates, assume their presence\r\n\t//\r\n\t// Support: Android <=4.0+\r\n\t// Testing for detecting duplicates is unpredictable so instead assume we can't\r\n\t// depend on duplicate detection in all browsers without a stable sort.\r\n\thasDuplicate = !support.sortStable;\r\n\tsortInput = !support.sortStable && slice.call( results, 0 );\r\n\tsort.call( results, sortOrder );\r\n\r\n\tif ( hasDuplicate ) {\r\n\t\twhile ( ( elem = results[ i++ ] ) ) {\r\n\t\t\tif ( elem === results[ i ] ) {\r\n\t\t\t\tj = duplicates.push( i );\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile ( j-- ) {\r\n\t\t\tsplice.call( results, duplicates[ j ], 1 );\r\n\t\t}\r\n\t}\r\n\r\n\t// Clear input after sorting to release objects\r\n\t// See https://github.com/jquery/sizzle/pull/225\r\n\tsortInput = null;\r\n\r\n\treturn results;\r\n};\r\n\r\njQuery.fn.uniqueSort = function() {\r\n\treturn this.pushStack( jQuery.uniqueSort( slice.apply( this ) ) );\r\n};\r\n\r\nExpr = jQuery.expr = {\r\n\r\n\t// Can be adjusted by the user\r\n\tcacheLength: 50,\r\n\r\n\tcreatePseudo: markFunction,\r\n\r\n\tmatch: matchExpr,\r\n\r\n\tattrHandle: {},\r\n\r\n\tfind: {},\r\n\r\n\trelative: {\r\n\t\t\">\": { dir: \"parentNode\", first: true },\r\n\t\t\" \": { dir: \"parentNode\" },\r\n\t\t\"+\": { dir: \"previousSibling\", first: true },\r\n\t\t\"~\": { dir: \"previousSibling\" }\r\n\t},\r\n\r\n\tpreFilter: {\r\n\t\tATTR: function( match ) {\r\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\r\n\r\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\r\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] || match[ 5 ] || \"\" )\r\n\t\t\t\t.replace( runescape, funescape );\r\n\r\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\r\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\r\n\t\t\t}\r\n\r\n\t\t\treturn match.slice( 0, 4 );\r\n\t\t},\r\n\r\n\t\tCHILD: function( match ) {\r\n\r\n\t\t\t/* matches from matchExpr[\"CHILD\"]\r\n\t\t\t\t1 type (only|nth|...)\r\n\t\t\t\t2 what (child|of-type)\r\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\r\n\t\t\t\t5 sign of xn-component\r\n\t\t\t\t6 x of xn-component\r\n\t\t\t\t7 sign of y-component\r\n\t\t\t\t8 y of y-component\r\n\t\t\t*/\r\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\r\n\r\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\r\n\r\n\t\t\t\t// nth-* requires argument\r\n\t\t\t\tif ( !match[ 3 ] ) {\r\n\t\t\t\t\tfind.error( match[ 0 ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\r\n\t\t\t\t// remember that false/true cast respectively to 0/1\r\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\r\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\r\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" )\r\n\t\t\t\t);\r\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\r\n\r\n\t\t\t// other types prohibit arguments\r\n\t\t\t} else if ( match[ 3 ] ) {\r\n\t\t\t\tfind.error( match[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\treturn match;\r\n\t\t},\r\n\r\n\t\tPSEUDO: function( match ) {\r\n\t\t\tvar excess,\r\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\r\n\r\n\t\t\tif ( matchExpr.CHILD.test( match[ 0 ] ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Accept quoted arguments as-is\r\n\t\t\tif ( match[ 3 ] ) {\r\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\r\n\r\n\t\t\t// Strip excess characters from unquoted arguments\r\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\r\n\r\n\t\t\t\t// Get excess from tokenize (recursively)\r\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\r\n\r\n\t\t\t\t// advance to the next closing parenthesis\r\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\r\n\r\n\t\t\t\t// excess is a negative index\r\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\r\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\r\n\t\t\t}\r\n\r\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\r\n\t\t\treturn match.slice( 0, 3 );\r\n\t\t}\r\n\t},\r\n\r\n\tfilter: {\r\n\r\n\t\tTAG: function( nodeNameSelector ) {\r\n\t\t\tvar expectedNodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn nodeNameSelector === \"*\" ?\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} :\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn nodeName( elem, expectedNodeName );\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\tCLASS: function( className ) {\r\n\t\t\tvar pattern = classCache[ className + \" \" ];\r\n\r\n\t\t\treturn pattern ||\r\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace + \")\" + className +\r\n\t\t\t\t\t\"(\" + whitespace + \"|$)\" ) ) &&\r\n\t\t\t\tclassCache( className, function( elem ) {\r\n\t\t\t\t\treturn pattern.test(\r\n\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\r\n\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\r\n\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} );\r\n\t\t},\r\n\r\n\t\tATTR: function( name, operator, check ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar result = find.attr( elem, name );\r\n\r\n\t\t\t\tif ( result == null ) {\r\n\t\t\t\t\treturn operator === \"!=\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( !operator ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult += \"\";\r\n\r\n\t\t\t\tif ( operator === \"=\" ) {\r\n\t\t\t\t\treturn result === check;\r\n\t\t\t\t}\r\n\t\t\t\tif ( operator === \"!=\" ) {\r\n\t\t\t\t\treturn result !== check;\r\n\t\t\t\t}\r\n\t\t\t\tif ( operator === \"^=\" ) {\r\n\t\t\t\t\treturn check && result.indexOf( check ) === 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ( operator === \"*=\" ) {\r\n\t\t\t\t\treturn check && result.indexOf( check ) > -1;\r\n\t\t\t\t}\r\n\t\t\t\tif ( operator === \"$=\" ) {\r\n\t\t\t\t\treturn check && result.slice( -check.length ) === check;\r\n\t\t\t\t}\r\n\t\t\t\tif ( operator === \"~=\" ) {\r\n\t\t\t\t\treturn ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" )\r\n\t\t\t\t\t\t.indexOf( check ) > -1;\r\n\t\t\t\t}\r\n\t\t\t\tif ( operator === \"|=\" ) {\r\n\t\t\t\t\treturn result === check || result.slice( 0, check.length + 1 ) === check + \"-\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tCHILD: function( type, what, _argument, first, last ) {\r\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\r\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\r\n\t\t\t\tofType = what === \"of-type\";\r\n\r\n\t\t\treturn first === 1 && last === 0 ?\r\n\r\n\t\t\t\t// Shortcut for :nth-*(n)\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn !!elem.parentNode;\r\n\t\t\t\t} :\r\n\r\n\t\t\t\tfunction( elem, _context, xml ) {\r\n\t\t\t\t\tvar cache, outerCache, node, nodeIndex, start,\r\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\r\n\t\t\t\t\t\tparent = elem.parentNode,\r\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\r\n\t\t\t\t\t\tuseCache = !xml && !ofType,\r\n\t\t\t\t\t\tdiff = false;\r\n\r\n\t\t\t\t\tif ( parent ) {\r\n\r\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\r\n\t\t\t\t\t\tif ( simple ) {\r\n\t\t\t\t\t\t\twhile ( dir ) {\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\r\n\t\t\t\t\t\t\t\t\tif ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnodeName( node, name ) :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\r\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\r\n\r\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\r\n\t\t\t\t\t\tif ( forward && useCache ) {\r\n\r\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\r\n\t\t\t\t\t\t\touterCache = parent[ expando ] || ( parent[ expando ] = {} );\r\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\r\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\r\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\r\n\r\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\r\n\r\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\r\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\r\n\r\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\r\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\r\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Use previously-cached element index if available\r\n\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\r\n\t\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\r\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// xml :nth-child(...)\r\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\r\n\t\t\t\t\t\t\tif ( diff === false ) {\r\n\r\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\r\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\r\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnodeName( node, name ) :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\r\n\t\t\t\t\t\t\t\t\t\t++diff ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\r\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\r\n\t\t\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, diff ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\r\n\t\t\t\t\t\tdiff -= last;\r\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\tPSEUDO: function( pseudo, argument ) {\r\n\r\n\t\t\t// pseudo-class names are case-insensitive\r\n\t\t\t// https://www.w3.org/TR/selectors/#pseudo-classes\r\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\r\n\t\t\t// Remember that setFilters inherits from pseudos\r\n\t\t\tvar args,\r\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\r\n\t\t\t\t\tfind.error( \"unsupported pseudo: \" + pseudo );\r\n\r\n\t\t\t// The user may use createPseudo to indicate that\r\n\t\t\t// arguments are needed to create the filter function\r\n\t\t\t// just as jQuery does\r\n\t\t\tif ( fn[ expando ] ) {\r\n\t\t\t\treturn fn( argument );\r\n\t\t\t}\r\n\r\n\t\t\t// But maintain support for old signatures\r\n\t\t\tif ( fn.length > 1 ) {\r\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\r\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\r\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\r\n\t\t\t\t\t\tvar idx,\r\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\r\n\t\t\t\t\t\t\ti = matched.length;\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tidx = indexOf.call( seed, matched[ i ] );\r\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} ) :\r\n\t\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\t\treturn fn( elem, 0, args );\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn fn;\r\n\t\t}\r\n\t},\r\n\r\n\tpseudos: {\r\n\r\n\t\t// Potentially complex pseudos\r\n\t\tnot: markFunction( function( selector ) {\r\n\r\n\t\t\t// Trim the selector passed to compile\r\n\t\t\t// to avoid treating leading and trailing\r\n\t\t\t// spaces as combinators\r\n\t\t\tvar input = [],\r\n\t\t\t\tresults = [],\r\n\t\t\t\tmatcher = compile( selector.replace( rtrimCSS, \"$1\" ) );\r\n\r\n\t\t\treturn matcher[ expando ] ?\r\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\r\n\t\t\t\t\tvar elem,\r\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\r\n\t\t\t\t\t\ti = seed.length;\r\n\r\n\t\t\t\t\t// Match elements unmatched by `matcher`\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\r\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} ) :\r\n\t\t\t\tfunction( elem, _context, xml ) {\r\n\t\t\t\t\tinput[ 0 ] = elem;\r\n\t\t\t\t\tmatcher( input, null, xml, results );\r\n\r\n\t\t\t\t\t// Don't keep the element\r\n\t\t\t\t\t// (see https://github.com/jquery/sizzle/issues/299)\r\n\t\t\t\t\tinput[ 0 ] = null;\r\n\t\t\t\t\treturn !results.pop();\r\n\t\t\t\t};\r\n\t\t} ),\r\n\r\n\t\thas: markFunction( function( selector ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn find( selector, elem ).length > 0;\r\n\t\t\t};\r\n\t\t} ),\r\n\r\n\t\tcontains: markFunction( function( text ) {\r\n\t\t\ttext = text.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn ( elem.textContent || jQuery.text( elem ) ).indexOf( text ) > -1;\r\n\t\t\t};\r\n\t\t} ),\r\n\r\n\t\t// \"Whether an element is represented by a :lang() selector\r\n\t\t// is based solely on the element's language value\r\n\t\t// being equal to the identifier C,\r\n\t\t// or beginning with the identifier C immediately followed by \"-\".\r\n\t\t// The matching of C against the element's language value is performed case-insensitively.\r\n\t\t// The identifier C does not have to be a valid language name.\"\r\n\t\t// https://www.w3.org/TR/selectors/#lang-pseudo\r\n\t\tlang: markFunction( function( lang ) {\r\n\r\n\t\t\t// lang value must be a valid identifier\r\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\r\n\t\t\t\tfind.error( \"unsupported lang: \" + lang );\r\n\t\t\t}\r\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar elemLang;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\r\n\t\t\t\t\t\telem.lang :\r\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\r\n\r\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\r\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\t\t} ),\r\n\r\n\t\t// Miscellaneous\r\n\t\ttarget: function( elem ) {\r\n\t\t\tvar hash = window.location && window.location.hash;\r\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\r\n\t\t},\r\n\r\n\t\troot: function( elem ) {\r\n\t\t\treturn elem === documentElement;\r\n\t\t},\r\n\r\n\t\tfocus: function( elem ) {\r\n\t\t\treturn elem === safeActiveElement() &&\r\n\t\t\t\tdocument.hasFocus() &&\r\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\r\n\t\t},\r\n\r\n\t\t// Boolean properties\r\n\t\tenabled: createDisabledPseudo( false ),\r\n\t\tdisabled: createDisabledPseudo( true ),\r\n\r\n\t\tchecked: function( elem ) {\r\n\r\n\t\t\t// In CSS3, :checked should return both checked and selected elements\r\n\t\t\t// https://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\treturn ( nodeName( elem, \"input\" ) && !!elem.checked ) ||\r\n\t\t\t\t( nodeName( elem, \"option\" ) && !!elem.selected );\r\n\t\t},\r\n\r\n\t\tselected: function( elem ) {\r\n\r\n\t\t\t// Support: IE <=11+\r\n\t\t\t// Accessing the selectedIndex property\r\n\t\t\t// forces the browser to treat the default option as\r\n\t\t\t// selected when in an optgroup.\r\n\t\t\tif ( elem.parentNode ) {\r\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\r\n\t\t\t\telem.parentNode.selectedIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn elem.selected === true;\r\n\t\t},\r\n\r\n\t\t// Contents\r\n\t\tempty: function( elem ) {\r\n\r\n\t\t\t// https://www.w3.org/TR/selectors/#empty-pseudo\r\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\r\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\r\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tif ( elem.nodeType < 6 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tparent: function( elem ) {\r\n\t\t\treturn !Expr.pseudos.empty( elem );\r\n\t\t},\r\n\r\n\t\t// Element/input types\r\n\t\theader: function( elem ) {\r\n\t\t\treturn rheader.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\tinput: function( elem ) {\r\n\t\t\treturn rinputs.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\tbutton: function( elem ) {\r\n\t\t\treturn nodeName( elem, \"input\" ) && elem.type === \"button\" ||\r\n\t\t\t\tnodeName( elem, \"button\" );\r\n\t\t},\r\n\r\n\t\ttext: function( elem ) {\r\n\t\t\tvar attr;\r\n\t\t\treturn nodeName( elem, \"input\" ) && elem.type === \"text\" &&\r\n\r\n\t\t\t\t// Support: IE <10 only\r\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear\r\n\t\t\t\t// with elem.type === \"text\"\r\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\r\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\r\n\t\t},\r\n\r\n\t\t// Position-in-collection\r\n\t\tfirst: createPositionalPseudo( function() {\r\n\t\t\treturn [ 0 ];\r\n\t\t} ),\r\n\r\n\t\tlast: createPositionalPseudo( function( _matchIndexes, length ) {\r\n\t\t\treturn [ length - 1 ];\r\n\t\t} ),\r\n\r\n\t\teq: createPositionalPseudo( function( _matchIndexes, length, argument ) {\r\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\r\n\t\t} ),\r\n\r\n\t\teven: createPositionalPseudo( function( matchIndexes, length ) {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t} ),\r\n\r\n\t\todd: createPositionalPseudo( function( matchIndexes, length ) {\r\n\t\t\tvar i = 1;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t} ),\r\n\r\n\t\tlt: createPositionalPseudo( function( matchIndexes, length, argument ) {\r\n\t\t\tvar i;\r\n\r\n\t\t\tif ( argument < 0 ) {\r\n\t\t\t\ti = argument + length;\r\n\t\t\t} else if ( argument > length ) {\r\n\t\t\t\ti = length;\r\n\t\t\t} else {\r\n\t\t\t\ti = argument;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; --i >= 0; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t} ),\r\n\r\n\t\tgt: createPositionalPseudo( function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; ++i < length; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t} )\r\n\t}\r\n};\r\n\r\nExpr.pseudos.nth = Expr.pseudos.eq;\r\n\r\n// Add button/input type pseudos\r\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n\tExpr.pseudos[ i ] = createInputPseudo( i );\r\n}\r\nfor ( i in { submit: true, reset: true } ) {\r\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\r\n}\r\n\r\n// Easy API for creating new setFilters\r\nfunction setFilters() {}\r\nsetFilters.prototype = Expr.filters = Expr.pseudos;\r\nExpr.setFilters = new setFilters();\r\n\r\nfunction tokenize( selector, parseOnly ) {\r\n\tvar matched, match, tokens, type,\r\n\t\tsoFar, groups, preFilters,\r\n\t\tcached = tokenCache[ selector + \" \" ];\r\n\r\n\tif ( cached ) {\r\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\r\n\t}\r\n\r\n\tsoFar = selector;\r\n\tgroups = [];\r\n\tpreFilters = Expr.preFilter;\r\n\r\n\twhile ( soFar ) {\r\n\r\n\t\t// Comma and first run\r\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\r\n\t\t\tif ( match ) {\r\n\r\n\t\t\t\t// Don't consume trailing commas as valid\r\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\r\n\t\t\t}\r\n\t\t\tgroups.push( ( tokens = [] ) );\r\n\t\t}\r\n\r\n\t\tmatched = false;\r\n\r\n\t\t// Combinators\r\n\t\tif ( ( match = rleadingCombinator.exec( soFar ) ) ) {\r\n\t\t\tmatched = match.shift();\r\n\t\t\ttokens.push( {\r\n\t\t\t\tvalue: matched,\r\n\r\n\t\t\t\t// Cast descendant combinators to space\r\n\t\t\t\ttype: match[ 0 ].replace( rtrimCSS, \" \" )\r\n\t\t\t} );\r\n\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t}\r\n\r\n\t\t// Filters\r\n\t\tfor ( type in Expr.filter ) {\r\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\r\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\r\n\t\t\t\tmatched = match.shift();\r\n\t\t\t\ttokens.push( {\r\n\t\t\t\t\tvalue: matched,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tmatches: match\r\n\t\t\t\t} );\r\n\t\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !matched ) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the length of the invalid excess\r\n\t// if we're just parsing\r\n\t// Otherwise, throw an error or return tokens\r\n\tif ( parseOnly ) {\r\n\t\treturn soFar.length;\r\n\t}\r\n\r\n\treturn soFar ?\r\n\t\tfind.error( selector ) :\r\n\r\n\t\t// Cache the tokens\r\n\t\ttokenCache( selector, groups ).slice( 0 );\r\n}\r\n\r\nfunction toSelector( tokens ) {\r\n\tvar i = 0,\r\n\t\tlen = tokens.length,\r\n\t\tselector = \"\";\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tselector += tokens[ i ].value;\r\n\t}\r\n\treturn selector;\r\n}\r\n\r\nfunction addCombinator( matcher, combinator, base ) {\r\n\tvar dir = combinator.dir,\r\n\t\tskip = combinator.next,\r\n\t\tkey = skip || dir,\r\n\t\tcheckNonElements = base && key === \"parentNode\",\r\n\t\tdoneName = done++;\r\n\r\n\treturn combinator.first ?\r\n\r\n\t\t// Check against closest ancestor/preceding element\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\r\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\treturn matcher( elem, context, xml );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t} :\r\n\r\n\t\t// Check against all ancestor/preceding elements\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar oldCache, outerCache,\r\n\t\t\t\tnewCache = [ dirruns, doneName ];\r\n\r\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\r\n\t\t\tif ( xml ) {\r\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\r\n\r\n\t\t\t\t\t\tif ( skip && nodeName( elem, skip ) ) {\r\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\r\n\t\t\t\t\t\t} else if ( ( oldCache = outerCache[ key ] ) &&\r\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\r\n\r\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\touterCache[ key ] = newCache;\r\n\r\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\r\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n}\r\n\r\nfunction elementMatcher( matchers ) {\r\n\treturn matchers.length > 1 ?\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar i = matchers.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} :\r\n\t\tmatchers[ 0 ];\r\n}\r\n\r\nfunction multipleContexts( selector, contexts, results ) {\r\n\tvar i = 0,\r\n\t\tlen = contexts.length;\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tfind( selector, contexts[ i ], results );\r\n\t}\r\n\treturn results;\r\n}\r\n\r\nfunction condense( unmatched, map, filter, context, xml ) {\r\n\tvar elem,\r\n\t\tnewUnmatched = [],\r\n\t\ti = 0,\r\n\t\tlen = unmatched.length,\r\n\t\tmapped = map != null;\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( ( elem = unmatched[ i ] ) ) {\r\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\r\n\t\t\t\tnewUnmatched.push( elem );\r\n\t\t\t\tif ( mapped ) {\r\n\t\t\t\t\tmap.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn newUnmatched;\r\n}\r\n\r\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\r\n\tif ( postFilter && !postFilter[ expando ] ) {\r\n\t\tpostFilter = setMatcher( postFilter );\r\n\t}\r\n\tif ( postFinder && !postFinder[ expando ] ) {\r\n\t\tpostFinder = setMatcher( postFinder, postSelector );\r\n\t}\r\n\treturn markFunction( function( seed, results, context, xml ) {\r\n\t\tvar temp, i, elem, matcherOut,\r\n\t\t\tpreMap = [],\r\n\t\t\tpostMap = [],\r\n\t\t\tpreexisting = results.length,\r\n\r\n\t\t\t// Get initial elements from seed or context\r\n\t\t\telems = seed ||\r\n\t\t\t\tmultipleContexts( selector || \"*\",\r\n\t\t\t\t\tcontext.nodeType ? [ context ] : context, [] ),\r\n\r\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\r\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\r\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\r\n\t\t\t\telems;\r\n\r\n\t\tif ( matcher ) {\r\n\r\n\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter\r\n\t\t\t// or preexisting results,\r\n\t\t\tmatcherOut = postFinder || ( seed ? preFilter : preexisting || postFilter ) ?\r\n\r\n\t\t\t\t// ...intermediate processing is necessary\r\n\t\t\t\t[] :\r\n\r\n\t\t\t\t// ...otherwise use results directly\r\n\t\t\t\tresults;\r\n\r\n\t\t\t// Find primary matches\r\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\r\n\t\t} else {\r\n\t\t\tmatcherOut = matcherIn;\r\n\t\t}\r\n\r\n\t\t// Apply postFilter\r\n\t\tif ( postFilter ) {\r\n\t\t\ttemp = condense( matcherOut, postMap );\r\n\t\t\tpostFilter( temp, [], context, xml );\r\n\r\n\t\t\t// Un-match failing elements by moving them back to matcherIn\r\n\t\t\ti = temp.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\r\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( seed ) {\r\n\t\t\tif ( postFinder || preFilter ) {\r\n\t\t\t\tif ( postFinder ) {\r\n\r\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\r\n\t\t\t\t\ttemp = [];\r\n\t\t\t\t\ti = matcherOut.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\r\n\r\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\r\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\r\n\t\t\t\ti = matcherOut.length;\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\r\n\t\t\t\t\t\t( temp = postFinder ? indexOf.call( seed, elem ) : preMap[ i ] ) > -1 ) {\r\n\r\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Add elements to results, through postFinder if defined\r\n\t\t} else {\r\n\t\t\tmatcherOut = condense(\r\n\t\t\t\tmatcherOut === results ?\r\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\r\n\t\t\t\t\tmatcherOut\r\n\t\t\t);\r\n\t\t\tif ( postFinder ) {\r\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\r\n\t\t\t} else {\r\n\t\t\t\tpush.apply( results, matcherOut );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\nfunction matcherFromTokens( tokens ) {\r\n\tvar checkContext, matcher, j,\r\n\t\tlen = tokens.length,\r\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\r\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\r\n\t\ti = leadingRelative ? 1 : 0,\r\n\r\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\r\n\t\tmatchContext = addCombinator( function( elem ) {\r\n\t\t\treturn elem === checkContext;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchAnyContext = addCombinator( function( elem ) {\r\n\t\t\treturn indexOf.call( checkContext, elem ) > -1;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchers = [ function( elem, context, xml ) {\r\n\r\n\t\t\t// Support: IE 11+, Edge 17 - 18+\r\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t\t\t// two documents; shallow comparisons work.\r\n\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\tvar ret = ( !leadingRelative && ( xml || context != outermostContext ) ) || (\r\n\t\t\t\t( checkContext = context ).nodeType ?\r\n\t\t\t\t\tmatchContext( elem, context, xml ) :\r\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\r\n\r\n\t\t\t// Avoid hanging onto element\r\n\t\t\t// (see https://github.com/jquery/sizzle/issues/299)\r\n\t\t\tcheckContext = null;\r\n\t\t\treturn ret;\r\n\t\t} ];\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\r\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\r\n\t\t} else {\r\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\r\n\r\n\t\t\t// Return special upon seeing a positional matcher\r\n\t\t\tif ( matcher[ expando ] ) {\r\n\r\n\t\t\t\t// Find the next relative operator (if any) for proper handling\r\n\t\t\t\tj = ++i;\r\n\t\t\t\tfor ( ; j < len; j++ ) {\r\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn setMatcher(\r\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\r\n\t\t\t\t\ti > 1 && toSelector(\r\n\r\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\r\n\t\t\t\t\t\ttokens.slice( 0, i - 1 )\r\n\t\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\r\n\t\t\t\t\t).replace( rtrimCSS, \"$1\" ),\r\n\t\t\t\t\tmatcher,\r\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\r\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\r\n\t\t\t\t\tj < len && toSelector( tokens )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tmatchers.push( matcher );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elementMatcher( matchers );\r\n}\r\n\r\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\r\n\tvar bySet = setMatchers.length > 0,\r\n\t\tbyElement = elementMatchers.length > 0,\r\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\r\n\t\t\tvar elem, j, matcher,\r\n\t\t\t\tmatchedCount = 0,\r\n\t\t\t\ti = \"0\",\r\n\t\t\t\tunmatched = seed && [],\r\n\t\t\t\tsetMatched = [],\r\n\t\t\t\tcontextBackup = outermostContext,\r\n\r\n\t\t\t\t// We must always have either seed elements or outermost context\r\n\t\t\t\telems = seed || byElement && Expr.find.TAG( \"*\", outermost ),\r\n\r\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\r\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\r\n\t\t\t\tlen = elems.length;\r\n\r\n\t\t\tif ( outermost ) {\r\n\r\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\r\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t\t\t\t// two documents; shallow comparisons work.\r\n\t\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\t\toutermostContext = context == document || context || outermost;\r\n\t\t\t}\r\n\r\n\t\t\t// Add elements passing elementMatchers directly to results\r\n\t\t\t// Support: iOS <=7 - 9 only\r\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching\r\n\t\t\t// elements by id. (see trac-14142)\r\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\r\n\t\t\t\tif ( byElement && elem ) {\r\n\t\t\t\t\tj = 0;\r\n\r\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\r\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\r\n\t\t\t\t\t// two documents; shallow comparisons work.\r\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\r\n\t\t\t\t\t\tsetDocument( elem );\r\n\t\t\t\t\t\txml = !documentIsHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\r\n\t\t\t\t\t\t\tpush.call( results, elem );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( outermost ) {\r\n\t\t\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Track unmatched elements for set filters\r\n\t\t\t\tif ( bySet ) {\r\n\r\n\t\t\t\t\t// They will have gone through all possible matchers\r\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\r\n\t\t\t\t\t\tmatchedCount--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lengthen the array for every element, matched or not\r\n\t\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t\tunmatched.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\r\n\t\t\t// makes the latter nonnegative.\r\n\t\t\tmatchedCount += i;\r\n\r\n\t\t\t// Apply set filters to unmatched elements\r\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\r\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\r\n\t\t\t// no element matchers and no seed.\r\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\r\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\r\n\t\t\t// numerically zero.\r\n\t\t\tif ( bySet && i !== matchedCount ) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\r\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( seed ) {\r\n\r\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\r\n\t\t\t\t\tif ( matchedCount > 0 ) {\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\r\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\r\n\t\t\t\t\tsetMatched = condense( setMatched );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add matches to results\r\n\t\t\t\tpush.apply( results, setMatched );\r\n\r\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\r\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\r\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\r\n\r\n\t\t\t\t\tjQuery.uniqueSort( results );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Override manipulation of globals by nested matchers\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\toutermostContext = contextBackup;\r\n\t\t\t}\r\n\r\n\t\t\treturn unmatched;\r\n\t\t};\r\n\r\n\treturn bySet ?\r\n\t\tmarkFunction( superMatcher ) :\r\n\t\tsuperMatcher;\r\n}\r\n\r\nfunction compile( selector, match /* Internal Use Only */ ) {\r\n\tvar i,\r\n\t\tsetMatchers = [],\r\n\t\telementMatchers = [],\r\n\t\tcached = compilerCache[ selector + \" \" ];\r\n\r\n\tif ( !cached ) {\r\n\r\n\t\t// Generate a function of recursive functions that can be used to check each element\r\n\t\tif ( !match ) {\r\n\t\t\tmatch = tokenize( selector );\r\n\t\t}\r\n\t\ti = match.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tcached = matcherFromTokens( match[ i ] );\r\n\t\t\tif ( cached[ expando ] ) {\r\n\t\t\t\tsetMatchers.push( cached );\r\n\t\t\t} else {\r\n\t\t\t\telementMatchers.push( cached );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache the compiled function\r\n\t\tcached = compilerCache( selector,\r\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers ) );\r\n\r\n\t\t// Save selector and tokenization\r\n\t\tcached.selector = selector;\r\n\t}\r\n\treturn cached;\r\n}\r\n\r\n/**\r\n * A low-level selection function that works with jQuery's compiled\r\n *  selector functions\r\n * @param {String|Function} selector A selector or a pre-compiled\r\n *  selector function built with jQuery selector compile\r\n * @param {Element} context\r\n * @param {Array} [results]\r\n * @param {Array} [seed] A set of elements to match against\r\n */\r\nfunction select( selector, context, results, seed ) {\r\n\tvar i, tokens, token, type, find,\r\n\t\tcompiled = typeof selector === \"function\" && selector,\r\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\r\n\r\n\tresults = results || [];\r\n\r\n\t// Try to minimize operations if there is only one selector in the list and no seed\r\n\t// (the latter of which guarantees us context)\r\n\tif ( match.length === 1 ) {\r\n\r\n\t\t// Reduce context if the leading compound selector is an ID\r\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\r\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\r\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\r\n\r\n\t\t\tcontext = ( Expr.find.ID(\r\n\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\r\n\t\t\t\tcontext\r\n\t\t\t) || [] )[ 0 ];\r\n\t\t\tif ( !context ) {\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\r\n\t\t\t} else if ( compiled ) {\r\n\t\t\t\tcontext = context.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tselector = selector.slice( tokens.shift().value.length );\r\n\t\t}\r\n\r\n\t\t// Fetch a seed set for right-to-left matching\r\n\t\ti = matchExpr.needsContext.test( selector ) ? 0 : tokens.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\ttoken = tokens[ i ];\r\n\r\n\t\t\t// Abort if we hit a combinator\r\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\r\n\r\n\t\t\t\t// Search, expanding context for leading sibling combinators\r\n\t\t\t\tif ( ( seed = find(\r\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\r\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) &&\r\n\t\t\t\t\t\ttestContext( context.parentNode ) || context\r\n\t\t\t\t) ) ) {\r\n\r\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\r\n\t\t\t\t\ttokens.splice( i, 1 );\r\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\r\n\t\t\t\t\tif ( !selector ) {\r\n\t\t\t\t\t\tpush.apply( results, seed );\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Compile and execute a filtering function if one is not provided\r\n\t// Provide `match` to avoid retokenization if we modified the selector above\r\n\t( compiled || compile( selector, match ) )(\r\n\t\tseed,\r\n\t\tcontext,\r\n\t\t!documentIsHTML,\r\n\t\tresults,\r\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\r\n\t);\r\n\treturn results;\r\n}\r\n\r\n// One-time assignments\r\n\r\n// Support: Android <=4.0 - 4.1+\r\n// Sort stability\r\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\r\n\r\n// Initialize against the default document\r\nsetDocument();\r\n\r\n// Support: Android <=4.0 - 4.1+\r\n// Detached nodes confoundingly follow *each other*\r\nsupport.sortDetached = assert( function( el ) {\r\n\r\n\t// Should return 1, but returns 4 (following)\r\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\r\n} );\r\n\r\njQuery.find = find;\r\n\r\n// Deprecated\r\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\r\njQuery.unique = jQuery.uniqueSort;\r\n\r\n// These have always been private, but they used to be documented as part of\r\n// Sizzle so let's maintain them for now for backwards compatibility purposes.\r\nfind.compile = compile;\r\nfind.select = select;\r\nfind.setDocument = setDocument;\r\nfind.tokenize = tokenize;\r\n\r\nfind.escape = jQuery.escapeSelector;\r\nfind.getText = jQuery.text;\r\nfind.isXML = jQuery.isXMLDoc;\r\nfind.selectors = jQuery.expr;\r\nfind.support = jQuery.support;\r\nfind.uniqueSort = jQuery.uniqueSort;\r\n\r\n\t/* eslint-enable */\r\n\r\n} )();\r\n\r\n\r\nvar dir = function( elem, dir, until ) {\r\n\tvar matched = [],\r\n\t\ttruncate = until !== undefined;\r\n\r\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\r\n\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tmatched.push( elem );\r\n\t\t}\r\n\t}\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar siblings = function( n, elem ) {\r\n\tvar matched = [];\r\n\r\n\tfor ( ; n; n = n.nextSibling ) {\r\n\t\tif ( n.nodeType === 1 && n !== elem ) {\r\n\t\t\tmatched.push( n );\r\n\t\t}\r\n\t}\r\n\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar rneedsContext = jQuery.expr.match.needsContext;\r\n\r\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\r\n\r\n\r\n\r\n// Implement the identical functionality for filter and not\r\nfunction winnow( elements, qualifier, not ) {\r\n\tif ( isFunction( qualifier ) ) {\r\n\t\treturn jQuery.grep( elements, function( elem, i ) {\r\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\r\n\t\t} );\r\n\t}\r\n\r\n\t// Single element\r\n\tif ( qualifier.nodeType ) {\r\n\t\treturn jQuery.grep( elements, function( elem ) {\r\n\t\t\treturn ( elem === qualifier ) !== not;\r\n\t\t} );\r\n\t}\r\n\r\n\t// Arraylike of elements (jQuery, arguments, Array)\r\n\tif ( typeof qualifier !== \"string\" ) {\r\n\t\treturn jQuery.grep( elements, function( elem ) {\r\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\r\n\t\t} );\r\n\t}\r\n\r\n\t// Filtered directly for both simple and complex selectors\r\n\treturn jQuery.filter( qualifier, elements, not );\r\n}\r\n\r\njQuery.filter = function( expr, elems, not ) {\r\n\tvar elem = elems[ 0 ];\r\n\r\n\tif ( not ) {\r\n\t\texpr = \":not(\" + expr + \")\";\r\n\t}\r\n\r\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\r\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\r\n\t}\r\n\r\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\r\n\t\treturn elem.nodeType === 1;\r\n\t} ) );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfind: function( selector ) {\r\n\t\tvar i, ret,\r\n\t\t\tlen = this.length,\r\n\t\t\tself = this;\r\n\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} ) );\r\n\t\t}\r\n\r\n\t\tret = this.pushStack( [] );\r\n\r\n\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\tjQuery.find( selector, self[ i ], ret );\r\n\t\t}\r\n\r\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\r\n\t},\r\n\tfilter: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\r\n\t},\r\n\tnot: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\r\n\t},\r\n\tis: function( selector ) {\r\n\t\treturn !!winnow(\r\n\t\t\tthis,\r\n\r\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\r\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\r\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\r\n\t\t\t\tjQuery( selector ) :\r\n\t\t\t\tselector || [],\r\n\t\t\tfalse\r\n\t\t).length;\r\n\t}\r\n} );\r\n\r\n\r\n// Initialize a jQuery object\r\n\r\n\r\n// A central reference to the root jQuery(document)\r\nvar rootjQuery,\r\n\r\n\t// A simple way to check for HTML strings\r\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)\r\n\t// Strict HTML recognition (trac-11290: must start with <)\r\n\t// Shortcut simple #id case for speed\r\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\r\n\r\n\tinit = jQuery.fn.init = function( selector, context, root ) {\r\n\t\tvar match, elem;\r\n\r\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\r\n\t\tif ( !selector ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// Method init() accepts an alternate rootjQuery\r\n\t\t// so migrate can support jQuery.sub (gh-2101)\r\n\t\troot = root || rootjQuery;\r\n\r\n\t\t// Handle HTML strings\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\t\t\tif ( selector[ 0 ] === \"<\" &&\r\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\r\n\t\t\t\tselector.length >= 3 ) {\r\n\r\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\r\n\t\t\t\tmatch = [ null, selector, null ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\tmatch = rquickExpr.exec( selector );\r\n\t\t\t}\r\n\r\n\t\t\t// Match html or make sure no context is specified for #id\r\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\r\n\r\n\t\t\t\t// HANDLE: $(html) -> $(array)\r\n\t\t\t\tif ( match[ 1 ] ) {\r\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\r\n\r\n\t\t\t\t\t// Option to run scripts is true for back-compat\r\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\r\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\r\n\t\t\t\t\t\tmatch[ 1 ],\r\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t// HANDLE: $(html, props)\r\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\r\n\t\t\t\t\t\tfor ( match in context ) {\r\n\r\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\r\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\r\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\r\n\r\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t// HANDLE: $(#id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\r\n\r\n\t\t\t\t\tif ( elem ) {\r\n\r\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\r\n\t\t\t\t\t\tthis[ 0 ] = elem;\r\n\t\t\t\t\t\tthis.length = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\r\n\t\t\t// HANDLE: $(expr, $(...))\r\n\t\t\t} else if ( !context || context.jquery ) {\r\n\t\t\t\treturn ( context || root ).find( selector );\r\n\r\n\t\t\t// HANDLE: $(expr, context)\r\n\t\t\t// (which is just equivalent to: $(context).find(expr)\r\n\t\t\t} else {\r\n\t\t\t\treturn this.constructor( context ).find( selector );\r\n\t\t\t}\r\n\r\n\t\t// HANDLE: $(DOMElement)\r\n\t\t} else if ( selector.nodeType ) {\r\n\t\t\tthis[ 0 ] = selector;\r\n\t\t\tthis.length = 1;\r\n\t\t\treturn this;\r\n\r\n\t\t// HANDLE: $(function)\r\n\t\t// Shortcut for document ready\r\n\t\t} else if ( isFunction( selector ) ) {\r\n\t\t\treturn root.ready !== undefined ?\r\n\t\t\t\troot.ready( selector ) :\r\n\r\n\t\t\t\t// Execute immediately if ready is not present\r\n\t\t\t\tselector( jQuery );\r\n\t\t}\r\n\r\n\t\treturn jQuery.makeArray( selector, this );\r\n\t};\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\ninit.prototype = jQuery.fn;\r\n\r\n// Initialize central reference\r\nrootjQuery = jQuery( document );\r\n\r\n\r\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\r\n\r\n\t// Methods guaranteed to produce a unique set when starting from a unique set\r\n\tguaranteedUnique = {\r\n\t\tchildren: true,\r\n\t\tcontents: true,\r\n\t\tnext: true,\r\n\t\tprev: true\r\n\t};\r\n\r\njQuery.fn.extend( {\r\n\thas: function( target ) {\r\n\t\tvar targets = jQuery( target, this ),\r\n\t\t\tl = targets.length;\r\n\r\n\t\treturn this.filter( function() {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tclosest: function( selectors, context ) {\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\tl = this.length,\r\n\t\t\tmatched = [],\r\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\r\n\r\n\t\t// Positional selectors never match, since there's no _selection_ context\r\n\t\tif ( !rneedsContext.test( selectors ) ) {\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\r\n\r\n\t\t\t\t\t// Always skip document fragments\r\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\r\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\r\n\r\n\t\t\t\t\t\t// Don't pass non-elements to jQuery#find\r\n\t\t\t\t\t\tcur.nodeType === 1 &&\r\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\r\n\r\n\t\t\t\t\t\tmatched.push( cur );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\r\n\t},\r\n\r\n\t// Determine the position of an element within the set\r\n\tindex: function( elem ) {\r\n\r\n\t\t// No argument, return index in parent\r\n\t\tif ( !elem ) {\r\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\r\n\t\t}\r\n\r\n\t\t// Index in selector\r\n\t\tif ( typeof elem === \"string\" ) {\r\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\r\n\t\t}\r\n\r\n\t\t// Locate the position of the desired element\r\n\t\treturn indexOf.call( this,\r\n\r\n\t\t\t// If it receives a jQuery object, the first element is used\r\n\t\t\telem.jquery ? elem[ 0 ] : elem\r\n\t\t);\r\n\t},\r\n\r\n\tadd: function( selector, context ) {\r\n\t\treturn this.pushStack(\r\n\t\t\tjQuery.uniqueSort(\r\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n\r\n\taddBack: function( selector ) {\r\n\t\treturn this.add( selector == null ?\r\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\r\n\t\t);\r\n\t}\r\n} );\r\n\r\nfunction sibling( cur, dir ) {\r\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\r\n\treturn cur;\r\n}\r\n\r\njQuery.each( {\r\n\tparent: function( elem ) {\r\n\t\tvar parent = elem.parentNode;\r\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\r\n\t},\r\n\tparents: function( elem ) {\r\n\t\treturn dir( elem, \"parentNode\" );\r\n\t},\r\n\tparentsUntil: function( elem, _i, until ) {\r\n\t\treturn dir( elem, \"parentNode\", until );\r\n\t},\r\n\tnext: function( elem ) {\r\n\t\treturn sibling( elem, \"nextSibling\" );\r\n\t},\r\n\tprev: function( elem ) {\r\n\t\treturn sibling( elem, \"previousSibling\" );\r\n\t},\r\n\tnextAll: function( elem ) {\r\n\t\treturn dir( elem, \"nextSibling\" );\r\n\t},\r\n\tprevAll: function( elem ) {\r\n\t\treturn dir( elem, \"previousSibling\" );\r\n\t},\r\n\tnextUntil: function( elem, _i, until ) {\r\n\t\treturn dir( elem, \"nextSibling\", until );\r\n\t},\r\n\tprevUntil: function( elem, _i, until ) {\r\n\t\treturn dir( elem, \"previousSibling\", until );\r\n\t},\r\n\tsiblings: function( elem ) {\r\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\r\n\t},\r\n\tchildren: function( elem ) {\r\n\t\treturn siblings( elem.firstChild );\r\n\t},\r\n\tcontents: function( elem ) {\r\n\t\tif ( elem.contentDocument != null &&\r\n\r\n\t\t\t// Support: IE 11+\r\n\t\t\t// <object> elements with no `data` attribute has an object\r\n\t\t\t// `contentDocument` with a `null` prototype.\r\n\t\t\tgetProto( elem.contentDocument ) ) {\r\n\r\n\t\t\treturn elem.contentDocument;\r\n\t\t}\r\n\r\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\r\n\t\t// Treat the template element as a regular one in browsers that\r\n\t\t// don't support it.\r\n\t\tif ( nodeName( elem, \"template\" ) ) {\r\n\t\t\telem = elem.content || elem;\r\n\t\t}\r\n\r\n\t\treturn jQuery.merge( [], elem.childNodes );\r\n\t}\r\n}, function( name, fn ) {\r\n\tjQuery.fn[ name ] = function( until, selector ) {\r\n\t\tvar matched = jQuery.map( this, fn, until );\r\n\r\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\r\n\t\t\tselector = until;\r\n\t\t}\r\n\r\n\t\tif ( selector && typeof selector === \"string\" ) {\r\n\t\t\tmatched = jQuery.filter( selector, matched );\r\n\t\t}\r\n\r\n\t\tif ( this.length > 1 ) {\r\n\r\n\t\t\t// Remove duplicates\r\n\t\t\tif ( !guaranteedUnique[ name ] ) {\r\n\t\t\t\tjQuery.uniqueSort( matched );\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse order for parents* and prev-derivatives\r\n\t\t\tif ( rparentsprev.test( name ) ) {\r\n\t\t\t\tmatched.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched );\r\n\t};\r\n} );\r\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\r\n\r\n\r\n\r\n// Convert String-formatted options into Object-formatted ones\r\nfunction createOptions( options ) {\r\n\tvar object = {};\r\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\r\n\t\tobject[ flag ] = true;\r\n\t} );\r\n\treturn object;\r\n}\r\n\r\n/*\r\n * Create a callback list using the following parameters:\r\n *\r\n *\toptions: an optional list of space-separated options that will change how\r\n *\t\t\tthe callback list behaves or a more traditional option object\r\n *\r\n * By default a callback list will act like an event callback list and can be\r\n * \"fired\" multiple times.\r\n *\r\n * Possible options:\r\n *\r\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n *\r\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n *\t\t\t\t\tvalues (like a Deferred)\r\n *\r\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n *\r\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n *\r\n */\r\njQuery.Callbacks = function( options ) {\r\n\r\n\t// Convert options from String-formatted to Object-formatted if needed\r\n\t// (we check in cache first)\r\n\toptions = typeof options === \"string\" ?\r\n\t\tcreateOptions( options ) :\r\n\t\tjQuery.extend( {}, options );\r\n\r\n\tvar // Flag to know if list is currently firing\r\n\t\tfiring,\r\n\r\n\t\t// Last fire value for non-forgettable lists\r\n\t\tmemory,\r\n\r\n\t\t// Flag to know if list was already fired\r\n\t\tfired,\r\n\r\n\t\t// Flag to prevent firing\r\n\t\tlocked,\r\n\r\n\t\t// Actual callback list\r\n\t\tlist = [],\r\n\r\n\t\t// Queue of execution data for repeatable lists\r\n\t\tqueue = [],\r\n\r\n\t\t// Index of currently firing callback (modified by add/remove as needed)\r\n\t\tfiringIndex = -1,\r\n\r\n\t\t// Fire callbacks\r\n\t\tfire = function() {\r\n\r\n\t\t\t// Enforce single-firing\r\n\t\t\tlocked = locked || options.once;\r\n\r\n\t\t\t// Execute callbacks for all pending executions,\r\n\t\t\t// respecting firingIndex overrides and runtime changes\r\n\t\t\tfired = firing = true;\r\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\r\n\t\t\t\tmemory = queue.shift();\r\n\t\t\t\twhile ( ++firingIndex < list.length ) {\r\n\r\n\t\t\t\t\t// Run callback and check for early termination\r\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\r\n\t\t\t\t\t\toptions.stopOnFalse ) {\r\n\r\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\r\n\t\t\t\t\t\tfiringIndex = list.length;\r\n\t\t\t\t\t\tmemory = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Forget the data if we're done with it\r\n\t\t\tif ( !options.memory ) {\r\n\t\t\t\tmemory = false;\r\n\t\t\t}\r\n\r\n\t\t\tfiring = false;\r\n\r\n\t\t\t// Clean up if we're done firing for good\r\n\t\t\tif ( locked ) {\r\n\r\n\t\t\t\t// Keep an empty list if we have data for future add calls\r\n\t\t\t\tif ( memory ) {\r\n\t\t\t\t\tlist = [];\r\n\r\n\t\t\t\t// Otherwise, this object is spent\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlist = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Actual Callbacks object\r\n\t\tself = {\r\n\r\n\t\t\t// Add a callback or a collection of callbacks to the list\r\n\t\t\tadd: function() {\r\n\t\t\t\tif ( list ) {\r\n\r\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfiringIndex = list.length - 1;\r\n\t\t\t\t\t\tqueue.push( memory );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t( function add( args ) {\r\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\r\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\r\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\r\n\t\t\t\t\t\t\t\t\tlist.push( arg );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Inspect recursively\r\n\t\t\t\t\t\t\t\tadd( arg );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} )( arguments );\r\n\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove a callback from the list\r\n\t\t\tremove: function() {\r\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n\t\t\t\t\t\tlist.splice( index, 1 );\r\n\r\n\t\t\t\t\t\t// Handle firing indexes\r\n\t\t\t\t\t\tif ( index <= firingIndex ) {\r\n\t\t\t\t\t\t\tfiringIndex--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Check if a given callback is in the list.\r\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\r\n\t\t\thas: function( fn ) {\r\n\t\t\t\treturn fn ?\r\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\r\n\t\t\t\t\tlist.length > 0;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove all callbacks from the list\r\n\t\t\tempty: function() {\r\n\t\t\t\tif ( list ) {\r\n\t\t\t\t\tlist = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire and .add\r\n\t\t\t// Abort any current/pending executions\r\n\t\t\t// Clear all callbacks and values\r\n\t\t\tdisable: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tlist = memory = \"\";\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tdisabled: function() {\r\n\t\t\t\treturn !list;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire\r\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\r\n\t\t\t// Abort any pending executions\r\n\t\t\tlock: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tif ( !memory && !firing ) {\r\n\t\t\t\t\tlist = memory = \"\";\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tlocked: function() {\r\n\t\t\t\treturn !!locked;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all callbacks with the given context and arguments\r\n\t\t\tfireWith: function( context, args ) {\r\n\t\t\t\tif ( !locked ) {\r\n\t\t\t\t\targs = args || [];\r\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\r\n\t\t\t\t\tqueue.push( args );\r\n\t\t\t\t\tif ( !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all the callbacks with the given arguments\r\n\t\t\tfire: function() {\r\n\t\t\t\tself.fireWith( this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// To know if the callbacks have already been called at least once\r\n\t\t\tfired: function() {\r\n\t\t\t\treturn !!fired;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\nfunction Identity( v ) {\r\n\treturn v;\r\n}\r\nfunction Thrower( ex ) {\r\n\tthrow ex;\r\n}\r\n\r\nfunction adoptValue( value, resolve, reject, noValue ) {\r\n\tvar method;\r\n\r\n\ttry {\r\n\r\n\t\t// Check for promise aspect first to privilege synchronous behavior\r\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\r\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\r\n\r\n\t\t// Other thenables\r\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\r\n\t\t\tmethod.call( value, resolve, reject );\r\n\r\n\t\t// Other non-thenables\r\n\t\t} else {\r\n\r\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\r\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\r\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\r\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\r\n\t\t}\r\n\r\n\t// For Promises/A+, convert exceptions into rejections\r\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\r\n\t// Deferred#then to conditionally suppress rejection.\r\n\t} catch ( value ) {\r\n\r\n\t\t// Support: Android 4.0 only\r\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\r\n\t\treject.apply( undefined, [ value ] );\r\n\t}\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\tDeferred: function( func ) {\r\n\t\tvar tuples = [\r\n\r\n\t\t\t\t// action, add listener, callbacks,\r\n\t\t\t\t// ... .then handlers, argument index, [final state]\r\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\r\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\r\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\r\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\r\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\r\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\r\n\t\t\t],\r\n\t\t\tstate = \"pending\",\r\n\t\t\tpromise = {\r\n\t\t\t\tstate: function() {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t},\r\n\t\t\t\talways: function() {\r\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\t\t\t\t\"catch\": function( fn ) {\r\n\t\t\t\t\treturn promise.then( null, fn );\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Keep pipe for back-compat\r\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\r\n\t\t\t\t\tvar fns = arguments;\r\n\r\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\r\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\r\n\r\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\r\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\r\n\r\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\r\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\r\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\r\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\r\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\r\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\r\n\t\t\t\t\t\t\t\t\treturned.promise()\r\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\r\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\r\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\r\n\t\t\t\t\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tfns = null;\r\n\t\t\t\t\t} ).promise();\r\n\t\t\t\t},\r\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\r\n\t\t\t\t\tvar maxDepth = 0;\r\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\r\n\t\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\t\tvar that = this,\r\n\t\t\t\t\t\t\t\targs = arguments,\r\n\t\t\t\t\t\t\t\tmightThrow = function() {\r\n\t\t\t\t\t\t\t\t\tvar returned, then;\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\r\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\r\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\r\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\r\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\r\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\r\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\r\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\r\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\r\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\r\n\t\t\t\t\t\t\t\t\tthen = returned &&\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\r\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\r\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\r\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\r\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\r\n\t\t\t\t\t\t\t\t\t\treturned.then;\r\n\r\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\r\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\r\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\r\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\r\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\r\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\r\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\r\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\r\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\r\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\r\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\r\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\r\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\r\n\t\t\t\t\t\t\t\tprocess = special ?\r\n\t\t\t\t\t\t\t\t\tmightThrow :\r\n\t\t\t\t\t\t\t\t\tfunction() {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\r\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.error );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\r\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\r\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\r\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\r\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\r\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\r\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\r\n\t\t\t\t\t\t\t// subsequent errors\r\n\t\t\t\t\t\t\tif ( depth ) {\r\n\t\t\t\t\t\t\t\tprocess();\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// Call an optional hook to record the error, in case of exception\r\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\r\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getErrorHook ) {\r\n\t\t\t\t\t\t\t\t\tprocess.error = jQuery.Deferred.getErrorHook();\r\n\r\n\t\t\t\t\t\t\t\t// The deprecated alias of the above. While the name suggests\r\n\t\t\t\t\t\t\t\t// returning the stack, not an error instance, jQuery just passes\r\n\t\t\t\t\t\t\t\t// it directly to `console.warn` so both will work; an instance\r\n\t\t\t\t\t\t\t\t// just better cooperates with source maps.\r\n\t\t\t\t\t\t\t\t} else if ( jQuery.Deferred.getStackHook ) {\r\n\t\t\t\t\t\t\t\t\tprocess.error = jQuery.Deferred.getStackHook();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\r\n\r\n\t\t\t\t\t\t// progress_handlers.add( ... )\r\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\r\n\t\t\t\t\t\t\tresolve(\r\n\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\tnewDefer,\r\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\r\n\t\t\t\t\t\t\t\t\tonProgress :\r\n\t\t\t\t\t\t\t\t\tIdentity,\r\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\r\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\r\n\t\t\t\t\t\t\tresolve(\r\n\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\tnewDefer,\r\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\r\n\t\t\t\t\t\t\t\t\tonFulfilled :\r\n\t\t\t\t\t\t\t\t\tIdentity\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// rejected_handlers.add( ... )\r\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\r\n\t\t\t\t\t\t\tresolve(\r\n\t\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\t\tnewDefer,\r\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\r\n\t\t\t\t\t\t\t\t\tonRejected :\r\n\t\t\t\t\t\t\t\t\tThrower\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} ).promise();\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Get a promise for this deferred\r\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\r\n\t\t\t\tpromise: function( obj ) {\r\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeferred = {};\r\n\r\n\t\t// Add list-specific methods\r\n\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\tvar list = tuple[ 2 ],\r\n\t\t\t\tstateString = tuple[ 5 ];\r\n\r\n\t\t\t// promise.progress = list.add\r\n\t\t\t// promise.done = list.add\r\n\t\t\t// promise.fail = list.add\r\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\r\n\r\n\t\t\t// Handle state\r\n\t\t\tif ( stateString ) {\r\n\t\t\t\tlist.add(\r\n\t\t\t\t\tfunction() {\r\n\r\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\r\n\t\t\t\t\t\t// state = \"rejected\"\r\n\t\t\t\t\t\tstate = stateString;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t// rejected_callbacks.disable\r\n\t\t\t\t\t// fulfilled_callbacks.disable\r\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\r\n\r\n\t\t\t\t\t// rejected_handlers.disable\r\n\t\t\t\t\t// fulfilled_handlers.disable\r\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\r\n\r\n\t\t\t\t\t// progress_callbacks.lock\r\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\r\n\r\n\t\t\t\t\t// progress_handlers.lock\r\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// progress_handlers.fire\r\n\t\t\t// fulfilled_handlers.fire\r\n\t\t\t// rejected_handlers.fire\r\n\t\t\tlist.add( tuple[ 3 ].fire );\r\n\r\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\r\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\r\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\r\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\r\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\r\n\t\t\t// deferred.notifyWith = list.fireWith\r\n\t\t\t// deferred.resolveWith = list.fireWith\r\n\t\t\t// deferred.rejectWith = list.fireWith\r\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\r\n\t\t} );\r\n\r\n\t\t// Make the deferred a promise\r\n\t\tpromise.promise( deferred );\r\n\r\n\t\t// Call given func if any\r\n\t\tif ( func ) {\r\n\t\t\tfunc.call( deferred, deferred );\r\n\t\t}\r\n\r\n\t\t// All done!\r\n\t\treturn deferred;\r\n\t},\r\n\r\n\t// Deferred helper\r\n\twhen: function( singleValue ) {\r\n\t\tvar\r\n\r\n\t\t\t// count of uncompleted subordinates\r\n\t\t\tremaining = arguments.length,\r\n\r\n\t\t\t// count of unprocessed arguments\r\n\t\t\ti = remaining,\r\n\r\n\t\t\t// subordinate fulfillment data\r\n\t\t\tresolveContexts = Array( i ),\r\n\t\t\tresolveValues = slice.call( arguments ),\r\n\r\n\t\t\t// the primary Deferred\r\n\t\t\tprimary = jQuery.Deferred(),\r\n\r\n\t\t\t// subordinate callback factory\r\n\t\t\tupdateFunc = function( i ) {\r\n\t\t\t\treturn function( value ) {\r\n\t\t\t\t\tresolveContexts[ i ] = this;\r\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\r\n\t\t\t\t\tif ( !( --remaining ) ) {\r\n\t\t\t\t\t\tprimary.resolveWith( resolveContexts, resolveValues );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\r\n\t\t// Single- and empty arguments are adopted like Promise.resolve\r\n\t\tif ( remaining <= 1 ) {\r\n\t\t\tadoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,\r\n\t\t\t\t!remaining );\r\n\r\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\r\n\t\t\tif ( primary.state() === \"pending\" ||\r\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\r\n\r\n\t\t\t\treturn primary.then();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Multiple arguments are aggregated like Promise.all array elements\r\n\t\twhile ( i-- ) {\r\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );\r\n\t\t}\r\n\r\n\t\treturn primary.promise();\r\n\t}\r\n} );\r\n\r\n\r\n// These usually indicate a programmer mistake during development,\r\n// warn about them ASAP rather than swallowing them by default.\r\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\r\n\r\n// If `jQuery.Deferred.getErrorHook` is defined, `asyncError` is an error\r\n// captured before the async barrier to get the original error cause\r\n// which may otherwise be hidden.\r\njQuery.Deferred.exceptionHook = function( error, asyncError ) {\r\n\r\n\t// Support: IE 8 - 9 only\r\n\t// Console exists when dev tools are open, which can happen at any time\r\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\r\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message,\r\n\t\t\terror.stack, asyncError );\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\njQuery.readyException = function( error ) {\r\n\twindow.setTimeout( function() {\r\n\t\tthrow error;\r\n\t} );\r\n};\r\n\r\n\r\n\r\n\r\n// The deferred used on DOM ready\r\nvar readyList = jQuery.Deferred();\r\n\r\njQuery.fn.ready = function( fn ) {\r\n\r\n\treadyList\r\n\t\t.then( fn )\r\n\r\n\t\t// Wrap jQuery.readyException in a function so that the lookup\r\n\t\t// happens at the time of error handling instead of callback\r\n\t\t// registration.\r\n\t\t.catch( function( error ) {\r\n\t\t\tjQuery.readyException( error );\r\n\t\t} );\r\n\r\n\treturn this;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Is the DOM ready to be used? Set to true once it occurs.\r\n\tisReady: false,\r\n\r\n\t// A counter to track how many items to wait for before\r\n\t// the ready event fires. See trac-6781\r\n\treadyWait: 1,\r\n\r\n\t// Handle when the DOM is ready\r\n\tready: function( wait ) {\r\n\r\n\t\t// Abort if there are pending holds or we're already ready\r\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remember that the DOM is ready\r\n\t\tjQuery.isReady = true;\r\n\r\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are functions bound, to execute\r\n\t\treadyList.resolveWith( document, [ jQuery ] );\r\n\t}\r\n} );\r\n\r\njQuery.ready.then = readyList.then;\r\n\r\n// The ready event handler and self cleanup method\r\nfunction completed() {\r\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\r\n\twindow.removeEventListener( \"load\", completed );\r\n\tjQuery.ready();\r\n}\r\n\r\n// Catch cases where $(document).ready() is called\r\n// after the browser event has already occurred.\r\n// Support: IE <=9 - 10 only\r\n// Older IE sometimes signals \"interactive\" too soon\r\nif ( document.readyState === \"complete\" ||\r\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\r\n\r\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n\twindow.setTimeout( jQuery.ready );\r\n\r\n} else {\r\n\r\n\t// Use the handy event callback\r\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\r\n\r\n\t// A fallback to window.onload, that will always work\r\n\twindow.addEventListener( \"load\", completed );\r\n}\r\n\r\n\r\n\r\n\r\n// Multifunctional method to get and set values of a collection\r\n// The value/s can optionally be executed if it's a function\r\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n\tvar i = 0,\r\n\t\tlen = elems.length,\r\n\t\tbulk = key == null;\r\n\r\n\t// Sets many values\r\n\tif ( toType( key ) === \"object\" ) {\r\n\t\tchainable = true;\r\n\t\tfor ( i in key ) {\r\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\r\n\t\t}\r\n\r\n\t// Sets one value\r\n\t} else if ( value !== undefined ) {\r\n\t\tchainable = true;\r\n\r\n\t\tif ( !isFunction( value ) ) {\r\n\t\t\traw = true;\r\n\t\t}\r\n\r\n\t\tif ( bulk ) {\r\n\r\n\t\t\t// Bulk operations run against the entire set\r\n\t\t\tif ( raw ) {\r\n\t\t\t\tfn.call( elems, value );\r\n\t\t\t\tfn = null;\r\n\r\n\t\t\t// ...except when executing function values\r\n\t\t\t} else {\r\n\t\t\t\tbulk = fn;\r\n\t\t\t\tfn = function( elem, _key, value ) {\r\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\tfn(\r\n\t\t\t\t\telems[ i ], key, raw ?\r\n\t\t\t\t\t\tvalue :\r\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif ( chainable ) {\r\n\t\treturn elems;\r\n\t}\r\n\r\n\t// Gets\r\n\tif ( bulk ) {\r\n\t\treturn fn.call( elems );\r\n\t}\r\n\r\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\r\n};\r\n\r\n\r\n// Matches dashed string for camelizing\r\nvar rmsPrefix = /^-ms-/,\r\n\trdashAlpha = /-([a-z])/g;\r\n\r\n// Used by camelCase as callback to replace()\r\nfunction fcamelCase( _all, letter ) {\r\n\treturn letter.toUpperCase();\r\n}\r\n\r\n// Convert dashed to camelCase; used by the css and data modules\r\n// Support: IE <=9 - 11, Edge 12 - 15\r\n// Microsoft forgot to hump their vendor prefix (trac-9572)\r\nfunction camelCase( string ) {\r\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n}\r\nvar acceptData = function( owner ) {\r\n\r\n\t// Accepts only:\r\n\t//  - Node\r\n\t//    - Node.ELEMENT_NODE\r\n\t//    - Node.DOCUMENT_NODE\r\n\t//  - Object\r\n\t//    - Any\r\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\r\n};\r\n\r\n\r\n\r\n\r\nfunction Data() {\r\n\tthis.expando = jQuery.expando + Data.uid++;\r\n}\r\n\r\nData.uid = 1;\r\n\r\nData.prototype = {\r\n\r\n\tcache: function( owner ) {\r\n\r\n\t\t// Check if the owner object already has a cache\r\n\t\tvar value = owner[ this.expando ];\r\n\r\n\t\t// If not, create one\r\n\t\tif ( !value ) {\r\n\t\t\tvalue = {};\r\n\r\n\t\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t\t// but we should not, see trac-8335.\r\n\t\t\t// Always return an empty object.\r\n\t\t\tif ( acceptData( owner ) ) {\r\n\r\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t\t\t// use plain assignment\r\n\t\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t\t\t// Otherwise secure it in a non-enumerable property\r\n\t\t\t\t// configurable must be true to allow the property to be\r\n\t\t\t\t// deleted when data is removed\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\tset: function( owner, data, value ) {\r\n\t\tvar prop,\r\n\t\t\tcache = this.cache( owner );\r\n\r\n\t\t// Handle: [ owner, key, value ] args\r\n\t\t// Always use camelCase key (gh-2257)\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\tcache[ camelCase( data ) ] = value;\r\n\r\n\t\t// Handle: [ owner, { properties } ] args\r\n\t\t} else {\r\n\r\n\t\t\t// Copy the properties one-by-one to the cache object\r\n\t\t\tfor ( prop in data ) {\r\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache;\r\n\t},\r\n\tget: function( owner, key ) {\r\n\t\treturn key === undefined ?\r\n\t\t\tthis.cache( owner ) :\r\n\r\n\t\t\t// Always use camelCase key (gh-2257)\r\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\r\n\t},\r\n\taccess: function( owner, key, value ) {\r\n\r\n\t\t// In cases where either:\r\n\t\t//\r\n\t\t//   1. No key was specified\r\n\t\t//   2. A string key was specified, but no value provided\r\n\t\t//\r\n\t\t// Take the \"read\" path and allow the get method to determine\r\n\t\t// which value to return, respectively either:\r\n\t\t//\r\n\t\t//   1. The entire cache object\r\n\t\t//   2. The data stored at the key\r\n\t\t//\r\n\t\tif ( key === undefined ||\r\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\r\n\r\n\t\t\treturn this.get( owner, key );\r\n\t\t}\r\n\r\n\t\t// When the key is not a string, or both a key and value\r\n\t\t// are specified, set or extend (existing objects) with either:\r\n\t\t//\r\n\t\t//   1. An object of properties\r\n\t\t//   2. A key and value\r\n\t\t//\r\n\t\tthis.set( owner, key, value );\r\n\r\n\t\t// Since the \"set\" path can have two possible entry points\r\n\t\t// return the expected data based on which path was taken[*]\r\n\t\treturn value !== undefined ? value : key;\r\n\t},\r\n\tremove: function( owner, key ) {\r\n\t\tvar i,\r\n\t\t\tcache = owner[ this.expando ];\r\n\r\n\t\tif ( cache === undefined ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key !== undefined ) {\r\n\r\n\t\t\t// Support array or space separated string of keys\r\n\t\t\tif ( Array.isArray( key ) ) {\r\n\r\n\t\t\t\t// If key is an array of keys...\r\n\t\t\t\t// We always set camelCase keys, so remove that.\r\n\t\t\t\tkey = key.map( camelCase );\r\n\t\t\t} else {\r\n\t\t\t\tkey = camelCase( key );\r\n\r\n\t\t\t\t// If a key with the spaces exists, use it.\r\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\r\n\t\t\t\tkey = key in cache ?\r\n\t\t\t\t\t[ key ] :\r\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\r\n\t\t\t}\r\n\r\n\t\t\ti = key.length;\r\n\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tdelete cache[ key[ i ] ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the expando if there's no more data\r\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\r\n\r\n\t\t\t// Support: Chrome <=35 - 45\r\n\t\t\t// Webkit & Blink performance suffers when deleting properties\r\n\t\t\t// from DOM nodes, so set to undefined instead\r\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\r\n\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\towner[ this.expando ] = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tdelete owner[ this.expando ];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasData: function( owner ) {\r\n\t\tvar cache = owner[ this.expando ];\r\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\r\n\t}\r\n};\r\nvar dataPriv = new Data();\r\n\r\nvar dataUser = new Data();\r\n\r\n\r\n\r\n//\tImplementation Summary\r\n//\r\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\r\n//\t2. Improve the module's maintainability by reducing the storage\r\n//\t\tpaths to a single mechanism.\r\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\r\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\r\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\r\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\r\n\r\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\r\n\trmultiDash = /[A-Z]/g;\r\n\r\nfunction getData( data ) {\r\n\tif ( data === \"true\" ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( data === \"false\" ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif ( data === \"null\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Only convert to a number if it doesn't change the string\r\n\tif ( data === +data + \"\" ) {\r\n\t\treturn +data;\r\n\t}\r\n\r\n\tif ( rbrace.test( data ) ) {\r\n\t\treturn JSON.parse( data );\r\n\t}\r\n\r\n\treturn data;\r\n}\r\n\r\nfunction dataAttr( elem, key, data ) {\r\n\tvar name;\r\n\r\n\t// If nothing was found internally, try to fetch any\r\n\t// data from the HTML5 data-* attribute\r\n\tif ( data === undefined && elem.nodeType === 1 ) {\r\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\r\n\t\tdata = elem.getAttribute( name );\r\n\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\ttry {\r\n\t\t\t\tdata = getData( data );\r\n\t\t\t} catch ( e ) {}\r\n\r\n\t\t\t// Make sure we set the data so it isn't changed later\r\n\t\t\tdataUser.set( elem, key, data );\r\n\t\t} else {\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\njQuery.extend( {\r\n\thasData: function( elem ) {\r\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\r\n\t},\r\n\r\n\tdata: function( elem, name, data ) {\r\n\t\treturn dataUser.access( elem, name, data );\r\n\t},\r\n\r\n\tremoveData: function( elem, name ) {\r\n\t\tdataUser.remove( elem, name );\r\n\t},\r\n\r\n\t// TODO: Now that all calls to _data and _removeData have been replaced\r\n\t// with direct calls to dataPriv methods, these can be deprecated.\r\n\t_data: function( elem, name, data ) {\r\n\t\treturn dataPriv.access( elem, name, data );\r\n\t},\r\n\r\n\t_removeData: function( elem, name ) {\r\n\t\tdataPriv.remove( elem, name );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tdata: function( key, value ) {\r\n\t\tvar i, name, data,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tattrs = elem && elem.attributes;\r\n\r\n\t\t// Gets all values\r\n\t\tif ( key === undefined ) {\r\n\t\t\tif ( this.length ) {\r\n\t\t\t\tdata = dataUser.get( elem );\r\n\r\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\r\n\t\t\t\t\ti = attrs.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\r\n\t\t\t\t\t\t// Support: IE 11 only\r\n\t\t\t\t\t\t// The attrs elements can be null (trac-14894)\r\n\t\t\t\t\t\tif ( attrs[ i ] ) {\r\n\t\t\t\t\t\t\tname = attrs[ i ].name;\r\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\r\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\r\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t// Sets multiple values\r\n\t\tif ( typeof key === \"object\" ) {\r\n\t\t\treturn this.each( function() {\r\n\t\t\t\tdataUser.set( this, key );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar data;\r\n\r\n\t\t\t// The calling jQuery object (element matches) is not empty\r\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\r\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\r\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\r\n\t\t\t// throw an exception if an attempt to read a data cache is made.\r\n\t\t\tif ( elem && value === undefined ) {\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// The key will always be camelCased in Data\r\n\t\t\t\tdata = dataUser.get( elem, key );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attempt to \"discover\" the data in\r\n\t\t\t\t// HTML5 custom data-* attrs\r\n\t\t\t\tdata = dataAttr( elem, key );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We tried really hard, but the data doesn't exist.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set the data...\r\n\t\t\tthis.each( function() {\r\n\r\n\t\t\t\t// We always store the camelCased key\r\n\t\t\t\tdataUser.set( this, key, value );\r\n\t\t\t} );\r\n\t\t}, null, value, arguments.length > 1, null, true );\r\n\t},\r\n\r\n\tremoveData: function( key ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdataUser.remove( this, key );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\njQuery.extend( {\r\n\tqueue: function( elem, type, data ) {\r\n\t\tvar queue;\r\n\r\n\t\tif ( elem ) {\r\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\r\n\t\t\tqueue = dataPriv.get( elem, type );\r\n\r\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\r\n\t\t\tif ( data ) {\r\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\r\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqueue.push( data );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn queue || [];\r\n\t\t}\r\n\t},\r\n\r\n\tdequeue: function( elem, type ) {\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\tvar queue = jQuery.queue( elem, type ),\r\n\t\t\tstartLength = queue.length,\r\n\t\t\tfn = queue.shift(),\r\n\t\t\thooks = jQuery._queueHooks( elem, type ),\r\n\t\t\tnext = function() {\r\n\t\t\t\tjQuery.dequeue( elem, type );\r\n\t\t\t};\r\n\r\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\r\n\t\tif ( fn === \"inprogress\" ) {\r\n\t\t\tfn = queue.shift();\r\n\t\t\tstartLength--;\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\r\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\r\n\t\t\t// automatically dequeued\r\n\t\t\tif ( type === \"fx\" ) {\r\n\t\t\t\tqueue.unshift( \"inprogress\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Clear up the last queue stop function\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tfn.call( elem, next, hooks );\r\n\t\t}\r\n\r\n\t\tif ( !startLength && hooks ) {\r\n\t\t\thooks.empty.fire();\r\n\t\t}\r\n\t},\r\n\r\n\t// Not public - generate a queueHooks object, or return the current one\r\n\t_queueHooks: function( elem, type ) {\r\n\t\tvar key = type + \"queueHooks\";\r\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\r\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\r\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\r\n\t\t\t} )\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tqueue: function( type, data ) {\r\n\t\tvar setter = 2;\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tdata = type;\r\n\t\t\ttype = \"fx\";\r\n\t\t\tsetter--;\r\n\t\t}\r\n\r\n\t\tif ( arguments.length < setter ) {\r\n\t\t\treturn jQuery.queue( this[ 0 ], type );\r\n\t\t}\r\n\r\n\t\treturn data === undefined ?\r\n\t\t\tthis :\r\n\t\t\tthis.each( function() {\r\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\r\n\r\n\t\t\t\t// Ensure a hooks for this queue\r\n\t\t\t\tjQuery._queueHooks( this, type );\r\n\r\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\r\n\t\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t},\r\n\tdequeue: function( type ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.dequeue( this, type );\r\n\t\t} );\r\n\t},\r\n\tclearQueue: function( type ) {\r\n\t\treturn this.queue( type || \"fx\", [] );\r\n\t},\r\n\r\n\t// Get a promise resolved when queues of a certain type\r\n\t// are emptied (fx is the type by default)\r\n\tpromise: function( type, obj ) {\r\n\t\tvar tmp,\r\n\t\t\tcount = 1,\r\n\t\t\tdefer = jQuery.Deferred(),\r\n\t\t\telements = this,\r\n\t\t\ti = this.length,\r\n\t\t\tresolve = function() {\r\n\t\t\t\tif ( !( --count ) ) {\r\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tobj = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\twhile ( i-- ) {\r\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\r\n\t\t\tif ( tmp && tmp.empty ) {\r\n\t\t\t\tcount++;\r\n\t\t\t\ttmp.empty.add( resolve );\r\n\t\t\t}\r\n\t\t}\r\n\t\tresolve();\r\n\t\treturn defer.promise( obj );\r\n\t}\r\n} );\r\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\r\n\r\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\r\n\r\n\r\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\r\n\r\nvar documentElement = document.documentElement;\r\n\r\n\r\n\r\n\tvar isAttached = function( elem ) {\r\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\r\n\t\t},\r\n\t\tcomposed = { composed: true };\r\n\r\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\r\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\r\n\t// Support: iOS 10.0-10.2 only\r\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\r\n\t// leading to errors. We need to check for `getRootNode`.\r\n\tif ( documentElement.getRootNode ) {\r\n\t\tisAttached = function( elem ) {\r\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\r\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\r\n\t\t};\r\n\t}\r\nvar isHiddenWithinTree = function( elem, el ) {\r\n\r\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\r\n\t\t// in that case, element will be second argument\r\n\t\telem = el || elem;\r\n\r\n\t\t// Inline style trumps all\r\n\t\treturn elem.style.display === \"none\" ||\r\n\t\t\telem.style.display === \"\" &&\r\n\r\n\t\t\t// Otherwise, check computed style\r\n\t\t\t// Support: Firefox <=43 - 45\r\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\r\n\t\t\t// in the document.\r\n\t\t\tisAttached( elem ) &&\r\n\r\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\r\n\t};\r\n\r\n\r\n\r\nfunction adjustCSS( elem, prop, valueParts, tween ) {\r\n\tvar adjusted, scale,\r\n\t\tmaxIterations = 20,\r\n\t\tcurrentValue = tween ?\r\n\t\t\tfunction() {\r\n\t\t\t\treturn tween.cur();\r\n\t\t\t} :\r\n\t\t\tfunction() {\r\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\r\n\t\t\t},\r\n\t\tinitial = currentValue(),\r\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\r\n\r\n\t\t// Starting value computation is required for potential unit mismatches\r\n\t\tinitialInUnit = elem.nodeType &&\r\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\r\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\r\n\r\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\r\n\r\n\t\t// Support: Firefox <=54\r\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\r\n\t\tinitial = initial / 2;\r\n\r\n\t\t// Trust units reported by jQuery.css\r\n\t\tunit = unit || initialInUnit[ 3 ];\r\n\r\n\t\t// Iteratively approximate from a nonzero starting point\r\n\t\tinitialInUnit = +initial || 1;\r\n\r\n\t\twhile ( maxIterations-- ) {\r\n\r\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\r\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\r\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\r\n\t\t\t\tmaxIterations = 0;\r\n\t\t\t}\r\n\t\t\tinitialInUnit = initialInUnit / scale;\r\n\r\n\t\t}\r\n\r\n\t\tinitialInUnit = initialInUnit * 2;\r\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\r\n\t\t// Make sure we update the tween properties later on\r\n\t\tvalueParts = valueParts || [];\r\n\t}\r\n\r\n\tif ( valueParts ) {\r\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\r\n\r\n\t\t// Apply relative offset (+=/-=) if specified\r\n\t\tadjusted = valueParts[ 1 ] ?\r\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\r\n\t\t\t+valueParts[ 2 ];\r\n\t\tif ( tween ) {\r\n\t\t\ttween.unit = unit;\r\n\t\t\ttween.start = initialInUnit;\r\n\t\t\ttween.end = adjusted;\r\n\t\t}\r\n\t}\r\n\treturn adjusted;\r\n}\r\n\r\n\r\nvar defaultDisplayMap = {};\r\n\r\nfunction getDefaultDisplay( elem ) {\r\n\tvar temp,\r\n\t\tdoc = elem.ownerDocument,\r\n\t\tnodeName = elem.nodeName,\r\n\t\tdisplay = defaultDisplayMap[ nodeName ];\r\n\r\n\tif ( display ) {\r\n\t\treturn display;\r\n\t}\r\n\r\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\r\n\tdisplay = jQuery.css( temp, \"display\" );\r\n\r\n\ttemp.parentNode.removeChild( temp );\r\n\r\n\tif ( display === \"none\" ) {\r\n\t\tdisplay = \"block\";\r\n\t}\r\n\tdefaultDisplayMap[ nodeName ] = display;\r\n\r\n\treturn display;\r\n}\r\n\r\nfunction showHide( elements, show ) {\r\n\tvar display, elem,\r\n\t\tvalues = [],\r\n\t\tindex = 0,\r\n\t\tlength = elements.length;\r\n\r\n\t// Determine new display value for elements that need to change\r\n\tfor ( ; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tdisplay = elem.style.display;\r\n\t\tif ( show ) {\r\n\r\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\r\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\r\n\t\t\t// inline or about-to-be-restored)\r\n\t\t\tif ( display === \"none\" ) {\r\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\r\n\t\t\t\tif ( !values[ index ] ) {\r\n\t\t\t\t\telem.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\r\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif ( display !== \"none\" ) {\r\n\t\t\t\tvalues[ index ] = \"none\";\r\n\r\n\t\t\t\t// Remember what we're overwriting\r\n\t\t\t\tdataPriv.set( elem, \"display\", display );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the display of the elements in a second loop to avoid constant reflow\r\n\tfor ( index = 0; index < length; index++ ) {\r\n\t\tif ( values[ index ] != null ) {\r\n\t\t\telements[ index ].style.display = values[ index ];\r\n\t\t}\r\n\t}\r\n\r\n\treturn elements;\r\n}\r\n\r\njQuery.fn.extend( {\r\n\tshow: function() {\r\n\t\treturn showHide( this, true );\r\n\t},\r\n\thide: function() {\r\n\t\treturn showHide( this );\r\n\t},\r\n\ttoggle: function( state ) {\r\n\t\tif ( typeof state === \"boolean\" ) {\r\n\t\t\treturn state ? this.show() : this.hide();\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tif ( isHiddenWithinTree( this ) ) {\r\n\t\t\t\tjQuery( this ).show();\r\n\t\t\t} else {\r\n\t\t\t\tjQuery( this ).hide();\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\r\n\r\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\r\n\r\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n\r\n\r\n( function() {\r\n\tvar fragment = document.createDocumentFragment(),\r\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\r\n\t\tinput = document.createElement( \"input\" );\r\n\r\n\t// Support: Android 4.0 - 4.3 only\r\n\t// Check state lost if the name is set (trac-11217)\r\n\t// Support: Windows Web Apps (WWA)\r\n\t// `name` and `type` must use .setAttribute for WWA (trac-14901)\r\n\tinput.setAttribute( \"type\", \"radio\" );\r\n\tinput.setAttribute( \"checked\", \"checked\" );\r\n\tinput.setAttribute( \"name\", \"t\" );\r\n\r\n\tdiv.appendChild( input );\r\n\r\n\t// Support: Android <=4.1 only\r\n\t// Older WebKit doesn't clone checked state correctly in fragments\r\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n\r\n\t// Support: IE <=11 only\r\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\r\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\r\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\r\n\r\n\t// Support: IE <=9 only\r\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\r\n\t// the select element.\r\n\tdiv.innerHTML = \"<option></option>\";\r\n\tsupport.option = !!div.lastChild;\r\n} )();\r\n\r\n\r\n// We have to close these tags to support XHTML (trac-13200)\r\nvar wrapMap = {\r\n\r\n\t// XHTML parsers do not magically insert elements in the\r\n\t// same way that tag soup parsers do. So we cannot shorten\r\n\t// this by omitting <tbody> or other required elements.\r\n\tthead: [ 1, \"<table>\", \"</table>\" ],\r\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\r\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\r\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\r\n\r\n\t_default: [ 0, \"\", \"\" ]\r\n};\r\n\r\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\nwrapMap.th = wrapMap.td;\r\n\r\n// Support: IE <=9 only\r\nif ( !support.option ) {\r\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\r\n}\r\n\r\n\r\nfunction getAll( context, tag ) {\r\n\r\n\t// Support: IE <=9 - 11 only\r\n\t// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)\r\n\tvar ret;\r\n\r\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\r\n\t\tret = context.getElementsByTagName( tag || \"*\" );\r\n\r\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\r\n\t\tret = context.querySelectorAll( tag || \"*\" );\r\n\r\n\t} else {\r\n\t\tret = [];\r\n\t}\r\n\r\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\r\n\t\treturn jQuery.merge( [ context ], ret );\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n\r\n// Mark scripts as having already been evaluated\r\nfunction setGlobalEval( elems, refElements ) {\r\n\tvar i = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\tdataPriv.set(\r\n\t\t\telems[ i ],\r\n\t\t\t\"globalEval\",\r\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nvar rhtml = /<|&#?\\w+;/;\r\n\r\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\r\n\tvar elem, tmp, tag, wrap, attached, j,\r\n\t\tfragment = context.createDocumentFragment(),\r\n\t\tnodes = [],\r\n\t\ti = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\telem = elems[ i ];\r\n\r\n\t\tif ( elem || elem === 0 ) {\r\n\r\n\t\t\t// Add nodes directly\r\n\t\t\tif ( toType( elem ) === \"object\" ) {\r\n\r\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\r\n\r\n\t\t\t// Convert non-html into a text node\r\n\t\t\t} else if ( !rhtml.test( elem ) ) {\r\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\r\n\r\n\t\t\t// Convert html into DOM nodes\r\n\t\t\t} else {\r\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\r\n\r\n\t\t\t\t// Deserialize a standard representation\r\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\r\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\r\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\r\n\r\n\t\t\t\t// Descend through wrappers to the right content\r\n\t\t\t\tj = wrap[ 0 ];\r\n\t\t\t\twhile ( j-- ) {\r\n\t\t\t\t\ttmp = tmp.lastChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\r\n\r\n\t\t\t\t// Remember the top-level container\r\n\t\t\t\ttmp = fragment.firstChild;\r\n\r\n\t\t\t\t// Ensure the created nodes are orphaned (trac-12392)\r\n\t\t\t\ttmp.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove wrapper from fragment\r\n\tfragment.textContent = \"\";\r\n\r\n\ti = 0;\r\n\twhile ( ( elem = nodes[ i++ ] ) ) {\r\n\r\n\t\t// Skip elements already in the context collection (trac-4087)\r\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\r\n\t\t\tif ( ignored ) {\r\n\t\t\t\tignored.push( elem );\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tattached = isAttached( elem );\r\n\r\n\t\t// Append to fragment\r\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tif ( attached ) {\r\n\t\t\tsetGlobalEval( tmp );\r\n\t\t}\r\n\r\n\t\t// Capture executables\r\n\t\tif ( scripts ) {\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\r\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\r\n\t\t\t\t\tscripts.push( elem );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn fragment;\r\n}\r\n\r\n\r\nvar rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\r\n\r\nfunction returnTrue() {\r\n\treturn true;\r\n}\r\n\r\nfunction returnFalse() {\r\n\treturn false;\r\n}\r\n\r\nfunction on( elem, types, selector, data, fn, one ) {\r\n\tvar origFn, type;\r\n\r\n\t// Types can be a map of types/handlers\r\n\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t// ( types-Object, selector, data )\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\r\n\t\t\t// ( types-Object, data )\r\n\t\t\tdata = data || selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tfor ( type in types ) {\r\n\t\t\ton( elem, type, selector, data, types[ type ], one );\r\n\t\t}\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( data == null && fn == null ) {\r\n\r\n\t\t// ( types, fn )\r\n\t\tfn = selector;\r\n\t\tdata = selector = undefined;\r\n\t} else if ( fn == null ) {\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\r\n\t\t\t// ( types, selector, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = undefined;\r\n\t\t} else {\r\n\r\n\t\t\t// ( types, data, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t}\r\n\tif ( fn === false ) {\r\n\t\tfn = returnFalse;\r\n\t} else if ( !fn ) {\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( one === 1 ) {\r\n\t\torigFn = fn;\r\n\t\tfn = function( event ) {\r\n\r\n\t\t\t// Can use an empty set, since event contains the info\r\n\t\t\tjQuery().off( event );\r\n\t\t\treturn origFn.apply( this, arguments );\r\n\t\t};\r\n\r\n\t\t// Use same guid so caller can remove using origFn\r\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n\t}\r\n\treturn elem.each( function() {\r\n\t\tjQuery.event.add( this, types, fn, data, selector );\r\n\t} );\r\n}\r\n\r\n/*\r\n * Helper functions for managing events -- not part of the public interface.\r\n * Props to Dean Edwards' addEvent library for many of the ideas.\r\n */\r\njQuery.event = {\r\n\r\n\tglobal: {},\r\n\r\n\tadd: function( elem, types, handler, data, selector ) {\r\n\r\n\t\tvar handleObjIn, eventHandle, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.get( elem );\r\n\r\n\t\t// Only attach events to objects that accept data\r\n\t\tif ( !acceptData( elem ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Caller can pass in an object of custom data in lieu of the handler\r\n\t\tif ( handler.handler ) {\r\n\t\t\thandleObjIn = handler;\r\n\t\t\thandler = handleObjIn.handler;\r\n\t\t\tselector = handleObjIn.selector;\r\n\t\t}\r\n\r\n\t\t// Ensure that invalid selectors throw exceptions at attach time\r\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\r\n\t\tif ( selector ) {\r\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\r\n\t\t}\r\n\r\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\r\n\t\tif ( !handler.guid ) {\r\n\t\t\thandler.guid = jQuery.guid++;\r\n\t\t}\r\n\r\n\t\t// Init the element's event structure and main handler, if this is the first\r\n\t\tif ( !( events = elemData.events ) ) {\r\n\t\t\tevents = elemData.events = Object.create( null );\r\n\t\t}\r\n\t\tif ( !( eventHandle = elemData.handle ) ) {\r\n\t\t\teventHandle = elemData.handle = function( e ) {\r\n\r\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\r\n\t\t\t\t// when an event is called after a page has unloaded\r\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\r\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Handle multiple events separated by a space\r\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If event changes its type, use the special event handlers for the changed type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// If selector defined, determine special event api type, otherwise given type\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n\t\t\t// Update special based on newly reset type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// handleObj is passed to all event handlers\r\n\t\t\thandleObj = jQuery.extend( {\r\n\t\t\t\ttype: type,\r\n\t\t\t\torigType: origType,\r\n\t\t\t\tdata: data,\r\n\t\t\t\thandler: handler,\r\n\t\t\t\tguid: handler.guid,\r\n\t\t\t\tselector: selector,\r\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n\t\t\t\tnamespace: namespaces.join( \".\" )\r\n\t\t\t}, handleObjIn );\r\n\r\n\t\t\t// Init the event handler queue if we're the first\r\n\t\t\tif ( !( handlers = events[ type ] ) ) {\r\n\t\t\t\thandlers = events[ type ] = [];\r\n\t\t\t\thandlers.delegateCount = 0;\r\n\r\n\t\t\t\t// Only use addEventListener if the special events handler returns false\r\n\t\t\t\tif ( !special.setup ||\r\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n\r\n\t\t\t\t\tif ( elem.addEventListener ) {\r\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( special.add ) {\r\n\t\t\t\tspecial.add.call( elem, handleObj );\r\n\r\n\t\t\t\tif ( !handleObj.handler.guid ) {\r\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add to the element's handler list, delegates in front\r\n\t\t\tif ( selector ) {\r\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\r\n\t\t\t} else {\r\n\t\t\t\thandlers.push( handleObj );\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of which events have ever been used, for event optimization\r\n\t\t\tjQuery.event.global[ type ] = true;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Detach an event or set of events from an element\r\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\r\n\r\n\t\tvar j, origCount, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\r\n\r\n\t\tif ( !elemData || !( events = elemData.events ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Once for each type.namespace in types; type may be omitted\r\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tfor ( type in events ) {\r\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\t\t\thandlers = events[ type ] || [];\r\n\t\t\ttmp = tmp[ 2 ] &&\r\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\r\n\r\n\t\t\t// Remove matching events\r\n\t\t\torigCount = j = handlers.length;\r\n\t\t\twhile ( j-- ) {\r\n\t\t\t\thandleObj = handlers[ j ];\r\n\r\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\r\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\r\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\r\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\r\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\r\n\t\t\t\t\thandlers.splice( j, 1 );\r\n\r\n\t\t\t\t\tif ( handleObj.selector ) {\r\n\t\t\t\t\t\thandlers.delegateCount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( special.remove ) {\r\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\r\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\r\n\t\t\tif ( origCount && !handlers.length ) {\r\n\t\t\t\tif ( !special.teardown ||\r\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n\r\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete events[ type ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove data and the expando if it's no longer used\r\n\t\tif ( jQuery.isEmptyObject( events ) ) {\r\n\t\t\tdataPriv.remove( elem, \"handle events\" );\r\n\t\t}\r\n\t},\r\n\r\n\tdispatch: function( nativeEvent ) {\r\n\r\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\r\n\t\t\targs = new Array( arguments.length ),\r\n\r\n\t\t\t// Make a writable jQuery.Event from the native event object\r\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\r\n\r\n\t\t\thandlers = (\r\n\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\r\n\t\t\t)[ event.type ] || [],\r\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\r\n\r\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n\t\targs[ 0 ] = event;\r\n\r\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\r\n\t\t\targs[ i ] = arguments[ i ];\r\n\t\t}\r\n\r\n\t\tevent.delegateTarget = this;\r\n\r\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\r\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine handlers\r\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\r\n\r\n\t\t// Run delegates first; they may want to stop propagation beneath us\r\n\t\ti = 0;\r\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\t\t\tevent.currentTarget = matched.elem;\r\n\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\r\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\r\n\r\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\r\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\r\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\r\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\r\n\r\n\t\t\t\t\tevent.handleObj = handleObj;\r\n\t\t\t\t\tevent.data = handleObj.data;\r\n\r\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\r\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Call the postDispatch hook for the mapped type\r\n\t\tif ( special.postDispatch ) {\r\n\t\t\tspecial.postDispatch.call( this, event );\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\thandlers: function( event, handlers ) {\r\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\r\n\t\t\thandlerQueue = [],\r\n\t\t\tdelegateCount = handlers.delegateCount,\r\n\t\t\tcur = event.target;\r\n\r\n\t\t// Find delegate handlers\r\n\t\tif ( delegateCount &&\r\n\r\n\t\t\t// Support: IE <=9\r\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\r\n\t\t\tcur.nodeType &&\r\n\r\n\t\t\t// Support: Firefox <=42\r\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\r\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\r\n\t\t\t// Support: IE 11 only\r\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\r\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\r\n\r\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\r\n\r\n\t\t\t\t// Don't check non-elements (trac-13208)\r\n\t\t\t\t// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)\r\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\r\n\t\t\t\t\tmatchedHandlers = [];\r\n\t\t\t\t\tmatchedSelectors = {};\r\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\r\n\t\t\t\t\t\thandleObj = handlers[ i ];\r\n\r\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (trac-13203)\r\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\r\n\r\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\r\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\r\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\r\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\r\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( matchedHandlers.length ) {\r\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add the remaining (directly-bound) handlers\r\n\t\tcur = this;\r\n\t\tif ( delegateCount < handlers.length ) {\r\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\r\n\t\t}\r\n\r\n\t\treturn handlerQueue;\r\n\t},\r\n\r\n\taddProp: function( name, hook ) {\r\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true,\r\n\r\n\t\t\tget: isFunction( hook ) ?\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif ( this.originalEvent ) {\r\n\t\t\t\t\t\treturn hook( this.originalEvent );\r\n\t\t\t\t\t}\r\n\t\t\t\t} :\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif ( this.originalEvent ) {\r\n\t\t\t\t\t\treturn this.originalEvent[ name ];\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\tset: function( value ) {\r\n\t\t\t\tObject.defineProperty( this, name, {\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\twritable: true,\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tfix: function( originalEvent ) {\r\n\t\treturn originalEvent[ jQuery.expando ] ?\r\n\t\t\toriginalEvent :\r\n\t\t\tnew jQuery.Event( originalEvent );\r\n\t},\r\n\r\n\tspecial: {\r\n\t\tload: {\r\n\r\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\r\n\t\t\tnoBubble: true\r\n\t\t},\r\n\t\tclick: {\r\n\r\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\r\n\t\t\tsetup: function( data ) {\r\n\r\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\r\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\r\n\t\t\t\tvar el = this || data;\r\n\r\n\t\t\t\t// Claim the first handler\r\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\r\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\r\n\r\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\r\n\t\t\t\t\tleverageNative( el, \"click\", true );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return false to allow normal processing in the caller\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\ttrigger: function( data ) {\r\n\r\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\r\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\r\n\t\t\t\tvar el = this || data;\r\n\r\n\t\t\t\t// Force setup before triggering a click\r\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\r\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\r\n\r\n\t\t\t\t\tleverageNative( el, \"click\" );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return non-false to allow normal event-path propagation\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\t// For cross-browser consistency, suppress native .click() on links\r\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\r\n\t\t\t_default: function( event ) {\r\n\t\t\t\tvar target = event.target;\r\n\t\t\t\treturn rcheckableType.test( target.type ) &&\r\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\r\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\r\n\t\t\t\t\tnodeName( target, \"a\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeunload: {\r\n\t\t\tpostDispatch: function( event ) {\r\n\r\n\t\t\t\t// Support: Firefox 20+\r\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\r\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\r\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Ensure the presence of an event listener that handles manually-triggered\r\n// synthetic events by interrupting progress until reinvoked in response to\r\n// *native* events that it fires directly, ensuring that state changes have\r\n// already occurred before other listeners are invoked.\r\nfunction leverageNative( el, type, isSetup ) {\r\n\r\n\t// Missing `isSetup` indicates a trigger call, which must force setup through jQuery.event.add\r\n\tif ( !isSetup ) {\r\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\r\n\t\t\tjQuery.event.add( el, type, returnTrue );\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Register the controller as a special universal handler for all event namespaces\r\n\tdataPriv.set( el, type, false );\r\n\tjQuery.event.add( el, type, {\r\n\t\tnamespace: false,\r\n\t\thandler: function( event ) {\r\n\t\t\tvar result,\r\n\t\t\t\tsaved = dataPriv.get( this, type );\r\n\r\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\r\n\r\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\r\n\t\t\t\tif ( !saved ) {\r\n\r\n\t\t\t\t\t// Store arguments for use when handling the inner native event\r\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\r\n\t\t\t\t\t// will not be confused with a leftover capture object.\r\n\t\t\t\t\tsaved = slice.call( arguments );\r\n\t\t\t\t\tdataPriv.set( this, type, saved );\r\n\r\n\t\t\t\t\t// Trigger the native event and capture its result\r\n\t\t\t\t\tthis[ type ]();\r\n\t\t\t\t\tresult = dataPriv.get( this, type );\r\n\t\t\t\t\tdataPriv.set( this, type, false );\r\n\r\n\t\t\t\t\tif ( saved !== result ) {\r\n\r\n\t\t\t\t\t\t// Cancel the outer synthetic event\r\n\t\t\t\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\r\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering\r\n\t\t\t\t// the native event and prevent that from happening again here.\r\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\r\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\r\n\t\t\t\t// less bad than duplication.\r\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}\r\n\r\n\t\t\t// If this is a native event triggered above, everything is now in order\r\n\t\t\t// Fire an inner synthetic event with the original arguments\r\n\t\t\t} else if ( saved ) {\r\n\r\n\t\t\t\t// ...and capture the result\r\n\t\t\t\tdataPriv.set( this, type, jQuery.event.trigger(\r\n\t\t\t\t\tsaved[ 0 ],\r\n\t\t\t\t\tsaved.slice( 1 ),\r\n\t\t\t\t\tthis\r\n\t\t\t\t) );\r\n\r\n\t\t\t\t// Abort handling of the native event by all jQuery handlers while allowing\r\n\t\t\t\t// native handlers on the same element to run. On target, this is achieved\r\n\t\t\t\t// by stopping immediate propagation just on the jQuery event. However,\r\n\t\t\t\t// the native event is re-wrapped by a jQuery one on each level of the\r\n\t\t\t\t// propagation so the only way to stop it for jQuery is to stop it for\r\n\t\t\t\t// everyone via native `stopPropagation()`. This is not a problem for\r\n\t\t\t\t// focus/blur which don't bubble, but it does also stop click on checkboxes\r\n\t\t\t\t// and radios. We accept this limitation.\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tevent.isImmediatePropagationStopped = returnTrue;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\njQuery.removeEvent = function( elem, type, handle ) {\r\n\r\n\t// This \"if\" is needed for plain objects\r\n\tif ( elem.removeEventListener ) {\r\n\t\telem.removeEventListener( type, handle );\r\n\t}\r\n};\r\n\r\njQuery.Event = function( src, props ) {\r\n\r\n\t// Allow instantiation without the 'new' keyword\r\n\tif ( !( this instanceof jQuery.Event ) ) {\r\n\t\treturn new jQuery.Event( src, props );\r\n\t}\r\n\r\n\t// Event object\r\n\tif ( src && src.type ) {\r\n\t\tthis.originalEvent = src;\r\n\t\tthis.type = src.type;\r\n\r\n\t\t// Events bubbling up the document may have been marked as prevented\r\n\t\t// by a handler lower down the tree; reflect the correct value.\r\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\r\n\t\t\t\tsrc.defaultPrevented === undefined &&\r\n\r\n\t\t\t\t// Support: Android <=2.3 only\r\n\t\t\t\tsrc.returnValue === false ?\r\n\t\t\treturnTrue :\r\n\t\t\treturnFalse;\r\n\r\n\t\t// Create target properties\r\n\t\t// Support: Safari <=6 - 7 only\r\n\t\t// Target should not be a text node (trac-504, trac-13143)\r\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\r\n\t\t\tsrc.target.parentNode :\r\n\t\t\tsrc.target;\r\n\r\n\t\tthis.currentTarget = src.currentTarget;\r\n\t\tthis.relatedTarget = src.relatedTarget;\r\n\r\n\t// Event type\r\n\t} else {\r\n\t\tthis.type = src;\r\n\t}\r\n\r\n\t// Put explicitly provided properties onto the event object\r\n\tif ( props ) {\r\n\t\tjQuery.extend( this, props );\r\n\t}\r\n\r\n\t// Create a timestamp if incoming event doesn't have one\r\n\tthis.timeStamp = src && src.timeStamp || Date.now();\r\n\r\n\t// Mark it as fixed\r\n\tthis[ jQuery.expando ] = true;\r\n};\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\njQuery.Event.prototype = {\r\n\tconstructor: jQuery.Event,\r\n\tisDefaultPrevented: returnFalse,\r\n\tisPropagationStopped: returnFalse,\r\n\tisImmediatePropagationStopped: returnFalse,\r\n\tisSimulated: false,\r\n\r\n\tpreventDefault: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isDefaultPrevented = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\tstopPropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isPropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t},\r\n\tstopImmediatePropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isImmediatePropagationStopped = returnTrue;\r\n\r\n\t\tif ( e && !this.isSimulated ) {\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\r\n\t\tthis.stopPropagation();\r\n\t}\r\n};\r\n\r\n// Includes all common event props including KeyEvent and MouseEvent specific props\r\njQuery.each( {\r\n\taltKey: true,\r\n\tbubbles: true,\r\n\tcancelable: true,\r\n\tchangedTouches: true,\r\n\tctrlKey: true,\r\n\tdetail: true,\r\n\teventPhase: true,\r\n\tmetaKey: true,\r\n\tpageX: true,\r\n\tpageY: true,\r\n\tshiftKey: true,\r\n\tview: true,\r\n\t\"char\": true,\r\n\tcode: true,\r\n\tcharCode: true,\r\n\tkey: true,\r\n\tkeyCode: true,\r\n\tbutton: true,\r\n\tbuttons: true,\r\n\tclientX: true,\r\n\tclientY: true,\r\n\toffsetX: true,\r\n\toffsetY: true,\r\n\tpointerId: true,\r\n\tpointerType: true,\r\n\tscreenX: true,\r\n\tscreenY: true,\r\n\ttargetTouches: true,\r\n\ttoElement: true,\r\n\ttouches: true,\r\n\twhich: true\r\n}, jQuery.event.addProp );\r\n\r\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\r\n\r\n\tfunction focusMappedHandler( nativeEvent ) {\r\n\t\tif ( document.documentMode ) {\r\n\r\n\t\t\t// Support: IE 11+\r\n\t\t\t// Attach a single focusin/focusout handler on the document while someone wants\r\n\t\t\t// focus/blur. This is because the former are synchronous in IE while the latter\r\n\t\t\t// are async. In other browsers, all those handlers are invoked synchronously.\r\n\r\n\t\t\t// `handle` from private data would already wrap the event, but we need\r\n\t\t\t// to change the `type` here.\r\n\t\t\tvar handle = dataPriv.get( this, \"handle\" ),\r\n\t\t\t\tevent = jQuery.event.fix( nativeEvent );\r\n\t\t\tevent.type = nativeEvent.type === \"focusin\" ? \"focus\" : \"blur\";\r\n\t\t\tevent.isSimulated = true;\r\n\r\n\t\t\t// First, handle focusin/focusout\r\n\t\t\thandle( nativeEvent );\r\n\r\n\t\t\t// ...then, handle focus/blur\r\n\t\t\t//\r\n\t\t\t// focus/blur don't bubble while focusin/focusout do; simulate the former by only\r\n\t\t\t// invoking the handler at the lower level.\r\n\t\t\tif ( event.target === event.currentTarget ) {\r\n\r\n\t\t\t\t// The setup part calls `leverageNative`, which, in turn, calls\r\n\t\t\t\t// `jQuery.event.add`, so event handle will already have been set\r\n\t\t\t\t// by this point.\r\n\t\t\t\thandle( event );\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// For non-IE browsers, attach a single capturing handler on the document\r\n\t\t\t// while someone wants focusin/focusout.\r\n\t\t\tjQuery.event.simulate( delegateType, nativeEvent.target,\r\n\t\t\t\tjQuery.event.fix( nativeEvent ) );\r\n\t\t}\r\n\t}\r\n\r\n\tjQuery.event.special[ type ] = {\r\n\r\n\t\t// Utilize native event if possible so blur/focus sequence is correct\r\n\t\tsetup: function() {\r\n\r\n\t\t\tvar attaches;\r\n\r\n\t\t\t// Claim the first handler\r\n\t\t\t// dataPriv.set( this, \"focus\", ... )\r\n\t\t\t// dataPriv.set( this, \"blur\", ... )\r\n\t\t\tleverageNative( this, type, true );\r\n\r\n\t\t\tif ( document.documentMode ) {\r\n\r\n\t\t\t\t// Support: IE 9 - 11+\r\n\t\t\t\t// We use the same native handler for focusin & focus (and focusout & blur)\r\n\t\t\t\t// so we need to coordinate setup & teardown parts between those events.\r\n\t\t\t\t// Use `delegateType` as the key as `type` is already used by `leverageNative`.\r\n\t\t\t\tattaches = dataPriv.get( this, delegateType );\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tthis.addEventListener( delegateType, focusMappedHandler );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.set( this, delegateType, ( attaches || 0 ) + 1 );\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Return false to allow normal processing in the caller\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttrigger: function() {\r\n\r\n\t\t\t// Force setup before trigger\r\n\t\t\tleverageNative( this, type );\r\n\r\n\t\t\t// Return non-false to allow normal event-path propagation\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tteardown: function() {\r\n\t\t\tvar attaches;\r\n\r\n\t\t\tif ( document.documentMode ) {\r\n\t\t\t\tattaches = dataPriv.get( this, delegateType ) - 1;\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tthis.removeEventListener( delegateType, focusMappedHandler );\r\n\t\t\t\t\tdataPriv.remove( this, delegateType );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataPriv.set( this, delegateType, attaches );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Return false to indicate standard teardown should be applied\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Suppress native focus or blur if we're currently inside\r\n\t\t// a leveraged native-event stack\r\n\t\t_default: function( event ) {\r\n\t\t\treturn dataPriv.get( event.target, type );\r\n\t\t},\r\n\r\n\t\tdelegateType: delegateType\r\n\t};\r\n\r\n\t// Support: Firefox <=44\r\n\t// Firefox doesn't have focus(in | out) events\r\n\t// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\r\n\t//\r\n\t// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\r\n\t// focus(in | out) events fire after focus & blur events,\r\n\t// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\r\n\t// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\r\n\t//\r\n\t// Support: IE 9 - 11+\r\n\t// To preserve relative focusin/focus & focusout/blur event order guaranteed on the 3.x branch,\r\n\t// attach a single handler for both events in IE.\r\n\tjQuery.event.special[ delegateType ] = {\r\n\t\tsetup: function() {\r\n\r\n\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\r\n\t\t\t// (via `this.document`) & document (via `this`).\r\n\t\t\tvar doc = this.ownerDocument || this.document || this,\r\n\t\t\t\tdataHolder = document.documentMode ? this : doc,\r\n\t\t\t\tattaches = dataPriv.get( dataHolder, delegateType );\r\n\r\n\t\t\t// Support: IE 9 - 11+\r\n\t\t\t// We use the same native handler for focusin & focus (and focusout & blur)\r\n\t\t\t// so we need to coordinate setup & teardown parts between those events.\r\n\t\t\t// Use `delegateType` as the key as `type` is already used by `leverageNative`.\r\n\t\t\tif ( !attaches ) {\r\n\t\t\t\tif ( document.documentMode ) {\r\n\t\t\t\t\tthis.addEventListener( delegateType, focusMappedHandler );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdoc.addEventListener( type, focusMappedHandler, true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdataPriv.set( dataHolder, delegateType, ( attaches || 0 ) + 1 );\r\n\t\t},\r\n\t\tteardown: function() {\r\n\t\t\tvar doc = this.ownerDocument || this.document || this,\r\n\t\t\t\tdataHolder = document.documentMode ? this : doc,\r\n\t\t\t\tattaches = dataPriv.get( dataHolder, delegateType ) - 1;\r\n\r\n\t\t\tif ( !attaches ) {\r\n\t\t\t\tif ( document.documentMode ) {\r\n\t\t\t\t\tthis.removeEventListener( delegateType, focusMappedHandler );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdoc.removeEventListener( type, focusMappedHandler, true );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.remove( dataHolder, delegateType );\r\n\t\t\t} else {\r\n\t\t\t\tdataPriv.set( dataHolder, delegateType, attaches );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n} );\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\n// so that event delegation works in jQuery.\r\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\r\n//\r\n// Support: Safari 7 only\r\n// Safari sends mouseenter too often; see:\r\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\r\n// for the description of the bug (it existed in older Chrome versions as well).\r\njQuery.each( {\r\n\tmouseenter: \"mouseover\",\r\n\tmouseleave: \"mouseout\",\r\n\tpointerenter: \"pointerover\",\r\n\tpointerleave: \"pointerout\"\r\n}, function( orig, fix ) {\r\n\tjQuery.event.special[ orig ] = {\r\n\t\tdelegateType: fix,\r\n\t\tbindType: fix,\r\n\r\n\t\thandle: function( event ) {\r\n\t\t\tvar ret,\r\n\t\t\t\ttarget = this,\r\n\t\t\t\trelated = event.relatedTarget,\r\n\t\t\t\thandleObj = event.handleObj;\r\n\r\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\r\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\r\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\r\n\t\t\t\tevent.type = handleObj.origType;\r\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\r\n\t\t\t\tevent.type = fix;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\ton: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn );\r\n\t},\r\n\tone: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn, 1 );\r\n\t},\r\n\toff: function( types, selector, fn ) {\r\n\t\tvar handleObj, type;\r\n\t\tif ( types && types.preventDefault && types.handleObj ) {\r\n\r\n\t\t\t// ( event )  dispatched jQuery.Event\r\n\t\t\thandleObj = types.handleObj;\r\n\t\t\tjQuery( types.delegateTarget ).off(\r\n\t\t\t\thandleObj.namespace ?\r\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\r\n\t\t\t\t\thandleObj.origType,\r\n\t\t\t\thandleObj.selector,\r\n\t\t\t\thandleObj.handler\r\n\t\t\t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t\t// ( types-object [, selector] )\r\n\t\t\tfor ( type in types ) {\r\n\t\t\t\tthis.off( type, selector, types[ type ] );\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( selector === false || typeof selector === \"function\" ) {\r\n\r\n\t\t\t// ( types [, fn] )\r\n\t\t\tfn = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tif ( fn === false ) {\r\n\t\t\tfn = returnFalse;\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.remove( this, types, fn, selector );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\r\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\r\n\t// In IE/Edge using regex groups here causes severe slowdowns.\r\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\r\n\trnoInnerhtml = /<script|<style|<link/i,\r\n\r\n\t// checked=\"checked\" or checked\r\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n\r\n\trcleanScript = /^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g;\r\n\r\n// Prefer a tbody over its parent table for containing new rows\r\nfunction manipulationTarget( elem, content ) {\r\n\tif ( nodeName( elem, \"table\" ) &&\r\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\r\n\r\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\n// Replace/restore the type attribute of script elements for safe DOM manipulation\r\nfunction disableScript( elem ) {\r\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\r\n\treturn elem;\r\n}\r\nfunction restoreScript( elem ) {\r\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\r\n\t\telem.type = elem.type.slice( 5 );\r\n\t} else {\r\n\t\telem.removeAttribute( \"type\" );\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\nfunction cloneCopyEvent( src, dest ) {\r\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\r\n\r\n\tif ( dest.nodeType !== 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// 1. Copy private data: events, handlers, etc.\r\n\tif ( dataPriv.hasData( src ) ) {\r\n\t\tpdataOld = dataPriv.get( src );\r\n\t\tevents = pdataOld.events;\r\n\r\n\t\tif ( events ) {\r\n\t\t\tdataPriv.remove( dest, \"handle events\" );\r\n\r\n\t\t\tfor ( type in events ) {\r\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 2. Copy user data\r\n\tif ( dataUser.hasData( src ) ) {\r\n\t\tudataOld = dataUser.access( src );\r\n\t\tudataCur = jQuery.extend( {}, udataOld );\r\n\r\n\t\tdataUser.set( dest, udataCur );\r\n\t}\r\n}\r\n\r\n// Fix IE bugs, see support tests\r\nfunction fixInput( src, dest ) {\r\n\tvar nodeName = dest.nodeName.toLowerCase();\r\n\r\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\r\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\r\n\t\tdest.checked = src.checked;\r\n\r\n\t// Fails to return the selected option to the default selected state when cloning options\r\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\r\n\t\tdest.defaultValue = src.defaultValue;\r\n\t}\r\n}\r\n\r\nfunction domManip( collection, args, callback, ignored ) {\r\n\r\n\t// Flatten any nested arrays\r\n\targs = flat( args );\r\n\r\n\tvar fragment, first, scripts, hasScripts, node, doc,\r\n\t\ti = 0,\r\n\t\tl = collection.length,\r\n\t\tiNoClone = l - 1,\r\n\t\tvalue = args[ 0 ],\r\n\t\tvalueIsFunction = isFunction( value );\r\n\r\n\t// We can't cloneNode fragments that contain checked, in WebKit\r\n\tif ( valueIsFunction ||\r\n\t\t\t( l > 1 && typeof value === \"string\" &&\r\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\r\n\t\treturn collection.each( function( index ) {\r\n\t\t\tvar self = collection.eq( index );\r\n\t\t\tif ( valueIsFunction ) {\r\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\r\n\t\t\t}\r\n\t\t\tdomManip( self, args, callback, ignored );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( l ) {\r\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\r\n\t\tfirst = fragment.firstChild;\r\n\r\n\t\tif ( fragment.childNodes.length === 1 ) {\r\n\t\t\tfragment = first;\r\n\t\t}\r\n\r\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\r\n\t\tif ( first || ignored ) {\r\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\r\n\t\t\thasScripts = scripts.length;\r\n\r\n\t\t\t// Use the original fragment for the last item\r\n\t\t\t// instead of the first because it can end up\r\n\t\t\t// being emptied incorrectly in certain situations (trac-8070).\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tnode = fragment;\r\n\r\n\t\t\t\tif ( i !== iNoClone ) {\r\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\r\n\r\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\r\n\t\t\t\t\tif ( hasScripts ) {\r\n\r\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback.call( collection[ i ], node, i );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasScripts ) {\r\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\r\n\r\n\t\t\t\t// Re-enable scripts\r\n\t\t\t\tjQuery.map( scripts, restoreScript );\r\n\r\n\t\t\t\t// Evaluate executable scripts on first document insertion\r\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\r\n\t\t\t\t\tnode = scripts[ i ];\r\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\r\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\r\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\r\n\r\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\r\n\r\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\r\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\r\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\r\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\r\n\t\t\t\t\t\t\t\t}, doc );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Unwrap a CDATA section containing script contents. This shouldn't be\r\n\t\t\t\t\t\t\t// needed as in XML documents they're already not visible when\r\n\t\t\t\t\t\t\t// inspecting element contents and in HTML documents they have no\r\n\t\t\t\t\t\t\t// meaning but we're preserving that logic for backwards compatibility.\r\n\t\t\t\t\t\t\t// This will be removed completely in 4.0. See gh-4904.\r\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn collection;\r\n}\r\n\r\nfunction remove( elem, selector, keepData ) {\r\n\tvar node,\r\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\r\n\t\ti = 0;\r\n\r\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\r\n\t\tif ( !keepData && node.nodeType === 1 ) {\r\n\t\t\tjQuery.cleanData( getAll( node ) );\r\n\t\t}\r\n\r\n\t\tif ( node.parentNode ) {\r\n\t\t\tif ( keepData && isAttached( node ) ) {\r\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\r\n\t\t\t}\r\n\t\t\tnode.parentNode.removeChild( node );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\njQuery.extend( {\r\n\thtmlPrefilter: function( html ) {\r\n\t\treturn html;\r\n\t},\r\n\r\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n\t\tvar i, l, srcElements, destElements,\r\n\t\t\tclone = elem.cloneNode( true ),\r\n\t\t\tinPage = isAttached( elem );\r\n\r\n\t\t// Fix IE cloning issues\r\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\r\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// We eschew jQuery#find here for performance reasons:\r\n\t\t\t// https://jsperf.com/getall-vs-sizzle/2\r\n\t\t\tdestElements = getAll( clone );\r\n\t\t\tsrcElements = getAll( elem );\r\n\r\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Copy the events from the original to the clone\r\n\t\tif ( dataAndEvents ) {\r\n\t\t\tif ( deepDataAndEvents ) {\r\n\t\t\t\tsrcElements = srcElements || getAll( elem );\r\n\t\t\t\tdestElements = destElements || getAll( clone );\r\n\r\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcloneCopyEvent( elem, clone );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tdestElements = getAll( clone, \"script\" );\r\n\t\tif ( destElements.length > 0 ) {\r\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\r\n\t\t}\r\n\r\n\t\t// Return the cloned set\r\n\t\treturn clone;\r\n\t},\r\n\r\n\tcleanData: function( elems ) {\r\n\t\tvar data, elem, type,\r\n\t\t\tspecial = jQuery.event.special,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\tif ( acceptData( elem ) ) {\r\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\r\n\t\t\t\t\tif ( data.events ) {\r\n\t\t\t\t\t\tfor ( type in data.events ) {\r\n\t\t\t\t\t\t\tif ( special[ type ] ) {\r\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\r\n\r\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support: Chrome <=35 - 45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\r\n\r\n\t\t\t\t\t// Support: Chrome <=35 - 45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tdetach: function( selector ) {\r\n\t\treturn remove( this, selector, true );\r\n\t},\r\n\r\n\tremove: function( selector ) {\r\n\t\treturn remove( this, selector );\r\n\t},\r\n\r\n\ttext: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\treturn value === undefined ?\r\n\t\t\t\tjQuery.text( this ) :\r\n\t\t\t\tthis.empty().each( function() {\r\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\t\t\tthis.textContent = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\tappend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.appendChild( elem );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tprepend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tbefore: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tafter: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tempty: function() {\r\n\t\tvar elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\r\n\t\t\tif ( elem.nodeType === 1 ) {\r\n\r\n\t\t\t\t// Prevent memory leaks\r\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\r\n\t\t\t\t// Remove any remaining nodes\r\n\t\t\t\telem.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\r\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n\r\n\t\treturn this.map( function() {\r\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n\t\t} );\r\n\t},\r\n\r\n\thtml: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar elem = this[ 0 ] || {},\r\n\t\t\t\ti = 0,\r\n\t\t\t\tl = this.length;\r\n\r\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\r\n\t\t\t\treturn elem.innerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t// See if we can take a shortcut and just use innerHTML\r\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\r\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\r\n\r\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\t\t\telem = this[ i ] || {};\r\n\r\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\r\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\t\t\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telem = 0;\r\n\r\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\r\n\t\t\t\t} catch ( e ) {}\r\n\t\t\t}\r\n\r\n\t\t\tif ( elem ) {\r\n\t\t\t\tthis.empty().append( value );\r\n\t\t\t}\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\treplaceWith: function() {\r\n\t\tvar ignored = [];\r\n\r\n\t\t// Make the changes, replacing each non-ignored context element with the new content\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tvar parent = this.parentNode;\r\n\r\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\r\n\t\t\t\tjQuery.cleanData( getAll( this ) );\r\n\t\t\t\tif ( parent ) {\r\n\t\t\t\t\tparent.replaceChild( elem, this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Force callback invocation\r\n\t\t}, ignored );\r\n\t}\r\n} );\r\n\r\njQuery.each( {\r\n\tappendTo: \"append\",\r\n\tprependTo: \"prepend\",\r\n\tinsertBefore: \"before\",\r\n\tinsertAfter: \"after\",\r\n\treplaceAll: \"replaceWith\"\r\n}, function( name, original ) {\r\n\tjQuery.fn[ name ] = function( selector ) {\r\n\t\tvar elems,\r\n\t\t\tret = [],\r\n\t\t\tinsert = jQuery( selector ),\r\n\t\t\tlast = insert.length - 1,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; i <= last; i++ ) {\r\n\t\t\telems = i === last ? this : this.clone( true );\r\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\r\n\r\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\r\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\tpush.apply( ret, elems.get() );\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( ret );\r\n\t};\r\n} );\r\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\r\n\r\nvar rcustomProp = /^--/;\r\n\r\n\r\nvar getStyles = function( elem ) {\r\n\r\n\t\t// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)\r\n\t\t// IE throws on elements created in popups\r\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n\t\tvar view = elem.ownerDocument.defaultView;\r\n\r\n\t\tif ( !view || !view.opener ) {\r\n\t\t\tview = window;\r\n\t\t}\r\n\r\n\t\treturn view.getComputedStyle( elem );\r\n\t};\r\n\r\nvar swap = function( elem, options, callback ) {\r\n\tvar ret, name,\r\n\t\told = {};\r\n\r\n\t// Remember the old values, and insert the new ones\r\n\tfor ( name in options ) {\r\n\t\told[ name ] = elem.style[ name ];\r\n\t\telem.style[ name ] = options[ name ];\r\n\t}\r\n\r\n\tret = callback.call( elem );\r\n\r\n\t// Revert the old values\r\n\tfor ( name in options ) {\r\n\t\telem.style[ name ] = old[ name ];\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n\r\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\r\n\r\n\r\n\r\n( function() {\r\n\r\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\r\n\t// so they're executed at the same time to save the second computation.\r\n\tfunction computeStyleTests() {\r\n\r\n\t\t// This is a singleton, we need to execute it only once\r\n\t\tif ( !div ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\r\n\t\t\t\"margin-top:1px;padding:0;border:0\";\r\n\t\tdiv.style.cssText =\r\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\r\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\r\n\t\t\t\"width:60%;top:1%\";\r\n\t\tdocumentElement.appendChild( container ).appendChild( div );\r\n\r\n\t\tvar divStyle = window.getComputedStyle( div );\r\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\r\n\r\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\r\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\r\n\r\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\r\n\t\t// Some styles come back with percentage values, even though they shouldn't\r\n\t\tdiv.style.right = \"60%\";\r\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\r\n\r\n\t\t// Support: IE 9 - 11 only\r\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\r\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\r\n\r\n\t\t// Support: IE 9 only\r\n\t\t// Detect overflow:scroll screwiness (gh-3699)\r\n\t\t// Support: Chrome <=64\r\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\r\n\t\tdiv.style.position = \"absolute\";\r\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\r\n\r\n\t\tdocumentElement.removeChild( container );\r\n\r\n\t\t// Nullify the div so it wouldn't be stored in the memory and\r\n\t\t// it will also be a sign that checks already performed\r\n\t\tdiv = null;\r\n\t}\r\n\r\n\tfunction roundPixelMeasures( measure ) {\r\n\t\treturn Math.round( parseFloat( measure ) );\r\n\t}\r\n\r\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\r\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\r\n\t\tcontainer = document.createElement( \"div\" ),\r\n\t\tdiv = document.createElement( \"div\" );\r\n\r\n\t// Finish early in limited (non-browser) environments\r\n\tif ( !div.style ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Support: IE <=9 - 11 only\r\n\t// Style of cloned element affects source element cloned (trac-8908)\r\n\tdiv.style.backgroundClip = \"content-box\";\r\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\r\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\r\n\r\n\tjQuery.extend( support, {\r\n\t\tboxSizingReliable: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn boxSizingReliableVal;\r\n\t\t},\r\n\t\tpixelBoxStyles: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn pixelBoxStylesVal;\r\n\t\t},\r\n\t\tpixelPosition: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn pixelPositionVal;\r\n\t\t},\r\n\t\treliableMarginLeft: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn reliableMarginLeftVal;\r\n\t\t},\r\n\t\tscrollboxSize: function() {\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn scrollboxSizeVal;\r\n\t\t},\r\n\r\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\r\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\r\n\t\t// set in CSS while `offset*` properties report correct values.\r\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\r\n\t\t// some versions of this test; make sure not to make it pass there!\r\n\t\t//\r\n\t\t// Support: Firefox 70+\r\n\t\t// Only Firefox includes border widths\r\n\t\t// in computed dimensions. (gh-4529)\r\n\t\treliableTrDimensions: function() {\r\n\t\t\tvar table, tr, trChild, trStyle;\r\n\t\t\tif ( reliableTrDimensionsVal == null ) {\r\n\t\t\t\ttable = document.createElement( \"table\" );\r\n\t\t\t\ttr = document.createElement( \"tr\" );\r\n\t\t\t\ttrChild = document.createElement( \"div\" );\r\n\r\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\r\n\t\t\t\ttr.style.cssText = \"box-sizing:content-box;border:1px solid\";\r\n\r\n\t\t\t\t// Support: Chrome 86+\r\n\t\t\t\t// Height set through cssText does not get applied.\r\n\t\t\t\t// Computed height then comes back as 0.\r\n\t\t\t\ttr.style.height = \"1px\";\r\n\t\t\t\ttrChild.style.height = \"9px\";\r\n\r\n\t\t\t\t// Support: Android 8 Chrome 86+\r\n\t\t\t\t// In our bodyBackground.html iframe,\r\n\t\t\t\t// display for all div elements is set to \"inline\",\r\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\r\n\t\t\t\t// Ensuring the div is `display: block`\r\n\t\t\t\t// gets around this issue.\r\n\t\t\t\ttrChild.style.display = \"block\";\r\n\r\n\t\t\t\tdocumentElement\r\n\t\t\t\t\t.appendChild( table )\r\n\t\t\t\t\t.appendChild( tr )\r\n\t\t\t\t\t.appendChild( trChild );\r\n\r\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\r\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\r\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\r\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\r\n\r\n\t\t\t\tdocumentElement.removeChild( table );\r\n\t\t\t}\r\n\t\t\treturn reliableTrDimensionsVal;\r\n\t\t}\r\n\t} );\r\n} )();\r\n\r\n\r\nfunction curCSS( elem, name, computed ) {\r\n\tvar width, minWidth, maxWidth, ret,\r\n\t\tisCustomProp = rcustomProp.test( name ),\r\n\r\n\t\t// Support: Firefox 51+\r\n\t\t// Retrieving style before computed somehow\r\n\t\t// fixes an issue with getting wrong values\r\n\t\t// on detached elements\r\n\t\tstyle = elem.style;\r\n\r\n\tcomputed = computed || getStyles( elem );\r\n\r\n\t// getPropertyValue is needed for:\r\n\t//   .css('filter') (IE 9 only, trac-12537)\r\n\t//   .css('--customProperty) (gh-3144)\r\n\tif ( computed ) {\r\n\r\n\t\t// Support: IE <=9 - 11+\r\n\t\t// IE only supports `\"float\"` in `getPropertyValue`; in computed styles\r\n\t\t// it's only available as `\"cssFloat\"`. We no longer modify properties\r\n\t\t// sent to `.css()` apart from camelCasing, so we need to check both.\r\n\t\t// Normally, this would create difference in behavior: if\r\n\t\t// `getPropertyValue` returns an empty string, the value returned\r\n\t\t// by `.css()` would be `undefined`. This is usually the case for\r\n\t\t// disconnected elements. However, in IE even disconnected elements\r\n\t\t// with no styles return `\"none\"` for `getPropertyValue( \"float\" )`\r\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\r\n\r\n\t\tif ( isCustomProp && ret ) {\r\n\r\n\t\t\t// Support: Firefox 105+, Chrome <=105+\r\n\t\t\t// Spec requires trimming whitespace for custom properties (gh-4926).\r\n\t\t\t// Firefox only trims leading whitespace. Chrome just collapses\r\n\t\t\t// both leading & trailing whitespace to a single space.\r\n\t\t\t//\r\n\t\t\t// Fall back to `undefined` if empty string returned.\r\n\t\t\t// This collapses a missing definition with property defined\r\n\t\t\t// and set to an empty string but there's no standard API\r\n\t\t\t// allowing us to differentiate them without a performance penalty\r\n\t\t\t// and returning `undefined` aligns with older jQuery.\r\n\t\t\t//\r\n\t\t\t// rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED\r\n\t\t\t// as whitespace while CSS does not, but this is not a problem\r\n\t\t\t// because CSS preprocessing replaces them with U+000A LINE FEED\r\n\t\t\t// (which *is* CSS whitespace)\r\n\t\t\t// https://www.w3.org/TR/css-syntax-3/#input-preprocessing\r\n\t\t\tret = ret.replace( rtrimCSS, \"$1\" ) || undefined;\r\n\t\t}\r\n\r\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\r\n\t\t\tret = jQuery.style( elem, name );\r\n\t\t}\r\n\r\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\r\n\t\t// Android Browser returns percentage for some values,\r\n\t\t// but width seems to be reliably pixels.\r\n\t\t// This is against the CSSOM draft spec:\r\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\r\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\r\n\r\n\t\t\t// Remember the original values\r\n\t\t\twidth = style.width;\r\n\t\t\tminWidth = style.minWidth;\r\n\t\t\tmaxWidth = style.maxWidth;\r\n\r\n\t\t\t// Put in the new values to get a computed value out\r\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\r\n\t\t\tret = computed.width;\r\n\r\n\t\t\t// Revert the changed values\r\n\t\t\tstyle.width = width;\r\n\t\t\tstyle.minWidth = minWidth;\r\n\t\t\tstyle.maxWidth = maxWidth;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret !== undefined ?\r\n\r\n\t\t// Support: IE <=9 - 11 only\r\n\t\t// IE returns zIndex value as an integer.\r\n\t\tret + \"\" :\r\n\t\tret;\r\n}\r\n\r\n\r\nfunction addGetHookIf( conditionFn, hookFn ) {\r\n\r\n\t// Define the hook, we'll check on the first run if it's really needed.\r\n\treturn {\r\n\t\tget: function() {\r\n\t\t\tif ( conditionFn() ) {\r\n\r\n\t\t\t\t// Hook not needed (or it's not possible to use it due\r\n\t\t\t\t// to missing dependency), remove it.\r\n\t\t\t\tdelete this.get;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\r\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\r\n\temptyStyle = document.createElement( \"div\" ).style,\r\n\tvendorProps = {};\r\n\r\n// Return a vendor-prefixed property or undefined\r\nfunction vendorPropName( name ) {\r\n\r\n\t// Check for vendor prefixed names\r\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\r\n\t\ti = cssPrefixes.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tname = cssPrefixes[ i ] + capName;\r\n\t\tif ( name in emptyStyle ) {\r\n\t\t\treturn name;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\r\nfunction finalPropName( name ) {\r\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\r\n\r\n\tif ( final ) {\r\n\t\treturn final;\r\n\t}\r\n\tif ( name in emptyStyle ) {\r\n\t\treturn name;\r\n\t}\r\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\r\n}\r\n\r\n\r\nvar\r\n\r\n\t// Swappable if display is none or starts with table\r\n\t// except \"table\", \"table-cell\", or \"table-caption\"\r\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\r\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\r\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\r\n\tcssNormalTransform = {\r\n\t\tletterSpacing: \"0\",\r\n\t\tfontWeight: \"400\"\r\n\t};\r\n\r\nfunction setPositiveNumber( _elem, value, subtract ) {\r\n\r\n\t// Any relative (+/-) values have already been\r\n\t// normalized at this point\r\n\tvar matches = rcssNum.exec( value );\r\n\treturn matches ?\r\n\r\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\r\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\r\n\t\tvalue;\r\n}\r\n\r\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\r\n\tvar i = dimension === \"width\" ? 1 : 0,\r\n\t\textra = 0,\r\n\t\tdelta = 0,\r\n\t\tmarginDelta = 0;\r\n\r\n\t// Adjustment may not be necessary\r\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tfor ( ; i < 4; i += 2 ) {\r\n\r\n\t\t// Both box models exclude margin\r\n\t\t// Count margin delta separately to only add it after scroll gutter adjustment.\r\n\t\t// This is needed to make negative margins work with `outerHeight( true )` (gh-3982).\r\n\t\tif ( box === \"margin\" ) {\r\n\t\t\tmarginDelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\r\n\t\t}\r\n\r\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\r\n\t\tif ( !isBorderBox ) {\r\n\r\n\t\t\t// Add padding\r\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\r\n\t\t\t// For \"border\" or \"margin\", add border\r\n\t\t\tif ( box !== \"padding\" ) {\r\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\r\n\t\t\t// But still keep track of it otherwise\r\n\t\t\t} else {\r\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\r\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\r\n\t\t// \"padding\" or \"margin\"\r\n\t\t} else {\r\n\r\n\t\t\t// For \"content\", subtract padding\r\n\t\t\tif ( box === \"content\" ) {\r\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\t\t\t}\r\n\r\n\t\t\t// For \"content\" or \"padding\", subtract border\r\n\t\t\tif ( box !== \"margin\" ) {\r\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\r\n\tif ( !isBorderBox && computedVal >= 0 ) {\r\n\r\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\r\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\r\n\t\tdelta += Math.max( 0, Math.ceil(\r\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\r\n\t\t\tcomputedVal -\r\n\t\t\tdelta -\r\n\t\t\textra -\r\n\t\t\t0.5\r\n\r\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\r\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\r\n\t\t) ) || 0;\r\n\t}\r\n\r\n\treturn delta + marginDelta;\r\n}\r\n\r\nfunction getWidthOrHeight( elem, dimension, extra ) {\r\n\r\n\t// Start with computed style\r\n\tvar styles = getStyles( elem ),\r\n\r\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\r\n\t\t// Fake content-box until we know it's needed to know the true value.\r\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\r\n\t\tisBorderBox = boxSizingNeeded &&\r\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n\t\tvalueIsBorderBox = isBorderBox,\r\n\r\n\t\tval = curCSS( elem, dimension, styles ),\r\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\r\n\r\n\t// Support: Firefox <=54\r\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\r\n\tif ( rnumnonpx.test( val ) ) {\r\n\t\tif ( !extra ) {\r\n\t\t\treturn val;\r\n\t\t}\r\n\t\tval = \"auto\";\r\n\t}\r\n\r\n\r\n\t// Support: IE 9 - 11 only\r\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\r\n\t// In those cases, the computed value can be trusted to be border-box.\r\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\r\n\r\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\r\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\r\n\t\t// set in CSS while `offset*` properties report correct values.\r\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\r\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\r\n\r\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\r\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\r\n\t\tval === \"auto\" ||\r\n\r\n\t\t// Support: Android <=4.1 - 4.3 only\r\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\r\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\r\n\r\n\t\t// Make sure the element is visible & connected\r\n\t\telem.getClientRects().length ) {\r\n\r\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\r\n\r\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\r\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\r\n\t\t// retrieved value as a content box dimension.\r\n\t\tvalueIsBorderBox = offsetProp in elem;\r\n\t\tif ( valueIsBorderBox ) {\r\n\t\t\tval = elem[ offsetProp ];\r\n\t\t}\r\n\t}\r\n\r\n\t// Normalize \"\" and auto\r\n\tval = parseFloat( val ) || 0;\r\n\r\n\t// Adjust for the element's box model\r\n\treturn ( val +\r\n\t\tboxModelAdjustment(\r\n\t\t\telem,\r\n\t\t\tdimension,\r\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\r\n\t\t\tvalueIsBorderBox,\r\n\t\t\tstyles,\r\n\r\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\r\n\t\t\tval\r\n\t\t)\r\n\t) + \"px\";\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Add in style property hooks for overriding the default\r\n\t// behavior of getting and setting a style property\r\n\tcssHooks: {\r\n\t\topacity: {\r\n\t\t\tget: function( elem, computed ) {\r\n\t\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t\t// We should always get a number back from opacity\r\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\r\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Don't automatically add \"px\" to these possibly-unitless properties\r\n\tcssNumber: {\r\n\t\tanimationIterationCount: true,\r\n\t\taspectRatio: true,\r\n\t\tborderImageSlice: true,\r\n\t\tcolumnCount: true,\r\n\t\tflexGrow: true,\r\n\t\tflexShrink: true,\r\n\t\tfontWeight: true,\r\n\t\tgridArea: true,\r\n\t\tgridColumn: true,\r\n\t\tgridColumnEnd: true,\r\n\t\tgridColumnStart: true,\r\n\t\tgridRow: true,\r\n\t\tgridRowEnd: true,\r\n\t\tgridRowStart: true,\r\n\t\tlineHeight: true,\r\n\t\topacity: true,\r\n\t\torder: true,\r\n\t\torphans: true,\r\n\t\tscale: true,\r\n\t\twidows: true,\r\n\t\tzIndex: true,\r\n\t\tzoom: true,\r\n\r\n\t\t// SVG-related\r\n\t\tfillOpacity: true,\r\n\t\tfloodOpacity: true,\r\n\t\tstopOpacity: true,\r\n\t\tstrokeMiterlimit: true,\r\n\t\tstrokeOpacity: true\r\n\t},\r\n\r\n\t// Add in properties whose names you wish to fix before\r\n\t// setting or getting the value\r\n\tcssProps: {},\r\n\r\n\t// Get and set the style property on a DOM Node\r\n\tstyle: function( elem, name, value, extra ) {\r\n\r\n\t\t// Don't set styles on text and comment nodes\r\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tvar ret, type, hooks,\r\n\t\t\torigName = camelCase( name ),\r\n\t\t\tisCustomProp = rcustomProp.test( name ),\r\n\t\t\tstyle = elem.style;\r\n\r\n\t\t// Make sure that we're working with the right name. We don't\r\n\t\t// want to query the value if it is a CSS custom property\r\n\t\t// since they are user-defined.\r\n\t\tif ( !isCustomProp ) {\r\n\t\t\tname = finalPropName( origName );\r\n\t\t}\r\n\r\n\t\t// Gets hook for the prefixed version, then unprefixed version\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// Check if we're setting a value\r\n\t\tif ( value !== undefined ) {\r\n\t\t\ttype = typeof value;\r\n\r\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (trac-7345)\r\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\r\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\r\n\r\n\t\t\t\t// Fixes bug trac-9237\r\n\t\t\t\ttype = \"number\";\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure that null and NaN values aren't set (trac-7116)\r\n\t\t\tif ( value == null || value !== value ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\r\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\r\n\t\t\t// \"px\" to a few hardcoded values.\r\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\r\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\r\n\t\t\t}\r\n\r\n\t\t\t// background-* props affect original clone's values\r\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\r\n\t\t\t\tstyle[ name ] = \"inherit\";\r\n\t\t\t}\r\n\r\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\r\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\tif ( isCustomProp ) {\r\n\t\t\t\t\tstyle.setProperty( name, value );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyle[ name ] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// If a hook was provided get the non-computed value from there\r\n\t\t\tif ( hooks && \"get\" in hooks &&\r\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise just get the value from the style object\r\n\t\t\treturn style[ name ];\r\n\t\t}\r\n\t},\r\n\r\n\tcss: function( elem, name, extra, styles ) {\r\n\t\tvar val, num, hooks,\r\n\t\t\torigName = camelCase( name ),\r\n\t\t\tisCustomProp = rcustomProp.test( name );\r\n\r\n\t\t// Make sure that we're working with the right name. We don't\r\n\t\t// want to modify the value if it is a CSS custom property\r\n\t\t// since they are user-defined.\r\n\t\tif ( !isCustomProp ) {\r\n\t\t\tname = finalPropName( origName );\r\n\t\t}\r\n\r\n\t\t// Try prefixed name followed by the unprefixed name\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// If a hook was provided get the computed value from there\r\n\t\tif ( hooks && \"get\" in hooks ) {\r\n\t\t\tval = hooks.get( elem, true, extra );\r\n\t\t}\r\n\r\n\t\t// Otherwise, if a way to get the computed value exists, use that\r\n\t\tif ( val === undefined ) {\r\n\t\t\tval = curCSS( elem, name, styles );\r\n\t\t}\r\n\r\n\t\t// Convert \"normal\" to computed value\r\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\r\n\t\t\tval = cssNormalTransform[ name ];\r\n\t\t}\r\n\r\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\r\n\t\tif ( extra === \"\" || extra ) {\r\n\t\t\tnum = parseFloat( val );\r\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\r\n\t\t}\r\n\r\n\t\treturn val;\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\r\n\tjQuery.cssHooks[ dimension ] = {\r\n\t\tget: function( elem, computed, extra ) {\r\n\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\r\n\t\t\t\t// but it must have a current display style that would benefit\r\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\r\n\r\n\t\t\t\t\t// Support: Safari 8+\r\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\r\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\r\n\t\t\t\t\t// Support: IE <=11 only\r\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\r\n\t\t\t\t\t// in IE throws an error.\r\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\r\n\t\t\t\t\tswap( elem, cssShow, function() {\r\n\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\r\n\t\t\t\t\t} ) :\r\n\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tset: function( elem, value, extra ) {\r\n\t\t\tvar matches,\r\n\t\t\t\tstyles = getStyles( elem ),\r\n\r\n\t\t\t\t// Only read styles.position if the test has a chance to fail\r\n\t\t\t\t// to avoid forcing a reflow.\r\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\r\n\t\t\t\t\tstyles.position === \"absolute\",\r\n\r\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\r\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\r\n\t\t\t\tisBorderBox = boxSizingNeeded &&\r\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n\t\t\t\tsubtract = extra ?\r\n\t\t\t\t\tboxModelAdjustment(\r\n\t\t\t\t\t\telem,\r\n\t\t\t\t\t\tdimension,\r\n\t\t\t\t\t\textra,\r\n\t\t\t\t\t\tisBorderBox,\r\n\t\t\t\t\t\tstyles\r\n\t\t\t\t\t) :\r\n\t\t\t\t\t0;\r\n\r\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\r\n\t\t\t// faking a content-box to get border and padding (gh-3699)\r\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\r\n\t\t\t\tsubtract -= Math.ceil(\r\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\r\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\r\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\r\n\t\t\t\t\t0.5\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Convert to pixels if value adjustment is needed\r\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\r\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\r\n\r\n\t\t\t\telem.style[ dimension ] = value;\r\n\t\t\t\tvalue = jQuery.css( elem, dimension );\r\n\t\t\t}\r\n\r\n\t\t\treturn setPositiveNumber( elem, value, subtract );\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\r\n\t\t\t\telem.getBoundingClientRect().left -\r\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\r\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\r\n\t\t\t\t\t} )\r\n\t\t\t) + \"px\";\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// These hooks are used by animate to expand properties\r\njQuery.each( {\r\n\tmargin: \"\",\r\n\tpadding: \"\",\r\n\tborder: \"Width\"\r\n}, function( prefix, suffix ) {\r\n\tjQuery.cssHooks[ prefix + suffix ] = {\r\n\t\texpand: function( value ) {\r\n\t\t\tvar i = 0,\r\n\t\t\t\texpanded = {},\r\n\r\n\t\t\t\t// Assumes a single number if not a string\r\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\r\n\r\n\t\t\tfor ( ; i < 4; i++ ) {\r\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\r\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\r\n\t\t\t}\r\n\r\n\t\t\treturn expanded;\r\n\t\t}\r\n\t};\r\n\r\n\tif ( prefix !== \"margin\" ) {\r\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tcss: function( name, value ) {\r\n\t\treturn access( this, function( elem, name, value ) {\r\n\t\t\tvar styles, len,\r\n\t\t\t\tmap = {},\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tif ( Array.isArray( name ) ) {\r\n\t\t\t\tstyles = getStyles( elem );\r\n\t\t\t\tlen = name.length;\r\n\r\n\t\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn map;\r\n\t\t\t}\r\n\r\n\t\t\treturn value !== undefined ?\r\n\t\t\t\tjQuery.style( elem, name, value ) :\r\n\t\t\t\tjQuery.css( elem, name );\r\n\t\t}, name, value, arguments.length > 1 );\r\n\t}\r\n} );\r\n\r\n\r\nfunction Tween( elem, options, prop, end, easing ) {\r\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\r\n}\r\njQuery.Tween = Tween;\r\n\r\nTween.prototype = {\r\n\tconstructor: Tween,\r\n\tinit: function( elem, options, prop, end, easing, unit ) {\r\n\t\tthis.elem = elem;\r\n\t\tthis.prop = prop;\r\n\t\tthis.easing = easing || jQuery.easing._default;\r\n\t\tthis.options = options;\r\n\t\tthis.start = this.now = this.cur();\r\n\t\tthis.end = end;\r\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n\t},\r\n\tcur: function() {\r\n\t\tvar hooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\treturn hooks && hooks.get ?\r\n\t\t\thooks.get( this ) :\r\n\t\t\tTween.propHooks._default.get( this );\r\n\t},\r\n\trun: function( percent ) {\r\n\t\tvar eased,\r\n\t\t\thooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\tif ( this.options.duration ) {\r\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\r\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.pos = eased = percent;\r\n\t\t}\r\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\r\n\r\n\t\tif ( this.options.step ) {\r\n\t\t\tthis.options.step.call( this.elem, this.now, this );\r\n\t\t}\r\n\r\n\t\tif ( hooks && hooks.set ) {\r\n\t\t\thooks.set( this );\r\n\t\t} else {\r\n\t\t\tTween.propHooks._default.set( this );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nTween.prototype.init.prototype = Tween.prototype;\r\n\r\nTween.propHooks = {\r\n\t_default: {\r\n\t\tget: function( tween ) {\r\n\t\t\tvar result;\r\n\r\n\t\t\t// Use a property on the element directly when it is not a DOM element,\r\n\t\t\t// or when there is no matching style property that exists.\r\n\t\t\tif ( tween.elem.nodeType !== 1 ||\r\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\r\n\t\t\t\treturn tween.elem[ tween.prop ];\r\n\t\t\t}\r\n\r\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\r\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\r\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\r\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\r\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\r\n\r\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\r\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\r\n\t\t},\r\n\t\tset: function( tween ) {\r\n\r\n\t\t\t// Use step hook for back compat.\r\n\t\t\t// Use cssHook if its there.\r\n\t\t\t// Use .style if available and use plain properties where available.\r\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\r\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\r\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\r\n\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\r\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\r\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\r\n\t\t\t} else {\r\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Support: IE <=9 only\r\n// Panic based approach to setting things on disconnected nodes\r\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\r\n\tset: function( tween ) {\r\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\r\n\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.easing = {\r\n\tlinear: function( p ) {\r\n\t\treturn p;\r\n\t},\r\n\tswing: function( p ) {\r\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\r\n\t},\r\n\t_default: \"swing\"\r\n};\r\n\r\njQuery.fx = Tween.prototype.init;\r\n\r\n// Back compat <1.8 extension point\r\njQuery.fx.step = {};\r\n\r\n\r\n\r\n\r\nvar\r\n\tfxNow, inProgress,\r\n\trfxtypes = /^(?:toggle|show|hide)$/,\r\n\trrun = /queueHooks$/;\r\n\r\nfunction schedule() {\r\n\tif ( inProgress ) {\r\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\r\n\t\t\twindow.requestAnimationFrame( schedule );\r\n\t\t} else {\r\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\r\n\t\t}\r\n\r\n\t\tjQuery.fx.tick();\r\n\t}\r\n}\r\n\r\n// Animations created synchronously will run synchronously\r\nfunction createFxNow() {\r\n\twindow.setTimeout( function() {\r\n\t\tfxNow = undefined;\r\n\t} );\r\n\treturn ( fxNow = Date.now() );\r\n}\r\n\r\n// Generate parameters to create a standard animation\r\nfunction genFx( type, includeWidth ) {\r\n\tvar which,\r\n\t\ti = 0,\r\n\t\tattrs = { height: type };\r\n\r\n\t// If we include width, step value is 1 to do all cssExpand values,\r\n\t// otherwise step value is 2 to skip over Left and Right\r\n\tincludeWidth = includeWidth ? 1 : 0;\r\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\r\n\t\twhich = cssExpand[ i ];\r\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\r\n\t}\r\n\r\n\tif ( includeWidth ) {\r\n\t\tattrs.opacity = attrs.width = type;\r\n\t}\r\n\r\n\treturn attrs;\r\n}\r\n\r\nfunction createTween( value, prop, animation ) {\r\n\tvar tween,\r\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\r\n\t\tindex = 0,\r\n\t\tlength = collection.length;\r\n\tfor ( ; index < length; index++ ) {\r\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\r\n\r\n\t\t\t// We're done with this property\r\n\t\t\treturn tween;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction defaultPrefilter( elem, props, opts ) {\r\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\r\n\t\tisBox = \"width\" in props || \"height\" in props,\r\n\t\tanim = this,\r\n\t\torig = {},\r\n\t\tstyle = elem.style,\r\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\r\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\r\n\r\n\t// Queue-skipping animations hijack the fx hooks\r\n\tif ( !opts.queue ) {\r\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\r\n\t\tif ( hooks.unqueued == null ) {\r\n\t\t\thooks.unqueued = 0;\r\n\t\t\toldfire = hooks.empty.fire;\r\n\t\t\thooks.empty.fire = function() {\r\n\t\t\t\tif ( !hooks.unqueued ) {\r\n\t\t\t\t\toldfire();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\thooks.unqueued++;\r\n\r\n\t\tanim.always( function() {\r\n\r\n\t\t\t// Ensure the complete handler is called before this completes\r\n\t\t\tanim.always( function() {\r\n\t\t\t\thooks.unqueued--;\r\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\r\n\t\t\t\t\thooks.empty.fire();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\t// Detect show/hide animations\r\n\tfor ( prop in props ) {\r\n\t\tvalue = props[ prop ];\r\n\t\tif ( rfxtypes.test( value ) ) {\r\n\t\t\tdelete props[ prop ];\r\n\t\t\ttoggle = toggle || value === \"toggle\";\r\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\r\n\r\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\r\n\t\t\t\t// there is still data from a stopped show/hide\r\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\r\n\t\t\t\t\thidden = true;\r\n\r\n\t\t\t\t// Ignore all other no-op show/hide data\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\r\n\t\t}\r\n\t}\r\n\r\n\t// Bail out if this is a no-op like .hide().hide()\r\n\tpropTween = !jQuery.isEmptyObject( props );\r\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Restrict \"overflow\" and \"display\" styles during box animations\r\n\tif ( isBox && elem.nodeType === 1 ) {\r\n\r\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\r\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\r\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\r\n\t\t// the overflowX value there.\r\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\r\n\r\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\r\n\t\trestoreDisplay = dataShow && dataShow.display;\r\n\t\tif ( restoreDisplay == null ) {\r\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\r\n\t\t}\r\n\t\tdisplay = jQuery.css( elem, \"display\" );\r\n\t\tif ( display === \"none\" ) {\r\n\t\t\tif ( restoreDisplay ) {\r\n\t\t\t\tdisplay = restoreDisplay;\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\r\n\t\t\t\tshowHide( [ elem ], true );\r\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\r\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\r\n\t\t\t\tshowHide( [ elem ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Animate inline elements as inline-block\r\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\r\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\r\n\r\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\r\n\t\t\t\tif ( !propTween ) {\r\n\t\t\t\t\tanim.done( function() {\r\n\t\t\t\t\t\tstyle.display = restoreDisplay;\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tif ( restoreDisplay == null ) {\r\n\t\t\t\t\t\tdisplay = style.display;\r\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstyle.display = \"inline-block\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif ( opts.overflow ) {\r\n\t\tstyle.overflow = \"hidden\";\r\n\t\tanim.always( function() {\r\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\r\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\r\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\r\n\t\t} );\r\n\t}\r\n\r\n\t// Implement show/hide animations\r\n\tpropTween = false;\r\n\tfor ( prop in orig ) {\r\n\r\n\t\t// General show/hide setup for this element animation\r\n\t\tif ( !propTween ) {\r\n\t\t\tif ( dataShow ) {\r\n\t\t\t\tif ( \"hidden\" in dataShow ) {\r\n\t\t\t\t\thidden = dataShow.hidden;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\r\n\t\t\t}\r\n\r\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\r\n\t\t\tif ( toggle ) {\r\n\t\t\t\tdataShow.hidden = !hidden;\r\n\t\t\t}\r\n\r\n\t\t\t// Show elements before animating them\r\n\t\t\tif ( hidden ) {\r\n\t\t\t\tshowHide( [ elem ], true );\r\n\t\t\t}\r\n\r\n\t\t\t/* eslint-disable no-loop-func */\r\n\r\n\t\t\tanim.done( function() {\r\n\r\n\t\t\t\t/* eslint-enable no-loop-func */\r\n\r\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\r\n\t\t\t\tif ( !hidden ) {\r\n\t\t\t\t\tshowHide( [ elem ] );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\r\n\t\t\t\tfor ( prop in orig ) {\r\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Per-property setup\r\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\r\n\t\tif ( !( prop in dataShow ) ) {\r\n\t\t\tdataShow[ prop ] = propTween.start;\r\n\t\t\tif ( hidden ) {\r\n\t\t\t\tpropTween.end = propTween.start;\r\n\t\t\t\tpropTween.start = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction propFilter( props, specialEasing ) {\r\n\tvar index, name, easing, value, hooks;\r\n\r\n\t// camelCase, specialEasing and expand cssHook pass\r\n\tfor ( index in props ) {\r\n\t\tname = camelCase( index );\r\n\t\teasing = specialEasing[ name ];\r\n\t\tvalue = props[ index ];\r\n\t\tif ( Array.isArray( value ) ) {\r\n\t\t\teasing = value[ 1 ];\r\n\t\t\tvalue = props[ index ] = value[ 0 ];\r\n\t\t}\r\n\r\n\t\tif ( index !== name ) {\r\n\t\t\tprops[ name ] = value;\r\n\t\t\tdelete props[ index ];\r\n\t\t}\r\n\r\n\t\thooks = jQuery.cssHooks[ name ];\r\n\t\tif ( hooks && \"expand\" in hooks ) {\r\n\t\t\tvalue = hooks.expand( value );\r\n\t\t\tdelete props[ name ];\r\n\r\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\r\n\t\t\t// Reusing 'index' because we have the correct \"name\"\r\n\t\t\tfor ( index in value ) {\r\n\t\t\t\tif ( !( index in props ) ) {\r\n\t\t\t\t\tprops[ index ] = value[ index ];\r\n\t\t\t\t\tspecialEasing[ index ] = easing;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tspecialEasing[ name ] = easing;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction Animation( elem, properties, options ) {\r\n\tvar result,\r\n\t\tstopped,\r\n\t\tindex = 0,\r\n\t\tlength = Animation.prefilters.length,\r\n\t\tdeferred = jQuery.Deferred().always( function() {\r\n\r\n\t\t\t// Don't match elem in the :animated selector\r\n\t\t\tdelete tick.elem;\r\n\t\t} ),\r\n\t\ttick = function() {\r\n\t\t\tif ( stopped ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar currentTime = fxNow || createFxNow(),\r\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\r\n\r\n\t\t\t\t// Support: Android 2.3 only\r\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)\r\n\t\t\t\ttemp = remaining / animation.duration || 0,\r\n\t\t\t\tpercent = 1 - temp,\r\n\t\t\t\tindex = 0,\r\n\t\t\t\tlength = animation.tweens.length;\r\n\r\n\t\t\tfor ( ; index < length; index++ ) {\r\n\t\t\t\tanimation.tweens[ index ].run( percent );\r\n\t\t\t}\r\n\r\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\r\n\r\n\t\t\t// If there's more to do, yield\r\n\t\t\tif ( percent < 1 && length ) {\r\n\t\t\t\treturn remaining;\r\n\t\t\t}\r\n\r\n\t\t\t// If this was an empty animation, synthesize a final progress notification\r\n\t\t\tif ( !length ) {\r\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Resolve the animation and report its conclusion\r\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tanimation = deferred.promise( {\r\n\t\t\telem: elem,\r\n\t\t\tprops: jQuery.extend( {}, properties ),\r\n\t\t\topts: jQuery.extend( true, {\r\n\t\t\t\tspecialEasing: {},\r\n\t\t\t\teasing: jQuery.easing._default\r\n\t\t\t}, options ),\r\n\t\t\toriginalProperties: properties,\r\n\t\t\toriginalOptions: options,\r\n\t\t\tstartTime: fxNow || createFxNow(),\r\n\t\t\tduration: options.duration,\r\n\t\t\ttweens: [],\r\n\t\t\tcreateTween: function( prop, end ) {\r\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\r\n\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\r\n\t\t\t\tanimation.tweens.push( tween );\r\n\t\t\t\treturn tween;\r\n\t\t\t},\r\n\t\t\tstop: function( gotoEnd ) {\r\n\t\t\t\tvar index = 0,\r\n\r\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\r\n\t\t\t\t\t// otherwise we skip this part\r\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\r\n\t\t\t\tif ( stopped ) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tstopped = true;\r\n\t\t\t\tfor ( ; index < length; index++ ) {\r\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\r\n\t\t\t\tif ( gotoEnd ) {\r\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\r\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} ),\r\n\t\tprops = animation.props;\r\n\r\n\tpropFilter( props, animation.opts.specialEasing );\r\n\r\n\tfor ( ; index < length; index++ ) {\r\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\r\n\t\tif ( result ) {\r\n\t\t\tif ( isFunction( result.stop ) ) {\r\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\r\n\t\t\t\t\tresult.stop.bind( result );\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tjQuery.map( props, createTween, animation );\r\n\r\n\tif ( isFunction( animation.opts.start ) ) {\r\n\t\tanimation.opts.start.call( elem, animation );\r\n\t}\r\n\r\n\t// Attach callbacks from options\r\n\tanimation\r\n\t\t.progress( animation.opts.progress )\r\n\t\t.done( animation.opts.done, animation.opts.complete )\r\n\t\t.fail( animation.opts.fail )\r\n\t\t.always( animation.opts.always );\r\n\r\n\tjQuery.fx.timer(\r\n\t\tjQuery.extend( tick, {\r\n\t\t\telem: elem,\r\n\t\t\tanim: animation,\r\n\t\t\tqueue: animation.opts.queue\r\n\t\t} )\r\n\t);\r\n\r\n\treturn animation;\r\n}\r\n\r\njQuery.Animation = jQuery.extend( Animation, {\r\n\r\n\ttweeners: {\r\n\t\t\"*\": [ function( prop, value ) {\r\n\t\t\tvar tween = this.createTween( prop, value );\r\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\r\n\t\t\treturn tween;\r\n\t\t} ]\r\n\t},\r\n\r\n\ttweener: function( props, callback ) {\r\n\t\tif ( isFunction( props ) ) {\r\n\t\t\tcallback = props;\r\n\t\t\tprops = [ \"*\" ];\r\n\t\t} else {\r\n\t\t\tprops = props.match( rnothtmlwhite );\r\n\t\t}\r\n\r\n\t\tvar prop,\r\n\t\t\tindex = 0,\r\n\t\t\tlength = props.length;\r\n\r\n\t\tfor ( ; index < length; index++ ) {\r\n\t\t\tprop = props[ index ];\r\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\r\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\r\n\t\t}\r\n\t},\r\n\r\n\tprefilters: [ defaultPrefilter ],\r\n\r\n\tprefilter: function( callback, prepend ) {\r\n\t\tif ( prepend ) {\r\n\t\t\tAnimation.prefilters.unshift( callback );\r\n\t\t} else {\r\n\t\t\tAnimation.prefilters.push( callback );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.speed = function( speed, easing, fn ) {\r\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\r\n\t\tcomplete: fn || !fn && easing ||\r\n\t\t\tisFunction( speed ) && speed,\r\n\t\tduration: speed,\r\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\r\n\t};\r\n\r\n\t// Go to the end state if fx are off\r\n\tif ( jQuery.fx.off ) {\r\n\t\topt.duration = 0;\r\n\r\n\t} else {\r\n\t\tif ( typeof opt.duration !== \"number\" ) {\r\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\r\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\r\n\tif ( opt.queue == null || opt.queue === true ) {\r\n\t\topt.queue = \"fx\";\r\n\t}\r\n\r\n\t// Queueing\r\n\topt.old = opt.complete;\r\n\r\n\topt.complete = function() {\r\n\t\tif ( isFunction( opt.old ) ) {\r\n\t\t\topt.old.call( this );\r\n\t\t}\r\n\r\n\t\tif ( opt.queue ) {\r\n\t\t\tjQuery.dequeue( this, opt.queue );\r\n\t\t}\r\n\t};\r\n\r\n\treturn opt;\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfadeTo: function( speed, to, easing, callback ) {\r\n\r\n\t\t// Show any hidden elements after setting opacity to 0\r\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\r\n\r\n\t\t\t// Animate to the value specified\r\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\r\n\t},\r\n\tanimate: function( prop, speed, easing, callback ) {\r\n\t\tvar empty = jQuery.isEmptyObject( prop ),\r\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\r\n\t\t\tdoAnimation = function() {\r\n\r\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\r\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\r\n\r\n\t\t\t\t// Empty animations, or finishing resolves immediately\r\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\r\n\t\t\t\t\tanim.stop( true );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tdoAnimation.finish = doAnimation;\r\n\r\n\t\treturn empty || optall.queue === false ?\r\n\t\t\tthis.each( doAnimation ) :\r\n\t\t\tthis.queue( optall.queue, doAnimation );\r\n\t},\r\n\tstop: function( type, clearQueue, gotoEnd ) {\r\n\t\tvar stopQueue = function( hooks ) {\r\n\t\t\tvar stop = hooks.stop;\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tstop( gotoEnd );\r\n\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tgotoEnd = clearQueue;\r\n\t\t\tclearQueue = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\tif ( clearQueue ) {\r\n\t\t\tthis.queue( type || \"fx\", [] );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar dequeue = true,\r\n\t\t\t\tindex = type != null && type + \"queueHooks\",\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tdata = dataPriv.get( this );\r\n\r\n\t\t\tif ( index ) {\r\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\r\n\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( index in data ) {\r\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\r\n\t\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this &&\r\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\r\n\r\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\r\n\t\t\t\t\tdequeue = false;\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start the next in the queue if the last step wasn't forced.\r\n\t\t\t// Timers currently will call their complete callbacks, which\r\n\t\t\t// will dequeue but only if they were gotoEnd.\r\n\t\t\tif ( dequeue || !gotoEnd ) {\r\n\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tfinish: function( type ) {\r\n\t\tif ( type !== false ) {\r\n\t\t\ttype = type || \"fx\";\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tvar index,\r\n\t\t\t\tdata = dataPriv.get( this ),\r\n\t\t\t\tqueue = data[ type + \"queue\" ],\r\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tlength = queue ? queue.length : 0;\r\n\r\n\t\t\t// Enable finishing flag on private data\r\n\t\t\tdata.finish = true;\r\n\r\n\t\t\t// Empty the queue first\r\n\t\t\tjQuery.queue( this, type, [] );\r\n\r\n\t\t\tif ( hooks && hooks.stop ) {\r\n\t\t\t\thooks.stop.call( this, true );\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any active animations, and finish them\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\r\n\t\t\t\t\ttimers[ index ].anim.stop( true );\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any animations in the old queue and finish them\r\n\t\t\tfor ( index = 0; index < length; index++ ) {\r\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\r\n\t\t\t\t\tqueue[ index ].finish.call( this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Turn off finishing flag\r\n\t\t\tdelete data.finish;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\r\n\tvar cssFn = jQuery.fn[ name ];\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn speed == null || typeof speed === \"boolean\" ?\r\n\t\t\tcssFn.apply( this, arguments ) :\r\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\r\n\t};\r\n} );\r\n\r\n// Generate shortcuts for custom animations\r\njQuery.each( {\r\n\tslideDown: genFx( \"show\" ),\r\n\tslideUp: genFx( \"hide\" ),\r\n\tslideToggle: genFx( \"toggle\" ),\r\n\tfadeIn: { opacity: \"show\" },\r\n\tfadeOut: { opacity: \"hide\" },\r\n\tfadeToggle: { opacity: \"toggle\" }\r\n}, function( name, props ) {\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn this.animate( props, speed, easing, callback );\r\n\t};\r\n} );\r\n\r\njQuery.timers = [];\r\njQuery.fx.tick = function() {\r\n\tvar timer,\r\n\t\ti = 0,\r\n\t\ttimers = jQuery.timers;\r\n\r\n\tfxNow = Date.now();\r\n\r\n\tfor ( ; i < timers.length; i++ ) {\r\n\t\ttimer = timers[ i ];\r\n\r\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\r\n\t\tif ( !timer() && timers[ i ] === timer ) {\r\n\t\t\ttimers.splice( i--, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !timers.length ) {\r\n\t\tjQuery.fx.stop();\r\n\t}\r\n\tfxNow = undefined;\r\n};\r\n\r\njQuery.fx.timer = function( timer ) {\r\n\tjQuery.timers.push( timer );\r\n\tjQuery.fx.start();\r\n};\r\n\r\njQuery.fx.interval = 13;\r\njQuery.fx.start = function() {\r\n\tif ( inProgress ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tinProgress = true;\r\n\tschedule();\r\n};\r\n\r\njQuery.fx.stop = function() {\r\n\tinProgress = null;\r\n};\r\n\r\njQuery.fx.speeds = {\r\n\tslow: 600,\r\n\tfast: 200,\r\n\r\n\t// Default speed\r\n\t_default: 400\r\n};\r\n\r\n\r\n// Based off of the plugin by Clint Helfers, with permission.\r\njQuery.fn.delay = function( time, type ) {\r\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n\ttype = type || \"fx\";\r\n\r\n\treturn this.queue( type, function( next, hooks ) {\r\n\t\tvar timeout = window.setTimeout( next, time );\r\n\t\thooks.stop = function() {\r\n\t\t\twindow.clearTimeout( timeout );\r\n\t\t};\r\n\t} );\r\n};\r\n\r\n\r\n( function() {\r\n\tvar input = document.createElement( \"input\" ),\r\n\t\tselect = document.createElement( \"select\" ),\r\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\r\n\r\n\tinput.type = \"checkbox\";\r\n\r\n\t// Support: Android <=4.3 only\r\n\t// Default value for a checkbox should be \"on\"\r\n\tsupport.checkOn = input.value !== \"\";\r\n\r\n\t// Support: IE <=11 only\r\n\t// Must access selectedIndex to make default options select\r\n\tsupport.optSelected = opt.selected;\r\n\r\n\t// Support: IE <=11 only\r\n\t// An input loses its value after becoming a radio\r\n\tinput = document.createElement( \"input\" );\r\n\tinput.value = \"t\";\r\n\tinput.type = \"radio\";\r\n\tsupport.radioValue = input.value === \"t\";\r\n} )();\r\n\r\n\r\nvar boolHook,\r\n\tattrHandle = jQuery.expr.attrHandle;\r\n\r\njQuery.fn.extend( {\r\n\tattr: function( name, value ) {\r\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveAttr: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.removeAttr( this, name );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tattr: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set attributes on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Fallback to prop when attributes are not supported\r\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\r\n\t\t\treturn jQuery.prop( elem, name, value );\r\n\t\t}\r\n\r\n\t\t// Attribute hooks are determined by the lowercase version\r\n\t\t// Grab necessary hook if one is defined\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\r\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( value === null ) {\r\n\t\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\telem.setAttribute( name, value + \"\" );\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\tret = jQuery.find.attr( elem, name );\r\n\r\n\t\t// Non-existent attributes return null, we normalize to undefined\r\n\t\treturn ret == null ? undefined : ret;\r\n\t},\r\n\r\n\tattrHooks: {\r\n\t\ttype: {\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\r\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\r\n\t\t\t\t\tvar val = elem.value;\r\n\t\t\t\t\telem.setAttribute( \"type\", value );\r\n\t\t\t\t\tif ( val ) {\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveAttr: function( elem, value ) {\r\n\t\tvar name,\r\n\t\t\ti = 0,\r\n\r\n\t\t\t// Attribute names can contain non-HTML whitespace characters\r\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\r\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\r\n\r\n\t\tif ( attrNames && elem.nodeType === 1 ) {\r\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\r\n\t\t\t\telem.removeAttribute( name );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Hooks for boolean attributes\r\nboolHook = {\r\n\tset: function( elem, value, name ) {\r\n\t\tif ( value === false ) {\r\n\r\n\t\t\t// Remove boolean attributes when set to false\r\n\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t} else {\r\n\t\t\telem.setAttribute( name, name );\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n};\r\n\r\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\r\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\r\n\r\n\tattrHandle[ name ] = function( elem, name, isXML ) {\r\n\t\tvar ret, handle,\r\n\t\t\tlowercaseName = name.toLowerCase();\r\n\r\n\t\tif ( !isXML ) {\r\n\r\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\r\n\t\t\thandle = attrHandle[ lowercaseName ];\r\n\t\t\tattrHandle[ lowercaseName ] = ret;\r\n\t\t\tret = getter( elem, name, isXML ) != null ?\r\n\t\t\t\tlowercaseName :\r\n\t\t\t\tnull;\r\n\t\t\tattrHandle[ lowercaseName ] = handle;\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\r\n\trclickable = /^(?:a|area)$/i;\r\n\r\njQuery.fn.extend( {\r\n\tprop: function( name, value ) {\r\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveProp: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tprop: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set properties on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// Fix name and attach hooks\r\n\t\t\tname = jQuery.propFix[ name ] || name;\r\n\t\t\thooks = jQuery.propHooks[ name ];\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn ( elem[ name ] = value );\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\treturn elem[ name ];\r\n\t},\r\n\r\n\tpropHooks: {\r\n\t\ttabIndex: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// Support: IE <=9 - 11 only\r\n\t\t\t\t// elem.tabIndex doesn't always return the\r\n\t\t\t\t// correct value when it hasn't been explicitly set\r\n\t\t\t\t// Use proper attribute retrieval (trac-12072)\r\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\r\n\r\n\t\t\t\tif ( tabindex ) {\r\n\t\t\t\t\treturn parseInt( tabindex, 10 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\r\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\r\n\t\t\t\t\telem.href\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpropFix: {\r\n\t\t\"for\": \"htmlFor\",\r\n\t\t\"class\": \"className\"\r\n\t}\r\n} );\r\n\r\n// Support: IE <=11 only\r\n// Accessing the selectedIndex property\r\n// forces the browser to respect setting selected\r\n// on the option\r\n// The getter ensures a default option is selected\r\n// when in an optgroup\r\n// eslint rule \"no-unused-expressions\" is disabled for this code\r\n// since it considers such accessions noop\r\nif ( !support.optSelected ) {\r\n\tjQuery.propHooks.selected = {\r\n\t\tget: function( elem ) {\r\n\r\n\t\t\t/* eslint no-unused-expressions: \"off\" */\r\n\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent && parent.parentNode ) {\r\n\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tset: function( elem ) {\r\n\r\n\t\t\t/* eslint no-unused-expressions: \"off\" */\r\n\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent ) {\r\n\t\t\t\tparent.selectedIndex;\r\n\r\n\t\t\t\tif ( parent.parentNode ) {\r\n\t\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\njQuery.each( [\r\n\t\"tabIndex\",\r\n\t\"readOnly\",\r\n\t\"maxLength\",\r\n\t\"cellSpacing\",\r\n\t\"cellPadding\",\r\n\t\"rowSpan\",\r\n\t\"colSpan\",\r\n\t\"useMap\",\r\n\t\"frameBorder\",\r\n\t\"contentEditable\"\r\n], function() {\r\n\tjQuery.propFix[ this.toLowerCase() ] = this;\r\n} );\r\n\r\n\r\n\r\n\r\n\t// Strip and collapse whitespace according to HTML spec\r\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\r\n\tfunction stripAndCollapse( value ) {\r\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\r\n\t\treturn tokens.join( \" \" );\r\n\t}\r\n\r\n\r\nfunction getClass( elem ) {\r\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\r\n}\r\n\r\nfunction classesToArray( value ) {\r\n\tif ( Array.isArray( value ) ) {\r\n\t\treturn value;\r\n\t}\r\n\tif ( typeof value === \"string\" ) {\r\n\t\treturn value.match( rnothtmlwhite ) || [];\r\n\t}\r\n\treturn [];\r\n}\r\n\r\njQuery.fn.extend( {\r\n\taddClass: function( value ) {\r\n\t\tvar classNames, cur, curValue, className, i, finalValue;\r\n\r\n\t\tif ( isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tclassNames = classesToArray( value );\r\n\r\n\t\tif ( classNames.length ) {\r\n\t\t\treturn this.each( function() {\r\n\t\t\t\tcurValue = getClass( this );\r\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\r\n\t\t\t\t\t\tclassName = classNames[ i ];\r\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + className + \" \" ) < 0 ) {\r\n\t\t\t\t\t\t\tcur += className + \" \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tremoveClass: function( value ) {\r\n\t\tvar classNames, cur, curValue, className, i, finalValue;\r\n\r\n\t\tif ( isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this.attr( \"class\", \"\" );\r\n\t\t}\r\n\r\n\t\tclassNames = classesToArray( value );\r\n\r\n\t\tif ( classNames.length ) {\r\n\t\t\treturn this.each( function() {\r\n\t\t\t\tcurValue = getClass( this );\r\n\r\n\t\t\t\t// This expression is here for better compressibility (see addClass)\r\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\r\n\t\t\t\t\t\tclassName = classNames[ i ];\r\n\r\n\t\t\t\t\t\t// Remove *all* instances\r\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + className + \" \" ) > -1 ) {\r\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + className + \" \", \" \" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoggleClass: function( value, stateVal ) {\r\n\t\tvar classNames, className, i, self,\r\n\t\t\ttype = typeof value,\r\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\r\n\r\n\t\tif ( isFunction( value ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).toggleClass(\r\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\r\n\t\t\t\t\tstateVal\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\r\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\r\n\t\t}\r\n\r\n\t\tclassNames = classesToArray( value );\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tif ( isValidValue ) {\r\n\r\n\t\t\t\t// Toggle individual class names\r\n\t\t\t\tself = jQuery( this );\r\n\r\n\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\r\n\t\t\t\t\tclassName = classNames[ i ];\r\n\r\n\t\t\t\t\t// Check each className given, space separated list\r\n\t\t\t\t\tif ( self.hasClass( className ) ) {\r\n\t\t\t\t\t\tself.removeClass( className );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.addClass( className );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t// Toggle whole class name\r\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\r\n\t\t\t\tclassName = getClass( this );\r\n\t\t\t\tif ( className ) {\r\n\r\n\t\t\t\t\t// Store className if set\r\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the element has a class name or if we're passed `false`,\r\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\r\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\r\n\t\t\t\t// falling back to the empty string if nothing was stored.\r\n\t\t\t\tif ( this.setAttribute ) {\r\n\t\t\t\t\tthis.setAttribute( \"class\",\r\n\t\t\t\t\t\tclassName || value === false ?\r\n\t\t\t\t\t\t\t\"\" :\r\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\thasClass: function( selector ) {\r\n\t\tvar className, elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tclassName = \" \" + selector + \" \";\r\n\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\tif ( elem.nodeType === 1 &&\r\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar rreturn = /\\r/g;\r\n\r\njQuery.fn.extend( {\r\n\tval: function( value ) {\r\n\t\tvar hooks, ret, valueIsFunction,\r\n\t\t\telem = this[ 0 ];\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\tif ( elem ) {\r\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\r\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\r\n\r\n\t\t\t\tif ( hooks &&\r\n\t\t\t\t\t\"get\" in hooks &&\r\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tret = elem.value;\r\n\r\n\t\t\t\t// Handle most common string cases\r\n\t\t\t\tif ( typeof ret === \"string\" ) {\r\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handle cases where value is null/undef or number\r\n\t\t\t\treturn ret == null ? \"\" : ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvalueIsFunction = isFunction( value );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tvar val;\r\n\r\n\t\t\tif ( this.nodeType !== 1 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( valueIsFunction ) {\r\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\r\n\t\t\t} else {\r\n\t\t\t\tval = value;\r\n\t\t\t}\r\n\r\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\tval = \"\";\r\n\r\n\t\t\t} else if ( typeof val === \"number\" ) {\r\n\t\t\t\tval += \"\";\r\n\r\n\t\t\t} else if ( Array.isArray( val ) ) {\r\n\t\t\t\tval = jQuery.map( val, function( value ) {\r\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\r\n\r\n\t\t\t// If set returns undefined, fall back to normal setting\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\r\n\t\t\t\tthis.value = val;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tvalHooks: {\r\n\t\toption: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\r\n\t\t\t\treturn val != null ?\r\n\t\t\t\t\tval :\r\n\r\n\t\t\t\t\t// Support: IE <=10 - 11 only\r\n\t\t\t\t\t// option.text throws exceptions (trac-14686, trac-14858)\r\n\t\t\t\t\t// Strip and collapse whitespace\r\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\r\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\tget: function( elem ) {\r\n\t\t\t\tvar value, option, i,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tindex = elem.selectedIndex,\r\n\t\t\t\t\tone = elem.type === \"select-one\",\r\n\t\t\t\t\tvalues = one ? null : [],\r\n\t\t\t\t\tmax = one ? index + 1 : options.length;\r\n\r\n\t\t\t\tif ( index < 0 ) {\r\n\t\t\t\t\ti = max;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti = one ? index : 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Loop through all the selected options\r\n\t\t\t\tfor ( ; i < max; i++ ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\r\n\t\t\t\t\t// Support: IE <=9 only\r\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (trac-2551)\r\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\r\n\r\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\r\n\t\t\t\t\t\t\t!option.disabled &&\r\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\r\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n\t\t\t\t\t\t// Get the specific value for the option\r\n\t\t\t\t\t\tvalue = jQuery( option ).val();\r\n\r\n\t\t\t\t\t\t// We don't need an array for one selects\r\n\t\t\t\t\t\tif ( one ) {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Multi-Selects return an array\r\n\t\t\t\t\t\tvalues.push( value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t},\r\n\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tvar optionSet, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\r\n\t\t\t\t\ti = options.length;\r\n\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\r\n\t\t\t\t\t/* eslint-disable no-cond-assign */\r\n\r\n\t\t\t\t\tif ( option.selected =\r\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\toptionSet = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* eslint-enable no-cond-assign */\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\r\n\t\t\t\tif ( !optionSet ) {\r\n\t\t\t\t\telem.selectedIndex = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Radios and checkboxes getter/setter\r\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\r\n\tjQuery.valHooks[ this ] = {\r\n\t\tset: function( elem, value ) {\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tif ( !support.checkOn ) {\r\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\r\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Return jQuery for attributes-only inclusion\r\nvar location = window.location;\r\n\r\nvar nonce = { guid: Date.now() };\r\n\r\nvar rquery = ( /\\?/ );\r\n\r\n\r\n\r\n// Cross-browser xml parsing\r\njQuery.parseXML = function( data ) {\r\n\tvar xml, parserErrorElem;\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Support: IE 9 - 11 only\r\n\t// IE throws on parseFromString with invalid input.\r\n\ttry {\r\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\r\n\t} catch ( e ) {}\r\n\r\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\r\n\tif ( !xml || parserErrorElem ) {\r\n\t\tjQuery.error( \"Invalid XML: \" + (\r\n\t\t\tparserErrorElem ?\r\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\r\n\t\t\t\t\treturn el.textContent;\r\n\t\t\t\t} ).join( \"\\n\" ) :\r\n\t\t\t\tdata\r\n\t\t) );\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\n\r\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\r\n\tstopPropagationCallback = function( e ) {\r\n\t\te.stopPropagation();\r\n\t};\r\n\r\njQuery.extend( jQuery.event, {\r\n\r\n\ttrigger: function( event, data, elem, onlyHandlers ) {\r\n\r\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\r\n\t\t\teventPath = [ elem || document ],\r\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\r\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\r\n\r\n\t\tcur = lastElement = tmp = elem = elem || document;\r\n\r\n\t\t// Don't do events on text and comment nodes\r\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\r\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\r\n\r\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\r\n\t\t\tnamespaces = type.split( \".\" );\r\n\t\t\ttype = namespaces.shift();\r\n\t\t\tnamespaces.sort();\r\n\t\t}\r\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\r\n\r\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\r\n\t\tevent = event[ jQuery.expando ] ?\r\n\t\t\tevent :\r\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\r\n\r\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\r\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\r\n\t\tevent.namespace = namespaces.join( \".\" );\r\n\t\tevent.rnamespace = event.namespace ?\r\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\r\n\t\t\tnull;\r\n\r\n\t\t// Clean up the event in case it is being reused\r\n\t\tevent.result = undefined;\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = elem;\r\n\t\t}\r\n\r\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\r\n\t\tdata = data == null ?\r\n\t\t\t[ event ] :\r\n\t\t\tjQuery.makeArray( data, [ event ] );\r\n\r\n\t\t// Allow special events to draw outside the lines\r\n\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine event propagation path in advance, per W3C events spec (trac-9951)\r\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)\r\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\r\n\r\n\t\t\tbubbleType = special.delegateType || type;\r\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\r\n\t\t\t\tcur = cur.parentNode;\r\n\t\t\t}\r\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\r\n\t\t\t\teventPath.push( cur );\r\n\t\t\t\ttmp = cur;\r\n\t\t\t}\r\n\r\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\r\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fire handlers on the event path\r\n\t\ti = 0;\r\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\t\t\tlastElement = cur;\r\n\t\t\tevent.type = i > 1 ?\r\n\t\t\t\tbubbleType :\r\n\t\t\t\tspecial.bindType || type;\r\n\r\n\t\t\t// jQuery handler\r\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || Object.create( null ) )[ event.type ] &&\r\n\t\t\t\tdataPriv.get( cur, \"handle\" );\r\n\t\t\tif ( handle ) {\r\n\t\t\t\thandle.apply( cur, data );\r\n\t\t\t}\r\n\r\n\t\t\t// Native handler\r\n\t\t\thandle = ontype && cur[ ontype ];\r\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\r\n\t\t\t\tevent.result = handle.apply( cur, data );\r\n\t\t\t\tif ( event.result === false ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.type = type;\r\n\r\n\t\t// If nobody prevented the default action, do it now\r\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n\t\t\tif ( ( !special._default ||\r\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\r\n\t\t\t\tacceptData( elem ) ) {\r\n\r\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\r\n\t\t\t\t// Don't do default actions on window, that's where global variables be (trac-6170)\r\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\r\n\t\t\t\t\ttmp = elem[ ontype ];\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\r\n\t\t\t\t\tjQuery.event.triggered = type;\r\n\r\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\r\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telem[ type ]();\r\n\r\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\r\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tjQuery.event.triggered = undefined;\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\t// Piggyback on a donor event to simulate a different one\r\n\t// Used only for `focus(in | out)` events\r\n\tsimulate: function( type, elem, event ) {\r\n\t\tvar e = jQuery.extend(\r\n\t\t\tnew jQuery.Event(),\r\n\t\t\tevent,\r\n\t\t\t{\r\n\t\t\t\ttype: type,\r\n\t\t\t\tisSimulated: true\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tjQuery.event.trigger( e, null, elem );\r\n\t}\r\n\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\ttrigger: function( type, data ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.trigger( type, data, this );\r\n\t\t} );\r\n\t},\r\n\ttriggerHandler: function( type, data ) {\r\n\t\tvar elem = this[ 0 ];\r\n\t\tif ( elem ) {\r\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\trbracket = /\\[\\]$/,\r\n\trCRLF = /\\r?\\n/g,\r\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\r\nfunction buildParams( prefix, obj, traditional, add ) {\r\n\tvar name;\r\n\r\n\tif ( Array.isArray( obj ) ) {\r\n\r\n\t\t// Serialize array item.\r\n\t\tjQuery.each( obj, function( i, v ) {\r\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\r\n\r\n\t\t\t\t// Treat each array item as a scalar.\r\n\t\t\t\tadd( prefix, v );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\r\n\t\t\t\tbuildParams(\r\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\r\n\t\t\t\t\tv,\r\n\t\t\t\t\ttraditional,\r\n\t\t\t\t\tadd\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\r\n\r\n\t\t// Serialize object item.\r\n\t\tfor ( name in obj ) {\r\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// Serialize scalar item.\r\n\t\tadd( prefix, obj );\r\n\t}\r\n}\r\n\r\n// Serialize an array of form elements or a set of\r\n// key/values into a query string\r\njQuery.param = function( a, traditional ) {\r\n\tvar prefix,\r\n\t\ts = [],\r\n\t\tadd = function( key, valueOrFunction ) {\r\n\r\n\t\t\t// If value is a function, invoke it and use its return value\r\n\t\t\tvar value = isFunction( valueOrFunction ) ?\r\n\t\t\t\tvalueOrFunction() :\r\n\t\t\t\tvalueOrFunction;\r\n\r\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\r\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\r\n\t\t};\r\n\r\n\tif ( a == null ) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t// If an array was passed in, assume that it is an array of form elements.\r\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n\r\n\t\t// Serialize the form elements\r\n\t\tjQuery.each( a, function() {\r\n\t\t\tadd( this.name, this.value );\r\n\t\t} );\r\n\r\n\t} else {\r\n\r\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n\t\t// did it), otherwise encode params recursively.\r\n\t\tfor ( prefix in a ) {\r\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the resulting serialization\r\n\treturn s.join( \"&\" );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tserialize: function() {\r\n\t\treturn jQuery.param( this.serializeArray() );\r\n\t},\r\n\tserializeArray: function() {\r\n\t\treturn this.map( function() {\r\n\r\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\r\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\r\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\r\n\t\t} ).filter( function() {\r\n\t\t\tvar type = this.type;\r\n\r\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\r\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\r\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\r\n\t\t} ).map( function( _i, elem ) {\r\n\t\t\tvar val = jQuery( this ).val();\r\n\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\treturn jQuery.map( val, function( val ) {\r\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t} ).get();\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\tr20 = /%20/g,\r\n\trhash = /#.*$/,\r\n\trantiCache = /([?&])_=[^&]*/,\r\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\r\n\r\n\t// trac-7653, trac-8125, trac-8152: local protocol detection\r\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\r\n\trnoContent = /^(?:GET|HEAD)$/,\r\n\trprotocol = /^\\/\\//,\r\n\r\n\t/* Prefilters\r\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n\t * 2) These are called:\r\n\t *    - BEFORE asking for a transport\r\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n\t * 3) key is the dataType\r\n\t * 4) the catchall symbol \"*\" can be used\r\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n\t */\r\n\tprefilters = {},\r\n\r\n\t/* Transports bindings\r\n\t * 1) key is the dataType\r\n\t * 2) the catchall symbol \"*\" can be used\r\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n\t */\r\n\ttransports = {},\r\n\r\n\t// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression\r\n\tallTypes = \"*/\".concat( \"*\" ),\r\n\r\n\t// Anchor tag for parsing the document origin\r\n\toriginAnchor = document.createElement( \"a\" );\r\n\r\noriginAnchor.href = location.href;\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\nfunction addToPrefiltersOrTransports( structure ) {\r\n\r\n\t// dataTypeExpression is optional and defaults to \"*\"\r\n\treturn function( dataTypeExpression, func ) {\r\n\r\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\r\n\t\t\tfunc = dataTypeExpression;\r\n\t\t\tdataTypeExpression = \"*\";\r\n\t\t}\r\n\r\n\t\tvar dataType,\r\n\t\t\ti = 0,\r\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\r\n\r\n\t\tif ( isFunction( func ) ) {\r\n\r\n\t\t\t// For each dataType in the dataTypeExpression\r\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\r\n\r\n\t\t\t\t// Prepend if requested\r\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\r\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\r\n\r\n\t\t\t\t// Otherwise append\r\n\t\t\t\t} else {\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Base inspection function for prefilters and transports\r\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\r\n\r\n\tvar inspected = {},\r\n\t\tseekingTransport = ( structure === transports );\r\n\r\n\tfunction inspect( dataType ) {\r\n\t\tvar selected;\r\n\t\tinspected[ dataType ] = true;\r\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\r\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\r\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\r\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\r\n\r\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\r\n\t\t\t\tinspect( dataTypeOrTransport );\r\n\t\t\t\treturn false;\r\n\t\t\t} else if ( seekingTransport ) {\r\n\t\t\t\treturn !( selected = dataTypeOrTransport );\r\n\t\t\t}\r\n\t\t} );\r\n\t\treturn selected;\r\n\t}\r\n\r\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\r\n}\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes trac-9887\r\nfunction ajaxExtend( target, src ) {\r\n\tvar key, deep,\r\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n\tfor ( key in src ) {\r\n\t\tif ( src[ key ] !== undefined ) {\r\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\r\n\t\t}\r\n\t}\r\n\tif ( deep ) {\r\n\t\tjQuery.extend( true, target, deep );\r\n\t}\r\n\r\n\treturn target;\r\n}\r\n\r\n/* Handles responses to an ajax request:\r\n * - finds the right dataType (mediates between content-type and expected dataType)\r\n * - returns the corresponding response\r\n */\r\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\r\n\r\n\tvar ct, type, finalDataType, firstDataType,\r\n\t\tcontents = s.contents,\r\n\t\tdataTypes = s.dataTypes;\r\n\r\n\t// Remove auto dataType and get content-type in the process\r\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\r\n\t\tdataTypes.shift();\r\n\t\tif ( ct === undefined ) {\r\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if we're dealing with a known content-type\r\n\tif ( ct ) {\r\n\t\tfor ( type in contents ) {\r\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n\t\t\t\tdataTypes.unshift( type );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Check to see if we have a response for the expected dataType\r\n\tif ( dataTypes[ 0 ] in responses ) {\r\n\t\tfinalDataType = dataTypes[ 0 ];\r\n\t} else {\r\n\r\n\t\t// Try convertible dataTypes\r\n\t\tfor ( type in responses ) {\r\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\r\n\t\t\t\tfinalDataType = type;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( !firstDataType ) {\r\n\t\t\t\tfirstDataType = type;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Or just use first one\r\n\t\tfinalDataType = finalDataType || firstDataType;\r\n\t}\r\n\r\n\t// If we found a dataType\r\n\t// We add the dataType to the list if needed\r\n\t// and return the corresponding response\r\n\tif ( finalDataType ) {\r\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\r\n\t\t\tdataTypes.unshift( finalDataType );\r\n\t\t}\r\n\t\treturn responses[ finalDataType ];\r\n\t}\r\n}\r\n\r\n/* Chain conversions given the request and the original response\r\n * Also sets the responseXXX fields on the jqXHR instance\r\n */\r\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\r\n\tvar conv2, current, conv, tmp, prev,\r\n\t\tconverters = {},\r\n\r\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\r\n\t\tdataTypes = s.dataTypes.slice();\r\n\r\n\t// Create converters map with lowercased keys\r\n\tif ( dataTypes[ 1 ] ) {\r\n\t\tfor ( conv in s.converters ) {\r\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n\t\t}\r\n\t}\r\n\r\n\tcurrent = dataTypes.shift();\r\n\r\n\t// Convert to each sequential dataType\r\n\twhile ( current ) {\r\n\r\n\t\tif ( s.responseFields[ current ] ) {\r\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\r\n\t\t}\r\n\r\n\t\t// Apply the dataFilter if provided\r\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\r\n\t\t\tresponse = s.dataFilter( response, s.dataType );\r\n\t\t}\r\n\r\n\t\tprev = current;\r\n\t\tcurrent = dataTypes.shift();\r\n\r\n\t\tif ( current ) {\r\n\r\n\t\t\t// There's only work to do if current dataType is non-auto\r\n\t\t\tif ( current === \"*\" ) {\r\n\r\n\t\t\t\tcurrent = prev;\r\n\r\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\r\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\r\n\r\n\t\t\t\t// Seek a direct converter\r\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n\t\t\t\t// If none found, seek a pair\r\n\t\t\t\tif ( !conv ) {\r\n\t\t\t\t\tfor ( conv2 in converters ) {\r\n\r\n\t\t\t\t\t\t// If conv2 outputs current\r\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\r\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\r\n\r\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\r\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\r\n\t\t\t\t\t\t\tif ( conv ) {\r\n\r\n\t\t\t\t\t\t\t\t// Condense equivalence converters\r\n\t\t\t\t\t\t\t\tif ( conv === true ) {\r\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\r\n\r\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\r\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\r\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\r\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply converter (if not an equivalence)\r\n\t\t\t\tif ( conv !== true ) {\r\n\r\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\r\n\t\t\t\t\tif ( conv && s.throws ) {\r\n\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\r\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { state: \"success\", data: response };\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Counter for holding the number of active queries\r\n\tactive: 0,\r\n\r\n\t// Last-Modified header cache for next request\r\n\tlastModified: {},\r\n\tetag: {},\r\n\r\n\tajaxSettings: {\r\n\t\turl: location.href,\r\n\t\ttype: \"GET\",\r\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\r\n\t\tglobal: true,\r\n\t\tprocessData: true,\r\n\t\tasync: true,\r\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\r\n\t\t/*\r\n\t\ttimeout: 0,\r\n\t\tdata: null,\r\n\t\tdataType: null,\r\n\t\tusername: null,\r\n\t\tpassword: null,\r\n\t\tcache: null,\r\n\t\tthrows: false,\r\n\t\ttraditional: false,\r\n\t\theaders: {},\r\n\t\t*/\r\n\r\n\t\taccepts: {\r\n\t\t\t\"*\": allTypes,\r\n\t\t\ttext: \"text/plain\",\r\n\t\t\thtml: \"text/html\",\r\n\t\t\txml: \"application/xml, text/xml\",\r\n\t\t\tjson: \"application/json, text/javascript\"\r\n\t\t},\r\n\r\n\t\tcontents: {\r\n\t\t\txml: /\\bxml\\b/,\r\n\t\t\thtml: /\\bhtml/,\r\n\t\t\tjson: /\\bjson\\b/\r\n\t\t},\r\n\r\n\t\tresponseFields: {\r\n\t\t\txml: \"responseXML\",\r\n\t\t\ttext: \"responseText\",\r\n\t\t\tjson: \"responseJSON\"\r\n\t\t},\r\n\r\n\t\t// Data converters\r\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\r\n\t\tconverters: {\r\n\r\n\t\t\t// Convert anything to text\r\n\t\t\t\"* text\": String,\r\n\r\n\t\t\t// Text to html (true = no transformation)\r\n\t\t\t\"text html\": true,\r\n\r\n\t\t\t// Evaluate text as a json expression\r\n\t\t\t\"text json\": JSON.parse,\r\n\r\n\t\t\t// Parse text as xml\r\n\t\t\t\"text xml\": jQuery.parseXML\r\n\t\t},\r\n\r\n\t\t// For options that shouldn't be deep extended:\r\n\t\t// you can add your own custom options here if\r\n\t\t// and when you create one that shouldn't be\r\n\t\t// deep extended (see ajaxExtend)\r\n\t\tflatOptions: {\r\n\t\t\turl: true,\r\n\t\t\tcontext: true\r\n\t\t}\r\n\t},\r\n\r\n\t// Creates a full fledged settings object into target\r\n\t// with both ajaxSettings and settings fields.\r\n\t// If target is omitted, writes into ajaxSettings.\r\n\tajaxSetup: function( target, settings ) {\r\n\t\treturn settings ?\r\n\r\n\t\t\t// Building a settings object\r\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\r\n\r\n\t\t\t// Extending ajaxSettings\r\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\r\n\t},\r\n\r\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n\t// Main method\r\n\tajax: function( url, options ) {\r\n\r\n\t\t// If url is an object, simulate pre-1.5 signature\r\n\t\tif ( typeof url === \"object\" ) {\r\n\t\t\toptions = url;\r\n\t\t\turl = undefined;\r\n\t\t}\r\n\r\n\t\t// Force options to be an object\r\n\t\toptions = options || {};\r\n\r\n\t\tvar transport,\r\n\r\n\t\t\t// URL without anti-cache param\r\n\t\t\tcacheURL,\r\n\r\n\t\t\t// Response headers\r\n\t\t\tresponseHeadersString,\r\n\t\t\tresponseHeaders,\r\n\r\n\t\t\t// timeout handle\r\n\t\t\ttimeoutTimer,\r\n\r\n\t\t\t// Url cleanup var\r\n\t\t\turlAnchor,\r\n\r\n\t\t\t// Request state (becomes false upon send and true upon completion)\r\n\t\t\tcompleted,\r\n\r\n\t\t\t// To know if global events are to be dispatched\r\n\t\t\tfireGlobals,\r\n\r\n\t\t\t// Loop variable\r\n\t\t\ti,\r\n\r\n\t\t\t// uncached part of the url\r\n\t\t\tuncached,\r\n\r\n\t\t\t// Create the final options object\r\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\r\n\r\n\t\t\t// Callbacks context\r\n\t\t\tcallbackContext = s.context || s,\r\n\r\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\r\n\t\t\tglobalEventContext = s.context &&\r\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\r\n\t\t\t\tjQuery( callbackContext ) :\r\n\t\t\t\tjQuery.event,\r\n\r\n\t\t\t// Deferreds\r\n\t\t\tdeferred = jQuery.Deferred(),\r\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tstatusCode = s.statusCode || {},\r\n\r\n\t\t\t// Headers (they are sent all at once)\r\n\t\t\trequestHeaders = {},\r\n\t\t\trequestHeadersNames = {},\r\n\r\n\t\t\t// Default abort message\r\n\t\t\tstrAbort = \"canceled\",\r\n\r\n\t\t\t// Fake xhr\r\n\t\t\tjqXHR = {\r\n\t\t\t\treadyState: 0,\r\n\r\n\t\t\t\t// Builds headers hashtable if needed\r\n\t\t\t\tgetResponseHeader: function( key ) {\r\n\t\t\t\t\tvar match;\r\n\t\t\t\t\tif ( completed ) {\r\n\t\t\t\t\t\tif ( !responseHeaders ) {\r\n\t\t\t\t\t\t\tresponseHeaders = {};\r\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\r\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\r\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\r\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Raw string\r\n\t\t\t\tgetAllResponseHeaders: function() {\r\n\t\t\t\t\treturn completed ? responseHeadersString : null;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Caches the header\r\n\t\t\t\tsetRequestHeader: function( name, value ) {\r\n\t\t\t\t\tif ( completed == null ) {\r\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\r\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\r\n\t\t\t\t\t\trequestHeaders[ name ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Overrides response content-type header\r\n\t\t\t\toverrideMimeType: function( type ) {\r\n\t\t\t\t\tif ( completed == null ) {\r\n\t\t\t\t\t\ts.mimeType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Status-dependent callbacks\r\n\t\t\t\tstatusCode: function( map ) {\r\n\t\t\t\t\tvar code;\r\n\t\t\t\t\tif ( map ) {\r\n\t\t\t\t\t\tif ( completed ) {\r\n\r\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\r\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\r\n\t\t\t\t\t\t\tfor ( code in map ) {\r\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Cancel the request\r\n\t\t\t\tabort: function( statusText ) {\r\n\t\t\t\t\tvar finalText = statusText || strAbort;\r\n\t\t\t\t\tif ( transport ) {\r\n\t\t\t\t\t\ttransport.abort( finalText );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdone( 0, finalText );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t// Attach deferreds\r\n\t\tdeferred.promise( jqXHR );\r\n\r\n\t\t// Add protocol if not provided (prefilters might expect it)\r\n\t\t// Handle falsy url in the settings object (trac-10093: consistency with old signature)\r\n\t\t// We also use the url parameter if available\r\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\r\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\r\n\r\n\t\t// Alias method option to type as per ticket trac-12004\r\n\t\ts.type = options.method || options.type || s.method || s.type;\r\n\r\n\t\t// Extract dataTypes list\r\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\r\n\r\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\r\n\t\tif ( s.crossDomain == null ) {\r\n\t\t\turlAnchor = document.createElement( \"a\" );\r\n\r\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\r\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\r\n\t\t\t// e.g. http://example.com:80x/\r\n\t\t\ttry {\r\n\t\t\t\turlAnchor.href = s.url;\r\n\r\n\t\t\t\t// Support: IE <=8 - 11 only\r\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\r\n\t\t\t\turlAnchor.href = urlAnchor.href;\r\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\r\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\r\n\t\t\t\t// it can be rejected by the transport if it is invalid\r\n\t\t\t\ts.crossDomain = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Convert data if not already a string\r\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\r\n\t\t}\r\n\r\n\t\t// Apply prefilters\r\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n\t\t// If request was aborted inside a prefilter, stop there\r\n\t\tif ( completed ) {\r\n\t\t\treturn jqXHR;\r\n\t\t}\r\n\r\n\t\t// We can fire global events as of now if asked to\r\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)\r\n\t\tfireGlobals = jQuery.event && s.global;\r\n\r\n\t\t// Watch for a new set of requests\r\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\r\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\r\n\t\t}\r\n\r\n\t\t// Uppercase the type\r\n\t\ts.type = s.type.toUpperCase();\r\n\r\n\t\t// Determine if request has content\r\n\t\ts.hasContent = !rnoContent.test( s.type );\r\n\r\n\t\t// Save the URL in case we're toying with the If-Modified-Since\r\n\t\t// and/or If-None-Match header later on\r\n\t\t// Remove hash to simplify url manipulation\r\n\t\tcacheURL = s.url.replace( rhash, \"\" );\r\n\r\n\t\t// More options handling for requests with no content\r\n\t\tif ( !s.hasContent ) {\r\n\r\n\t\t\t// Remember the hash so we can put it back\r\n\t\t\tuncached = s.url.slice( cacheURL.length );\r\n\r\n\t\t\t// If data is available and should be processed, append data to url\r\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\r\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\r\n\r\n\t\t\t\t// trac-9682: remove data so that it's not used in an eventual retry\r\n\t\t\t\tdelete s.data;\r\n\t\t\t}\r\n\r\n\t\t\t// Add or update anti-cache param if needed\r\n\t\t\tif ( s.cache === false ) {\r\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\r\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\r\n\t\t\t\t\tuncached;\r\n\t\t\t}\r\n\r\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\r\n\t\t\ts.url = cacheURL + uncached;\r\n\r\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\r\n\t\t} else if ( s.data && s.processData &&\r\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\r\n\t\t\ts.data = s.data.replace( r20, \"+\" );\r\n\t\t}\r\n\r\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\tif ( s.ifModified ) {\r\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\r\n\t\t\t}\r\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the correct header, if data is being sent\r\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n\t\t}\r\n\r\n\t\t// Set the Accepts header for the server, depending on the dataType\r\n\t\tjqXHR.setRequestHeader(\r\n\t\t\t\"Accept\",\r\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\r\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\r\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n\t\t\t\ts.accepts[ \"*\" ]\r\n\t\t);\r\n\r\n\t\t// Check for headers option\r\n\t\tfor ( i in s.headers ) {\r\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\r\n\t\t}\r\n\r\n\t\t// Allow custom headers/mimetypes and early abort\r\n\t\tif ( s.beforeSend &&\r\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\r\n\r\n\t\t\t// Abort if not done already and return\r\n\t\t\treturn jqXHR.abort();\r\n\t\t}\r\n\r\n\t\t// Aborting is no longer a cancellation\r\n\t\tstrAbort = \"abort\";\r\n\r\n\t\t// Install callbacks on deferreds\r\n\t\tcompleteDeferred.add( s.complete );\r\n\t\tjqXHR.done( s.success );\r\n\t\tjqXHR.fail( s.error );\r\n\r\n\t\t// Get transport\r\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n\t\t// If no transport, we auto-abort\r\n\t\tif ( !transport ) {\r\n\t\t\tdone( -1, \"No Transport\" );\r\n\t\t} else {\r\n\t\t\tjqXHR.readyState = 1;\r\n\r\n\t\t\t// Send global event\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n\t\t\t}\r\n\r\n\t\t\t// If request was aborted inside ajaxSend, stop there\r\n\t\t\tif ( completed ) {\r\n\t\t\t\treturn jqXHR;\r\n\t\t\t}\r\n\r\n\t\t\t// Timeout\r\n\t\t\tif ( s.async && s.timeout > 0 ) {\r\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\r\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\r\n\t\t\t\t}, s.timeout );\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tcompleted = false;\r\n\t\t\t\ttransport.send( requestHeaders, done );\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// Rethrow post-completion exceptions\r\n\t\t\t\tif ( completed ) {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Propagate others as results\r\n\t\t\t\tdone( -1, e );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Callback for when everything is done\r\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\r\n\t\t\tvar isSuccess, success, error, response, modified,\r\n\t\t\t\tstatusText = nativeStatusText;\r\n\r\n\t\t\t// Ignore repeat invocations\r\n\t\t\tif ( completed ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcompleted = true;\r\n\r\n\t\t\t// Clear timeout if it exists\r\n\t\t\tif ( timeoutTimer ) {\r\n\t\t\t\twindow.clearTimeout( timeoutTimer );\r\n\t\t\t}\r\n\r\n\t\t\t// Dereference transport for early garbage collection\r\n\t\t\t// (no matter how long the jqXHR object will be used)\r\n\t\t\ttransport = undefined;\r\n\r\n\t\t\t// Cache response headers\r\n\t\t\tresponseHeadersString = headers || \"\";\r\n\r\n\t\t\t// Set readyState\r\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n\t\t\t// Determine if successful\r\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\r\n\r\n\t\t\t// Get response data\r\n\t\t\tif ( responses ) {\r\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\r\n\t\t\t}\r\n\r\n\t\t\t// Use a noop converter for missing script but not if jsonp\r\n\t\t\tif ( !isSuccess &&\r\n\t\t\t\tjQuery.inArray( \"script\", s.dataTypes ) > -1 &&\r\n\t\t\t\tjQuery.inArray( \"json\", s.dataTypes ) < 0 ) {\r\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\r\n\t\t\t}\r\n\r\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\r\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\r\n\r\n\t\t\t// If successful, handle type chaining\r\n\t\t\tif ( isSuccess ) {\r\n\r\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\t\t\tif ( s.ifModified ) {\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if no content\r\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\r\n\t\t\t\t\tstatusText = \"nocontent\";\r\n\r\n\t\t\t\t// if not modified\r\n\t\t\t\t} else if ( status === 304 ) {\r\n\t\t\t\t\tstatusText = \"notmodified\";\r\n\r\n\t\t\t\t// If we have data, let's convert it\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatusText = response.state;\r\n\t\t\t\t\tsuccess = response.data;\r\n\t\t\t\t\terror = response.error;\r\n\t\t\t\t\tisSuccess = !error;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\r\n\t\t\t\terror = statusText;\r\n\t\t\t\tif ( status || !statusText ) {\r\n\t\t\t\t\tstatusText = \"error\";\r\n\t\t\t\t\tif ( status < 0 ) {\r\n\t\t\t\t\t\tstatus = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set data for the fake xhr object\r\n\t\t\tjqXHR.status = status;\r\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n\t\t\t// Success/Error\r\n\t\t\tif ( isSuccess ) {\r\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tjqXHR.statusCode( statusCode );\r\n\t\t\tstatusCode = undefined;\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\r\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Complete\r\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n\r\n\t\t\t\t// Handle the global AJAX counter\r\n\t\t\t\tif ( !( --jQuery.active ) ) {\r\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn jqXHR;\r\n\t},\r\n\r\n\tgetJSON: function( url, data, callback ) {\r\n\t\treturn jQuery.get( url, data, callback, \"json\" );\r\n\t},\r\n\r\n\tgetScript: function( url, callback ) {\r\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\r\n\tjQuery[ method ] = function( url, data, callback, type ) {\r\n\r\n\t\t// Shift arguments if data argument was omitted\r\n\t\tif ( isFunction( data ) ) {\r\n\t\t\ttype = type || callback;\r\n\t\t\tcallback = data;\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\r\n\t\t// The url can be an options object (which then must have .url)\r\n\t\treturn jQuery.ajax( jQuery.extend( {\r\n\t\t\turl: url,\r\n\t\t\ttype: method,\r\n\t\t\tdataType: type,\r\n\t\t\tdata: data,\r\n\t\t\tsuccess: callback\r\n\t\t}, jQuery.isPlainObject( url ) && url ) );\r\n\t};\r\n} );\r\n\r\njQuery.ajaxPrefilter( function( s ) {\r\n\tvar i;\r\n\tfor ( i in s.headers ) {\r\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\r\n\t\t\ts.contentType = s.headers[ i ] || \"\";\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\njQuery._evalUrl = function( url, options, doc ) {\r\n\treturn jQuery.ajax( {\r\n\t\turl: url,\r\n\r\n\t\t// Make this explicit, since user can override this through ajaxSetup (trac-11264)\r\n\t\ttype: \"GET\",\r\n\t\tdataType: \"script\",\r\n\t\tcache: true,\r\n\t\tasync: false,\r\n\t\tglobal: false,\r\n\r\n\t\t// Only evaluate the response if it is successful (gh-4126)\r\n\t\t// dataFilter is not invoked for failure responses, so using it instead\r\n\t\t// of the default converter is kludgy but it works.\r\n\t\tconverters: {\r\n\t\t\t\"text script\": function() {}\r\n\t\t},\r\n\t\tdataFilter: function( response ) {\r\n\t\t\tjQuery.globalEval( response, options, doc );\r\n\t\t}\r\n\t} );\r\n};\r\n\r\n\r\njQuery.fn.extend( {\r\n\twrapAll: function( html ) {\r\n\t\tvar wrap;\r\n\r\n\t\tif ( this[ 0 ] ) {\r\n\t\t\tif ( isFunction( html ) ) {\r\n\t\t\t\thtml = html.call( this[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\t// The elements to wrap the target around\r\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n\t\t\tif ( this[ 0 ].parentNode ) {\r\n\t\t\t\twrap.insertBefore( this[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\twrap.map( function() {\r\n\t\t\t\tvar elem = this;\r\n\r\n\t\t\t\twhile ( elem.firstElementChild ) {\r\n\t\t\t\t\telem = elem.firstElementChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn elem;\r\n\t\t\t} ).append( this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\twrapInner: function( html ) {\r\n\t\tif ( isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar self = jQuery( this ),\r\n\t\t\t\tcontents = self.contents();\r\n\r\n\t\t\tif ( contents.length ) {\r\n\t\t\t\tcontents.wrapAll( html );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tself.append( html );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\twrap: function( html ) {\r\n\t\tvar htmlIsFunction = isFunction( html );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n\t\t} );\r\n\t},\r\n\r\n\tunwrap: function( selector ) {\r\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\r\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\r\n\t\t} );\r\n\t\treturn this;\r\n\t}\r\n} );\r\n\r\n\r\njQuery.expr.pseudos.hidden = function( elem ) {\r\n\treturn !jQuery.expr.pseudos.visible( elem );\r\n};\r\njQuery.expr.pseudos.visible = function( elem ) {\r\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n};\r\n\r\n\r\n\r\n\r\njQuery.ajaxSettings.xhr = function() {\r\n\ttry {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t} catch ( e ) {}\r\n};\r\n\r\nvar xhrSuccessStatus = {\r\n\r\n\t\t// File protocol always yields status code 0, assume 200\r\n\t\t0: 200,\r\n\r\n\t\t// Support: IE <=9 only\r\n\t\t// trac-1450: sometimes IE returns 1223 when it should be 204\r\n\t\t1223: 204\r\n\t},\r\n\txhrSupported = jQuery.ajaxSettings.xhr();\r\n\r\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\nsupport.ajax = xhrSupported = !!xhrSupported;\r\n\r\njQuery.ajaxTransport( function( options ) {\r\n\tvar callback, errorCallback;\r\n\r\n\t// Cross domain only allowed if supported through XMLHttpRequest\r\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\r\n\t\treturn {\r\n\t\t\tsend: function( headers, complete ) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\txhr = options.xhr();\r\n\r\n\t\t\t\txhr.open(\r\n\t\t\t\t\toptions.type,\r\n\t\t\t\t\toptions.url,\r\n\t\t\t\t\toptions.async,\r\n\t\t\t\t\toptions.username,\r\n\t\t\t\t\toptions.password\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Apply custom fields if provided\r\n\t\t\t\tif ( options.xhrFields ) {\r\n\t\t\t\t\tfor ( i in options.xhrFields ) {\r\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Override mime type if needed\r\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\r\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// X-Requested-With header\r\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n\t\t\t\t// For same-domain requests, won't change header if already provided.\r\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\r\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set headers\r\n\t\t\t\tfor ( i in headers ) {\r\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callback\r\n\t\t\t\tcallback = function( type ) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\r\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\r\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\r\n\r\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\r\n\t\t\t\t\t\t\t\txhr.abort();\r\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\r\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\r\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\r\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\r\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcomplete(\r\n\r\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see trac-8605, trac-14207\r\n\t\t\t\t\t\t\t\t\t\txhr.status,\r\n\t\t\t\t\t\t\t\t\t\txhr.statusText\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText,\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\r\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\r\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\r\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\r\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\r\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\r\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\r\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Listen to events\r\n\t\t\t\txhr.onload = callback();\r\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\r\n\r\n\t\t\t\t// Support: IE 9 only\r\n\t\t\t\t// Use onreadystatechange to replace onabort\r\n\t\t\t\t// to handle uncaught aborts\r\n\t\t\t\tif ( xhr.onabort !== undefined ) {\r\n\t\t\t\t\txhr.onabort = errorCallback;\r\n\t\t\t\t} else {\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\r\n\t\t\t\t\t\t// Check readyState before timeout as it changes\r\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\r\n\r\n\t\t\t\t\t\t\t// Allow onerror to be called first,\r\n\t\t\t\t\t\t\t// but that will not handle a native abort\r\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\r\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\r\n\t\t\t\t\t\t\twindow.setTimeout( function() {\r\n\t\t\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\t\t\terrorCallback();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the abort callback\r\n\t\t\t\tcallback = callback( \"abort\" );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t// Do send the request (this may raise an exception)\r\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t// trac-14683: Only rethrow if this hasn't been notified as an error yet\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\r\njQuery.ajaxPrefilter( function( s ) {\r\n\tif ( s.crossDomain ) {\r\n\t\ts.contents.script = false;\r\n\t}\r\n} );\r\n\r\n// Install script dataType\r\njQuery.ajaxSetup( {\r\n\taccepts: {\r\n\t\tscript: \"text/javascript, application/javascript, \" +\r\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\r\n\t},\r\n\tcontents: {\r\n\t\tscript: /\\b(?:java|ecma)script\\b/\r\n\t},\r\n\tconverters: {\r\n\t\t\"text script\": function( text ) {\r\n\t\t\tjQuery.globalEval( text );\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Handle cache's special case and crossDomain\r\njQuery.ajaxPrefilter( \"script\", function( s ) {\r\n\tif ( s.cache === undefined ) {\r\n\t\ts.cache = false;\r\n\t}\r\n\tif ( s.crossDomain ) {\r\n\t\ts.type = \"GET\";\r\n\t}\r\n} );\r\n\r\n// Bind script tag hack transport\r\njQuery.ajaxTransport( \"script\", function( s ) {\r\n\r\n\t// This transport only deals with cross domain or forced-by-attrs requests\r\n\tif ( s.crossDomain || s.scriptAttrs ) {\r\n\t\tvar script, callback;\r\n\t\treturn {\r\n\t\t\tsend: function( _, complete ) {\r\n\t\t\t\tscript = jQuery( \"<script>\" )\r\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\r\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\r\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\r\n\t\t\t\t\t\tscript.remove();\r\n\t\t\t\t\t\tcallback = null;\r\n\t\t\t\t\t\tif ( evt ) {\r\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\r\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\r\n\t\t\t},\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar oldCallbacks = [],\r\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\r\n\r\n// Default jsonp settings\r\njQuery.ajaxSetup( {\r\n\tjsonp: \"callback\",\r\n\tjsonpCallback: function() {\r\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\r\n\t\tthis[ callback ] = true;\r\n\t\treturn callback;\r\n\t}\r\n} );\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n\tvar callbackName, overwritten, responseContainer,\r\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\r\n\t\t\t\"url\" :\r\n\t\t\ttypeof s.data === \"string\" &&\r\n\t\t\t\t( s.contentType || \"\" )\r\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\r\n\t\t\t\trjsonp.test( s.data ) && \"data\"\r\n\t\t);\r\n\r\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\r\n\r\n\t\t// Get callback name, remembering preexisting value associated with it\r\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\r\n\t\t\ts.jsonpCallback() :\r\n\t\t\ts.jsonpCallback;\r\n\r\n\t\t// Insert callback into url or form data\r\n\t\tif ( jsonProp ) {\r\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\r\n\t\t} else if ( s.jsonp !== false ) {\r\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n\t\t}\r\n\r\n\t\t// Use data converter to retrieve json after script execution\r\n\t\ts.converters[ \"script json\" ] = function() {\r\n\t\t\tif ( !responseContainer ) {\r\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\r\n\t\t\t}\r\n\t\t\treturn responseContainer[ 0 ];\r\n\t\t};\r\n\r\n\t\t// Force json dataType\r\n\t\ts.dataTypes[ 0 ] = \"json\";\r\n\r\n\t\t// Install callback\r\n\t\toverwritten = window[ callbackName ];\r\n\t\twindow[ callbackName ] = function() {\r\n\t\t\tresponseContainer = arguments;\r\n\t\t};\r\n\r\n\t\t// Clean-up function (fires after converters)\r\n\t\tjqXHR.always( function() {\r\n\r\n\t\t\t// If previous value didn't exist - remove it\r\n\t\t\tif ( overwritten === undefined ) {\r\n\t\t\t\tjQuery( window ).removeProp( callbackName );\r\n\r\n\t\t\t// Otherwise restore preexisting value\r\n\t\t\t} else {\r\n\t\t\t\twindow[ callbackName ] = overwritten;\r\n\t\t\t}\r\n\r\n\t\t\t// Save back as free\r\n\t\t\tif ( s[ callbackName ] ) {\r\n\r\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\r\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n\t\t\t\t// Save the callback name for future use\r\n\t\t\t\toldCallbacks.push( callbackName );\r\n\t\t\t}\r\n\r\n\t\t\t// Call if it was a function and we have a response\r\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\r\n\t\t\t\toverwritten( responseContainer[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\tresponseContainer = overwritten = undefined;\r\n\t\t} );\r\n\r\n\t\t// Delegate to script\r\n\t\treturn \"script\";\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Support: Safari 8 only\r\n// In Safari 8 documents created via document.implementation.createHTMLDocument\r\n// collapse sibling forms: the second one becomes a child of the first one.\r\n// Because of that, this security measure has to be disabled in Safari 8.\r\n// https://bugs.webkit.org/show_bug.cgi?id=137337\r\nsupport.createHTMLDocument = ( function() {\r\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\r\n\tbody.innerHTML = \"<form></form><form></form>\";\r\n\treturn body.childNodes.length === 2;\r\n} )();\r\n\r\n\r\n// Argument \"data\" should be string of html\r\n// context (optional): If specified, the fragment will be created in this context,\r\n// defaults to document\r\n// keepScripts (optional): If true, will include scripts passed in the html string\r\njQuery.parseHTML = function( data, context, keepScripts ) {\r\n\tif ( typeof data !== \"string\" ) {\r\n\t\treturn [];\r\n\t}\r\n\tif ( typeof context === \"boolean\" ) {\r\n\t\tkeepScripts = context;\r\n\t\tcontext = false;\r\n\t}\r\n\r\n\tvar base, parsed, scripts;\r\n\r\n\tif ( !context ) {\r\n\r\n\t\t// Stop scripts or inline event handlers from being executed immediately\r\n\t\t// by using document.implementation\r\n\t\tif ( support.createHTMLDocument ) {\r\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\r\n\r\n\t\t\t// Set the base href for the created document\r\n\t\t\t// so any parsed elements with URLs\r\n\t\t\t// are based on the document's URL (gh-2965)\r\n\t\t\tbase = context.createElement( \"base\" );\r\n\t\t\tbase.href = document.location.href;\r\n\t\t\tcontext.head.appendChild( base );\r\n\t\t} else {\r\n\t\t\tcontext = document;\r\n\t\t}\r\n\t}\r\n\r\n\tparsed = rsingleTag.exec( data );\r\n\tscripts = !keepScripts && [];\r\n\r\n\t// Single tag\r\n\tif ( parsed ) {\r\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\r\n\t}\r\n\r\n\tparsed = buildFragment( [ data ], context, scripts );\r\n\r\n\tif ( scripts && scripts.length ) {\r\n\t\tjQuery( scripts ).remove();\r\n\t}\r\n\r\n\treturn jQuery.merge( [], parsed.childNodes );\r\n};\r\n\r\n\r\n/**\r\n * Load a url into a page\r\n */\r\njQuery.fn.load = function( url, params, callback ) {\r\n\tvar selector, type, response,\r\n\t\tself = this,\r\n\t\toff = url.indexOf( \" \" );\r\n\r\n\tif ( off > -1 ) {\r\n\t\tselector = stripAndCollapse( url.slice( off ) );\r\n\t\turl = url.slice( 0, off );\r\n\t}\r\n\r\n\t// If it's a function\r\n\tif ( isFunction( params ) ) {\r\n\r\n\t\t// We assume that it's the callback\r\n\t\tcallback = params;\r\n\t\tparams = undefined;\r\n\r\n\t// Otherwise, build a param string\r\n\t} else if ( params && typeof params === \"object\" ) {\r\n\t\ttype = \"POST\";\r\n\t}\r\n\r\n\t// If we have elements to modify, make the request\r\n\tif ( self.length > 0 ) {\r\n\t\tjQuery.ajax( {\r\n\t\t\turl: url,\r\n\r\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\r\n\t\t\t// Make value of this field explicit since\r\n\t\t\t// user can override it through ajaxSetup method\r\n\t\t\ttype: type || \"GET\",\r\n\t\t\tdataType: \"html\",\r\n\t\t\tdata: params\r\n\t\t} ).done( function( responseText ) {\r\n\r\n\t\t\t// Save response for use in complete callback\r\n\t\t\tresponse = arguments;\r\n\r\n\t\t\tself.html( selector ?\r\n\r\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\r\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\r\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n\r\n\t\t\t\t// Otherwise use the full result\r\n\t\t\t\tresponseText );\r\n\r\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\r\n\t\t// but they are ignored because response was set above.\r\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\r\n\t\t} ).always( callback && function( jqXHR, status ) {\r\n\t\t\tself.each( function() {\r\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n\r\n\r\njQuery.expr.pseudos.animated = function( elem ) {\r\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\r\n\t\treturn elem === fn.elem;\r\n\t} ).length;\r\n};\r\n\r\n\r\n\r\n\r\njQuery.offset = {\r\n\tsetOffset: function( elem, options, i ) {\r\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\r\n\t\t\tposition = jQuery.css( elem, \"position\" ),\r\n\t\t\tcurElem = jQuery( elem ),\r\n\t\t\tprops = {};\r\n\r\n\t\t// Set position first, in-case top/left are set even on static elem\r\n\t\tif ( position === \"static\" ) {\r\n\t\t\telem.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\tcurOffset = curElem.offset();\r\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\r\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\r\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\r\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\r\n\r\n\t\t// Need to be able to calculate position if either\r\n\t\t// top or left is auto and position is either absolute or fixed\r\n\t\tif ( calculatePosition ) {\r\n\t\t\tcurPosition = curElem.position();\r\n\t\t\tcurTop = curPosition.top;\r\n\t\t\tcurLeft = curPosition.left;\r\n\r\n\t\t} else {\r\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\r\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\r\n\t\t}\r\n\r\n\t\tif ( isFunction( options ) ) {\r\n\r\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\r\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\r\n\t\t}\r\n\r\n\t\tif ( options.top != null ) {\r\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\r\n\t\t}\r\n\t\tif ( options.left != null ) {\r\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\r\n\t\t}\r\n\r\n\t\tif ( \"using\" in options ) {\r\n\t\t\toptions.using.call( elem, props );\r\n\r\n\t\t} else {\r\n\t\t\tcurElem.css( props );\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.fn.extend( {\r\n\r\n\t// offset() relates an element's border box to the document origin\r\n\toffset: function( options ) {\r\n\r\n\t\t// Preserve chaining for setter\r\n\t\tif ( arguments.length ) {\r\n\t\t\treturn options === undefined ?\r\n\t\t\t\tthis :\r\n\t\t\t\tthis.each( function( i ) {\r\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tvar rect, win,\r\n\t\t\telem = this[ 0 ];\r\n\r\n\t\tif ( !elem ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\r\n\t\t// Support: IE <=11 only\r\n\t\t// Running getBoundingClientRect on a\r\n\t\t// disconnected node in IE throws an error\r\n\t\tif ( !elem.getClientRects().length ) {\r\n\t\t\treturn { top: 0, left: 0 };\r\n\t\t}\r\n\r\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\r\n\t\trect = elem.getBoundingClientRect();\r\n\t\twin = elem.ownerDocument.defaultView;\r\n\t\treturn {\r\n\t\t\ttop: rect.top + win.pageYOffset,\r\n\t\t\tleft: rect.left + win.pageXOffset\r\n\t\t};\r\n\t},\r\n\r\n\t// position() relates an element's margin box to its offset parent's padding box\r\n\t// This corresponds to the behavior of CSS absolute positioning\r\n\tposition: function() {\r\n\t\tif ( !this[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar offsetParent, offset, doc,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tparentOffset = { top: 0, left: 0 };\r\n\r\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\r\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\r\n\r\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\r\n\t\t\toffset = elem.getBoundingClientRect();\r\n\r\n\t\t} else {\r\n\t\t\toffset = this.offset();\r\n\r\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\r\n\t\t\t// when a statically positioned element is identified\r\n\t\t\tdoc = elem.ownerDocument;\r\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\r\n\t\t\twhile ( offsetParent &&\r\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\r\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\r\n\r\n\t\t\t\toffsetParent = offsetParent.parentNode;\r\n\t\t\t}\r\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\r\n\r\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\r\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\r\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\r\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Subtract parent offsets and element margins\r\n\t\treturn {\r\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\r\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\r\n\t\t};\r\n\t},\r\n\r\n\t// This method will return documentElement in the following cases:\r\n\t// 1) For the element inside the iframe without offsetParent, this method will return\r\n\t//    documentElement of the parent window\r\n\t// 2) For the hidden or detached element\r\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\r\n\t//\r\n\t// but those exceptions were never presented as a real life use-cases\r\n\t// and might be considered as more preferable results.\r\n\t//\r\n\t// This logic, however, is not guaranteed and can change at any point in the future\r\n\toffsetParent: function() {\r\n\t\treturn this.map( function() {\r\n\t\t\tvar offsetParent = this.offsetParent;\r\n\r\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\r\n\t\t\t\toffsetParent = offsetParent.offsetParent;\r\n\t\t\t}\r\n\r\n\t\t\treturn offsetParent || documentElement;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n// Create scrollLeft and scrollTop methods\r\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\r\n\tvar top = \"pageYOffset\" === prop;\r\n\r\n\tjQuery.fn[ method ] = function( val ) {\r\n\t\treturn access( this, function( elem, method, val ) {\r\n\r\n\t\t\t// Coalesce documents and windows\r\n\t\t\tvar win;\r\n\t\t\tif ( isWindow( elem ) ) {\r\n\t\t\t\twin = elem;\r\n\t\t\t} else if ( elem.nodeType === 9 ) {\r\n\t\t\t\twin = elem.defaultView;\r\n\t\t\t}\r\n\r\n\t\t\tif ( val === undefined ) {\r\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\r\n\t\t\t}\r\n\r\n\t\t\tif ( win ) {\r\n\t\t\t\twin.scrollTo(\r\n\t\t\t\t\t!top ? val : win.pageXOffset,\r\n\t\t\t\t\ttop ? val : win.pageYOffset\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\t\t\t\telem[ method ] = val;\r\n\t\t\t}\r\n\t\t}, method, val, arguments.length );\r\n\t};\r\n} );\r\n\r\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\r\n// Add the top/left cssHooks using jQuery.fn.position\r\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\r\n// getComputedStyle returns percent when specified for top/left/bottom/right;\r\n// rather than make the css module depend on the offset module, just check for it here\r\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\r\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\r\n\t\tfunction( elem, computed ) {\r\n\t\t\tif ( computed ) {\r\n\t\t\t\tcomputed = curCSS( elem, prop );\r\n\r\n\t\t\t\t// If curCSS returns percentage, fallback to offset\r\n\t\t\t\treturn rnumnonpx.test( computed ) ?\r\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\r\n\t\t\t\t\tcomputed;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n} );\r\n\r\n\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n\tjQuery.each( {\r\n\t\tpadding: \"inner\" + name,\r\n\t\tcontent: type,\r\n\t\t\"\": \"outer\" + name\r\n\t}, function( defaultExtra, funcName ) {\r\n\r\n\t\t// Margin is only for outerHeight, outerWidth\r\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n\t\t\treturn access( this, function( elem, type, value ) {\r\n\t\t\t\tvar doc;\r\n\r\n\t\t\t\tif ( isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\r\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\r\n\t\t\t\t\t\telem[ \"inner\" + name ] :\r\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get document width or height\r\n\t\t\t\tif ( elem.nodeType === 9 ) {\r\n\t\t\t\t\tdoc = elem.documentElement;\r\n\r\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r\n\t\t\t\t\t// whichever is greatest\r\n\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n\t\t\t\t\t\tdoc[ \"client\" + name ]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value === undefined ?\r\n\r\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n\r\n\t\t\t\t\t// Set width or height on the element\r\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n\t\t\t}, type, chainable ? margin : undefined, chainable );\r\n\t\t};\r\n\t} );\r\n} );\r\n\r\n\r\njQuery.each( [\r\n\t\"ajaxStart\",\r\n\t\"ajaxStop\",\r\n\t\"ajaxComplete\",\r\n\t\"ajaxError\",\r\n\t\"ajaxSuccess\",\r\n\t\"ajaxSend\"\r\n], function( _i, type ) {\r\n\tjQuery.fn[ type ] = function( fn ) {\r\n\t\treturn this.on( type, fn );\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\njQuery.fn.extend( {\r\n\r\n\tbind: function( types, data, fn ) {\r\n\t\treturn this.on( types, null, data, fn );\r\n\t},\r\n\tunbind: function( types, fn ) {\r\n\t\treturn this.off( types, null, fn );\r\n\t},\r\n\r\n\tdelegate: function( selector, types, data, fn ) {\r\n\t\treturn this.on( types, selector, data, fn );\r\n\t},\r\n\tundelegate: function( selector, types, fn ) {\r\n\r\n\t\t// ( namespace ) or ( selector, types [, fn] )\r\n\t\treturn arguments.length === 1 ?\r\n\t\t\tthis.off( selector, \"**\" ) :\r\n\t\t\tthis.off( types, selector || \"**\", fn );\r\n\t},\r\n\r\n\thover: function( fnOver, fnOut ) {\r\n\t\treturn this\r\n\t\t\t.on( \"mouseenter\", fnOver )\r\n\t\t\t.on( \"mouseleave\", fnOut || fnOver );\r\n\t}\r\n} );\r\n\r\njQuery.each(\r\n\t( \"blur focus focusin focusout resize scroll click dblclick \" +\r\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\r\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\r\n\tfunction( _i, name ) {\r\n\r\n\t\t// Handle event binding\r\n\t\tjQuery.fn[ name ] = function( data, fn ) {\r\n\t\t\treturn arguments.length > 0 ?\r\n\t\t\t\tthis.on( name, null, data, fn ) :\r\n\t\t\t\tthis.trigger( name );\r\n\t\t};\r\n\t}\r\n);\r\n\r\n\r\n\r\n\r\n// Support: Android <=4.0 only\r\n// Make sure we trim BOM and NBSP\r\n// Require that the \"whitespace run\" starts from a non-whitespace\r\n// to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.\r\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|([^\\s\\uFEFF\\xA0])[\\s\\uFEFF\\xA0]+$/g;\r\n\r\n// Bind a function to a context, optionally partially applying any\r\n// arguments.\r\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\r\n// However, it is not slated for removal any time soon\r\njQuery.proxy = function( fn, context ) {\r\n\tvar tmp, args, proxy;\r\n\r\n\tif ( typeof context === \"string\" ) {\r\n\t\ttmp = fn[ context ];\r\n\t\tcontext = fn;\r\n\t\tfn = tmp;\r\n\t}\r\n\r\n\t// Quick check to determine if target is callable, in the spec\r\n\t// this throws a TypeError, but we will just return undefined.\r\n\tif ( !isFunction( fn ) ) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t// Simulated bind\r\n\targs = slice.call( arguments, 2 );\r\n\tproxy = function() {\r\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n\t};\r\n\r\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\r\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n\treturn proxy;\r\n};\r\n\r\njQuery.holdReady = function( hold ) {\r\n\tif ( hold ) {\r\n\t\tjQuery.readyWait++;\r\n\t} else {\r\n\t\tjQuery.ready( true );\r\n\t}\r\n};\r\njQuery.isArray = Array.isArray;\r\njQuery.parseJSON = JSON.parse;\r\njQuery.nodeName = nodeName;\r\njQuery.isFunction = isFunction;\r\njQuery.isWindow = isWindow;\r\njQuery.camelCase = camelCase;\r\njQuery.type = toType;\r\n\r\njQuery.now = Date.now;\r\n\r\njQuery.isNumeric = function( obj ) {\r\n\r\n\t// As of jQuery 3.0, isNumeric is limited to\r\n\t// strings and numbers (primitives or objects)\r\n\t// that can be coerced to finite numbers (gh-2662)\r\n\tvar type = jQuery.type( obj );\r\n\treturn ( type === \"number\" || type === \"string\" ) &&\r\n\r\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\r\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n\t\t// subtraction forces infinities to NaN\r\n\t\t!isNaN( obj - parseFloat( obj ) );\r\n};\r\n\r\njQuery.trim = function( text ) {\r\n\treturn text == null ?\r\n\t\t\"\" :\r\n\t\t( text + \"\" ).replace( rtrim, \"$1\" );\r\n};\r\n\r\n\r\n\r\n// Register as a named AMD module, since jQuery can be concatenated with other\r\n// files that may use define, but not via a proper concatenation script that\r\n// understands anonymous AMD modules. A named AMD is safest and most robust\r\n// way to register. Lowercase jquery is used because AMD module names are\r\n// derived from file names, and jQuery is normally delivered in a lowercase\r\n// file name. Do this after creating the global so that if an AMD module wants\r\n// to call noConflict to hide this version of jQuery, it will work.\r\n\r\n// Note that for maximum portability, libraries that are not jQuery should\r\n// declare themselves as anonymous modules, and avoid setting a global if an\r\n// AMD loader is present. jQuery is a special case. For more information, see\r\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\r\n\r\nif ( true ) {\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n\t\treturn jQuery;\r\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n}\r\n\r\n\r\n\r\n\r\nvar\r\n\r\n\t// Map over jQuery in case of overwrite\r\n\t_jQuery = window.jQuery,\r\n\r\n\t// Map over the $ in case of overwrite\r\n\t_$ = window.$;\r\n\r\njQuery.noConflict = function( deep ) {\r\n\tif ( window.$ === jQuery ) {\r\n\t\twindow.$ = _$;\r\n\t}\r\n\r\n\tif ( deep && window.jQuery === jQuery ) {\r\n\t\twindow.jQuery = _jQuery;\r\n\t}\r\n\r\n\treturn jQuery;\r\n};\r\n\r\n// Expose jQuery and $ identifiers, even in AMD\r\n// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)\r\n// and CommonJS for browser emulators (trac-13566)\r\nif ( typeof noGlobal === \"undefined\" ) {\r\n\twindow.jQuery = window.$ = jQuery;\r\n}\r\n\r\n\r\n\r\n\r\nreturn jQuery;\r\n} );\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/datatables.net-dt/css/jquery.dataTables.min.css":
/*!**********************************************************************!*\
  !*** ./node_modules/datatables.net-dt/css/jquery.dataTables.min.css ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _css_loader_dist_cjs_js_jquery_dataTables_min_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../css-loader/dist/cjs.js!./jquery.dataTables.min.css */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/datatables.net-dt/css/jquery.dataTables.min.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_jquery_dataTables_min_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_jquery_dataTables_min_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _css_loader_dist_cjs_js_jquery_dataTables_min_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _css_loader_dist_cjs_js_jquery_dataTables_min_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://server-client/./node_modules/datatables.net-dt/css/jquery.dataTables.min.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nvar stylesInDOM = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n  var result = -1;\r\n  for (var i = 0; i < stylesInDOM.length; i++) {\r\n    if (stylesInDOM[i].identifier === identifier) {\r\n      result = i;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n  var idCountMap = {};\r\n  var identifiers = [];\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i];\r\n    var id = options.base ? item[0] + options.base : item[0];\r\n    var count = idCountMap[id] || 0;\r\n    var identifier = \"\".concat(id, \" \").concat(count);\r\n    idCountMap[id] = count + 1;\r\n    var indexByIdentifier = getIndexByIdentifier(identifier);\r\n    var obj = {\r\n      css: item[1],\r\n      media: item[2],\r\n      sourceMap: item[3],\r\n      supports: item[4],\r\n      layer: item[5]\r\n    };\r\n    if (indexByIdentifier !== -1) {\r\n      stylesInDOM[indexByIdentifier].references++;\r\n      stylesInDOM[indexByIdentifier].updater(obj);\r\n    } else {\r\n      var updater = addElementStyle(obj, options);\r\n      options.byIndex = i;\r\n      stylesInDOM.splice(i, 0, {\r\n        identifier: identifier,\r\n        updater: updater,\r\n        references: 1\r\n      });\r\n    }\r\n    identifiers.push(identifier);\r\n  }\r\n  return identifiers;\r\n}\r\nfunction addElementStyle(obj, options) {\r\n  var api = options.domAPI(options);\r\n  api.update(obj);\r\n  var updater = function updater(newObj) {\r\n    if (newObj) {\r\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\r\n        return;\r\n      }\r\n      api.update(obj = newObj);\r\n    } else {\r\n      api.remove();\r\n    }\r\n  };\r\n  return updater;\r\n}\r\nmodule.exports = function (list, options) {\r\n  options = options || {};\r\n  list = list || [];\r\n  var lastIdentifiers = modulesToDom(list, options);\r\n  return function update(newList) {\r\n    newList = newList || [];\r\n    for (var i = 0; i < lastIdentifiers.length; i++) {\r\n      var identifier = lastIdentifiers[i];\r\n      var index = getIndexByIdentifier(identifier);\r\n      stylesInDOM[index].references--;\r\n    }\r\n    var newLastIdentifiers = modulesToDom(newList, options);\r\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\r\n      var _identifier = lastIdentifiers[_i];\r\n      var _index = getIndexByIdentifier(_identifier);\r\n      if (stylesInDOM[_index].references === 0) {\r\n        stylesInDOM[_index].updater();\r\n        stylesInDOM.splice(_index, 1);\r\n      }\r\n    }\r\n    lastIdentifiers = newLastIdentifiers;\r\n  };\r\n};\n\n//# sourceURL=webpack://server-client/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nvar memo = {};\r\n\r\n/* istanbul ignore next  */\r\nfunction getTarget(target) {\r\n  if (typeof memo[target] === \"undefined\") {\r\n    var styleTarget = document.querySelector(target);\r\n\r\n    // Special case to return head of iframe instead of iframe itself\r\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n      try {\r\n        // This will throw an exception if access to iframe is blocked\r\n        // due to cross-origin restrictions\r\n        styleTarget = styleTarget.contentDocument.head;\r\n      } catch (e) {\r\n        // istanbul ignore next\r\n        styleTarget = null;\r\n      }\r\n    }\r\n    memo[target] = styleTarget;\r\n  }\r\n  return memo[target];\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction insertBySelector(insert, style) {\r\n  var target = getTarget(insert);\r\n  if (!target) {\r\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n  }\r\n  target.appendChild(style);\r\n}\r\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://server-client/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction insertStyleElement(options) {\r\n  var element = document.createElement(\"style\");\r\n  options.setAttributes(element, options.attributes);\r\n  options.insert(element, options.options);\r\n  return element;\r\n}\r\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://server-client/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction setAttributesWithoutAttributes(styleElement) {\r\n  var nonce =  true ? __webpack_require__.nc : 0;\r\n  if (nonce) {\r\n    styleElement.setAttribute(\"nonce\", nonce);\r\n  }\r\n}\r\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://server-client/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction apply(styleElement, options, obj) {\r\n  var css = \"\";\r\n  if (obj.supports) {\r\n    css += \"@supports (\".concat(obj.supports, \") {\");\r\n  }\r\n  if (obj.media) {\r\n    css += \"@media \".concat(obj.media, \" {\");\r\n  }\r\n  var needLayer = typeof obj.layer !== \"undefined\";\r\n  if (needLayer) {\r\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\r\n  }\r\n  css += obj.css;\r\n  if (needLayer) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.media) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.supports) {\r\n    css += \"}\";\r\n  }\r\n  var sourceMap = obj.sourceMap;\r\n  if (sourceMap && typeof btoa !== \"undefined\") {\r\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\r\n  }\r\n\r\n  // For old IE\r\n  /* istanbul ignore if  */\r\n  options.styleTagTransform(css, styleElement, options.options);\r\n}\r\nfunction removeStyleElement(styleElement) {\r\n  // istanbul ignore if\r\n  if (styleElement.parentNode === null) {\r\n    return false;\r\n  }\r\n  styleElement.parentNode.removeChild(styleElement);\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction domAPI(options) {\r\n  if (typeof document === \"undefined\") {\r\n    return {\r\n      update: function update() {},\r\n      remove: function remove() {}\r\n    };\r\n  }\r\n  var styleElement = options.insertStyleElement(options);\r\n  return {\r\n    update: function update(obj) {\r\n      apply(styleElement, options, obj);\r\n    },\r\n    remove: function remove() {\r\n      removeStyleElement(styleElement);\r\n    }\r\n  };\r\n}\r\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://server-client/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\n/* istanbul ignore next  */\r\nfunction styleTagTransform(css, styleElement) {\r\n  if (styleElement.styleSheet) {\r\n    styleElement.styleSheet.cssText = css;\r\n  } else {\r\n    while (styleElement.firstChild) {\r\n      styleElement.removeChild(styleElement.firstChild);\r\n    }\r\n    styleElement.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://server-client/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./node_modules/@socket.io/component-emitter/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@socket.io/component-emitter/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: () => (/* binding */ Emitter)\n/* harmony export */ });\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n}\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n// alias used for reserved events (protected method)\r\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/@socket.io/component-emitter/index.mjs?");

/***/ }),

/***/ "./src/tab-src/dashboard.js":
/*!**********************************!*\
  !*** ./src/tab-src/dashboard.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var datatables_net_dt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! datatables.net-dt */ \"./node_modules/datatables.net-dt/js/dataTables.dataTables.mjs\");\n/* harmony import */ var _node_modules_datatables_net_dt_css_jquery_dataTables_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/datatables.net-dt/css/jquery.dataTables.min.css */ \"./node_modules/datatables.net-dt/css/jquery.dataTables.min.css\");\n/* harmony import */ var _utils_table_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/table-utils.js */ \"./src/utils/table-utils.js\");\n/* harmony import */ var _utils_html_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/html-utils.js */ \"./src/utils/html-utils.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var _utils_tableExport_utils_tableExport_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/tableExport-utils/tableExport.js */ \"./src/utils/tableExport-utils/tableExport.js\");\n/* harmony import */ var _utils_tab_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/tab-utils.js */ \"./src/utils/tab-utils.js\");\n/* harmony import */ var _utils_socket_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/socket-utils.js */ \"./src/utils/socket-utils.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\njquery__WEBPACK_IMPORTED_MODULE_4__( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n  var defaulClumnAmountUser, defaulColumnAmountPeriod, defaultRowAmount, userTableName, periodTableName, isEmptyData, dateTo, dateFrom, userTableData, periodTableData, currentUser, tableUser, tablePeriod;\n  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        defaulClumnAmountUser = 2;\n        defaulColumnAmountPeriod = 4;\n        defaultRowAmount = 10;\n        userTableName = \"#userResearchTable\";\n        periodTableName = \"#periodResearchTable\";\n        isEmptyData = true;\n        dateTo = new Date();\n        dateFrom = new Date();\n        dateFrom.setMonth(dateFrom.getMonth() - 1);\n        //#region Setup Default Values\n        // $(\"#teamAmount\").text(~ insert text here ~);\n        jquery__WEBPACK_IMPORTED_MODULE_4__(\"#dateTo\").val(dateTo.toLocaleDateString(\"en-CA\"));\n        jquery__WEBPACK_IMPORTED_MODULE_4__(\"#dateFrom\").val(dateFrom.toLocaleDateString(\"en-CA\"));\n\n        //#endregion\n\n        //#region Initialization\n\n        // Load table from Server-side ~ ackData -> Acknowledgement Data\n        (0,_utils_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.showLoadingScreen)(\"Loading User Data...\");\n        _context2.next = 14;\n        return fetchUserDataFromDatabase()[\"catch\"](function (error) {\n          return console.error(error);\n        });\n      case 14:\n        userTableData = _context2.sent;\n        _context2.next = 17;\n        return fetchPeriodDataFromDatabase()[\"catch\"](function (error) {\n          return console.error(error);\n        });\n      case 17:\n        periodTableData = _context2.sent;\n        (0,_utils_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.hideLoadingScreen)();\n\n        // if loading from Server-side empty\n        if (!userTableData || jQuery.isEmptyObject(userTableData)) jquery__WEBPACK_IMPORTED_MODULE_4__(userTableName + \" > tbody:last-child\").append((0,_utils_table_utils_js__WEBPACK_IMPORTED_MODULE_2__.createEmptyRow)(defaultRowAmount, defaulClumnAmountUser));else {\n          currentUser = userTableData.find(function (user) {\n            return user.UserID === sessionStorage.getItem(\"username\");\n          });\n          if (currentUser) fillDashboardTexts(currentUser, userTableData);else {\n            Array.from(new Set(userTableData.map(function (user) {\n              return user.Team;\n            }))).forEach(function (team) {\n              return jquery__WEBPACK_IMPORTED_MODULE_4__(\"#newTeamSelect\").append(jquery__WEBPACK_IMPORTED_MODULE_4__(\"<option>\").attr(\"value\", team).text(team));\n            });\n            (0,_utils_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.showPopUpForm)(\"new\", \"New User?\");\n          }\n        }\n        if (!periodTableData || jQuery.isEmptyObject(periodTableData.Product)) {\n          jquery__WEBPACK_IMPORTED_MODULE_4__(periodTableName + \" > tbody:last-child\").append((0,_utils_table_utils_js__WEBPACK_IMPORTED_MODULE_2__.createEmptyRow)(defaultRowAmount, defaulColumnAmountPeriod));\n          (0,_utils_tab_utils_js__WEBPACK_IMPORTED_MODULE_6__.updateProductRequestHistory)(periodTableData.NewProduct, periodTableData.Product);\n        } else {\n          // $(periodTableName + ' > tbody:last-child').append(\n          //   // HTML for period table data here\n          // );\n        }\n        tableUser = new datatables_net_dt__WEBPACK_IMPORTED_MODULE_0__[\"default\"](userTableName, {\n          orderCellsTop: true,\n          columns: [{\n            data: \"UserID\"\n          }, {\n            data: \"ProductCount\"\n          }]\n        });\n        tableUser.rows.add(userTableData).draw();\n        tablePeriod = new datatables_net_dt__WEBPACK_IMPORTED_MODULE_0__[\"default\"](periodTableName, {\n          orderCellsTop: true,\n          columns: [{\n            data: \"UserID\"\n          }, {\n            data: \"Type\"\n          }, {\n            data: \"Num\"\n          }, {\n            data: \"Desc\"\n          }]\n        });\n        tablePeriod.rows.add(periodTableData).draw();\n        jquery__WEBPACK_IMPORTED_MODULE_4__(\".dataTables_filter\").css(\"padding-bottom\", \"20px\");\n\n        //#endregion\n\n        //#region Screen Button\n\n        // Export table Button\n        jquery__WEBPACK_IMPORTED_MODULE_4__('button[name=\"exportBtn\"]').on(\"click\", function () {\n          var DATE_TO_VAL = jquery__WEBPACK_IMPORTED_MODULE_4__(\"#dateTo\").val();\n          var DATE_FROM_VAL = jquery__WEBPACK_IMPORTED_MODULE_4__(\"#dateFrom\").val();\n          jquery__WEBPACK_IMPORTED_MODULE_4__(periodTableName).tableExport({\n            type: \"excel\",\n            fileName: \"Product-User Research (\".concat(DATE_FROM_VAL, \" ~ \").concat(DATE_TO_VAL, \")\"),\n            mso: {\n              fileFormat: \"xlsx\"\n            },\n            ignoreRow: [\"#searchRow\"]\n          });\n        });\n\n        //#endregion\n\n        //#region Form Logic\n\n        jquery__WEBPACK_IMPORTED_MODULE_4__(\"#isNewTeam\").on(\"change\", function () {\n          if (jquery__WEBPACK_IMPORTED_MODULE_4__(\"#isNewTeam\").is(\":checked\")) {\n            jquery__WEBPACK_IMPORTED_MODULE_4__(\"#newTeamSelect\").hide();\n            jquery__WEBPACK_IMPORTED_MODULE_4__(\"#newTeamText\").show();\n          } else {\n            jquery__WEBPACK_IMPORTED_MODULE_4__(\"#newTeamSelect\").show();\n            jquery__WEBPACK_IMPORTED_MODULE_4__(\"#newTeamText\").hide();\n          }\n        });\n        jquery__WEBPACK_IMPORTED_MODULE_4__('button[name=\"saveForm\"]').on(\"click\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _console, _console2;\n          var teamSelect, teamText, team, newUser, isSaved;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                teamSelect = jquery__WEBPACK_IMPORTED_MODULE_4__(\"#newTeamSelect\").val();\n                teamText = jquery__WEBPACK_IMPORTED_MODULE_4__(\"#newTeamText\").val(); // If any team input is empty\n                if (teamSelect || teamText) {\n                  _context.next = 5;\n                  break;\n                }\n                (0,_utils_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.showAlert)(\"Please select a team for yourself.\");\n                return _context.abrupt(\"return\");\n              case 5:\n                team = jquery__WEBPACK_IMPORTED_MODULE_4__(\"#isNewTeam\").is(\":checked\") ? teamText : teamSelect;\n                /* eslint-disable */\n                (_console = console).log.apply(_console, _toConsumableArray(oo_oo(\"177394302_147_4_147_21_4\", team)));\n                newUser = {\n                  UserID: sessionStorage.getItem(\"username\"),\n                  Team: team\n                };\n                /* eslint-disable */\n                (_console2 = console).log.apply(_console2, _toConsumableArray(oo_oo(\"177394302_153_4_153_24_4\", newUser)));\n                (0,_utils_tab_utils_js__WEBPACK_IMPORTED_MODULE_6__.updateChanges)([new Map([[\"type\", \"new\"], [\"table\", \"Users\"], [\"changes\", [newUser]]])]);\n                _context.next = 12;\n                return (0,_utils_tab_utils_js__WEBPACK_IMPORTED_MODULE_6__.saveChanges)(_utils_socket_utils_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n              case 12:\n                isSaved = _context.sent;\n                if (isSaved) {\n                  newUser.ProductCount = 0;\n                  tableUser.row.add(newUser).draw();\n                  fillDashboardTexts(newUser, userTableData);\n                  userTableData.append(newUser);\n                  (0,_utils_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.hidePopUpForm)();\n                }\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        })));\n\n        //#endregion\n      case 29:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, _callee2);\n})));\nfunction fetchUserDataFromDatabase() {\n  return _fetchUserDataFromDatabase.apply(this, arguments);\n}\n/**\r\n * Fetch All Product Details from SQL Database\r\n * @returns {Promise<Object>} Return Array of product or Array of error\r\n */\nfunction _fetchUserDataFromDatabase() {\n  _fetchUserDataFromDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n            _utils_socket_utils_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].emit(\"get object database\", \"Users\", \"\", function (ackData) {\n              if (ackData.status === \"OK\") {\n                resolve(ackData.result);\n              } else {\n                var _console3;\n                /* eslint-disable */(_console3 = console).log.apply(_console3, _toConsumableArray(oo_oo(\"177394302_180_8_182_9_4\", \"Error Occurred on getting User data from Database: \".concat(ackData.error.code, \": \").concat(ackData.error.name))));\n                (0,_utils_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.showAlert)(\"Error Occurred on getting User data from Database: \".concat(ackData.error.code, \": \").concat(ackData.error.name));\n                reject(ackData.error);\n              }\n            });\n          }));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _fetchUserDataFromDatabase.apply(this, arguments);\n}\nfunction fetchPeriodDataFromDatabase() {\n  return _fetchPeriodDataFromDatabase.apply(this, arguments);\n}\n/**\r\n * Fill html text in the dashboard tab with revelant data\r\n * @param {*} currentUser current user signed in\r\n * @param {*} allUsers all user in the platform to process\r\n */\nfunction _fetchPeriodDataFromDatabase() {\n  _fetchPeriodDataFromDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n            _utils_socket_utils_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].emit(\"get object database\", \"Product\", \"\", function (ackData) {\n              if (ackData.status === \"OK\") {\n                resolve(ackData.result);\n              } else {\n                var _console4;\n                /* eslint-disable */(_console4 = console).log.apply(_console4, _toConsumableArray(oo_oo(\"177394302_202_8_206_9_4\", \"Error Occurred on getting Period data from Database: \".concat(ackData.error.map(function (err) {\n                  return \"\".concat(err.code, \": \").concat(err.name);\n                }).join(\"\\n\")))));\n                (0,_utils_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.showAlert)(\"Error Occurred on getting Period data from Database: \".concat(ackData.error.map(function (err) {\n                  return \"\".concat(err.code, \": \").concat(err.name);\n                }).join(\"\\n\")));\n                reject(ackData.error);\n              }\n            });\n          }));\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _fetchPeriodDataFromDatabase.apply(this, arguments);\n}\nfunction fillDashboardTexts(currentUser, allUsers) {\n  jquery__WEBPACK_IMPORTED_MODULE_4__(\"#userName\").text(currentUser.UserID);\n  jquery__WEBPACK_IMPORTED_MODULE_4__(\"#userAmount\").text(currentUser.ProductCount);\n  jquery__WEBPACK_IMPORTED_MODULE_4__(\"#team\").text(currentUser.Team);\n  jquery__WEBPACK_IMPORTED_MODULE_4__(\"#teamAmount\").text(allUsers.filter(function (user) {\n    return user.Team === currentUser.Team;\n  }).reduce(function (acc, user) {\n    return acc + user.ProductCount;\n  }, 0));\n}\n/* istanbul ignore next */ /* c8 ignore start */ /* eslint-disable */\n;\nfunction oo_cm() {\n  try {\n    return (0, eval)(\"globalThis._console_ninja\") || (0, eval)(\"/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x39c404=_0x5a45;(function(_0x5df1d0,_0x1ce0b9){var _0x42f2f8=_0x5a45,_0x3a9dad=_0x5df1d0();while(!![]){try{var _0x3b044a=parseInt(_0x42f2f8(0xd0))/0x1+parseInt(_0x42f2f8(0x16e))/0x2*(parseInt(_0x42f2f8(0xc4))/0x3)+-parseInt(_0x42f2f8(0x10d))/0x4*(parseInt(_0x42f2f8(0x9f))/0x5)+-parseInt(_0x42f2f8(0xde))/0x6*(parseInt(_0x42f2f8(0xdc))/0x7)+parseInt(_0x42f2f8(0x90))/0x8*(-parseInt(_0x42f2f8(0x94))/0x9)+-parseInt(_0x42f2f8(0xf7))/0xa+-parseInt(_0x42f2f8(0xbc))/0xb*(-parseInt(_0x42f2f8(0xed))/0xc);if(_0x3b044a===_0x1ce0b9)break;else _0x3a9dad['push'](_0x3a9dad['shift']());}catch(_0x38264f){_0x3a9dad['push'](_0x3a9dad['shift']());}}}(_0x554e,0x8e5ad));var j=Object[_0x39c404(0xcf)],H=Object[_0x39c404(0x160)],G=Object[_0x39c404(0x11d)],ee=Object[_0x39c404(0x12d)],te=Object[_0x39c404(0xe4)],ne=Object[_0x39c404(0xa0)][_0x39c404(0x121)],re=(_0xddd3f1,_0x3515bd,_0xef95a4,_0x5e2f65)=>{var _0x1cff5a=_0x39c404;if(_0x3515bd&&typeof _0x3515bd=='object'||typeof _0x3515bd==_0x1cff5a(0xc3)){for(let _0x450c5d of ee(_0x3515bd))!ne[_0x1cff5a(0x146)](_0xddd3f1,_0x450c5d)&&_0x450c5d!==_0xef95a4&&H(_0xddd3f1,_0x450c5d,{'get':()=>_0x3515bd[_0x450c5d],'enumerable':!(_0x5e2f65=G(_0x3515bd,_0x450c5d))||_0x5e2f65[_0x1cff5a(0xba)]});}return _0xddd3f1;},x=(_0x129707,_0x2f917f,_0xad026f)=>(_0xad026f=_0x129707!=null?j(te(_0x129707)):{},re(_0x2f917f||!_0x129707||!_0x129707[_0x39c404(0x10b)]?H(_0xad026f,_0x39c404(0x101),{'value':_0x129707,'enumerable':!0x0}):_0xad026f,_0x129707)),X=class{constructor(_0x523e72,_0x5a96bc,_0x3baa71,_0x2b98f5,_0x4eedde){var _0x1f575f=_0x39c404;this['global']=_0x523e72,this[_0x1f575f(0x141)]=_0x5a96bc,this['port']=_0x3baa71,this[_0x1f575f(0x8c)]=_0x2b98f5,this['dockerizedApp']=_0x4eedde,this[_0x1f575f(0x11f)]=!0x0,this[_0x1f575f(0xb4)]=!0x0,this['_connected']=!0x1,this[_0x1f575f(0xd8)]=!0x1,this[_0x1f575f(0xd7)]=_0x523e72[_0x1f575f(0x84)]?.[_0x1f575f(0x109)]?.[_0x1f575f(0xdd)]===_0x1f575f(0x168),this[_0x1f575f(0xc5)]=!this['global']['process']?.[_0x1f575f(0xb9)]?.[_0x1f575f(0x14c)]&&!this[_0x1f575f(0xd7)],this['_WebSocketClass']=null,this[_0x1f575f(0x99)]=0x0,this[_0x1f575f(0x154)]=0x14,this[_0x1f575f(0xbe)]=_0x1f575f(0x10f),this['_sendErrorMessage']=(this[_0x1f575f(0xc5)]?_0x1f575f(0xb3):_0x1f575f(0xf3))+this[_0x1f575f(0xbe)];}async['getWebSocketClass'](){var _0x1afdf7=_0x39c404;if(this['_WebSocketClass'])return this[_0x1afdf7(0x9e)];let _0x4ac146;if(this[_0x1afdf7(0xc5)]||this[_0x1afdf7(0xd7)])_0x4ac146=this[_0x1afdf7(0xfc)][_0x1afdf7(0xe2)];else{if(this[_0x1afdf7(0xfc)][_0x1afdf7(0x84)]?.['_WebSocket'])_0x4ac146=this[_0x1afdf7(0xfc)][_0x1afdf7(0x84)]?.['_WebSocket'];else try{let _0x4973ad=await import(_0x1afdf7(0x126));_0x4ac146=(await import((await import(_0x1afdf7(0xf8)))[_0x1afdf7(0xbb)](_0x4973ad['join'](this['nodeModules'],_0x1afdf7(0xbd)))[_0x1afdf7(0x15e)]()))['default'];}catch{try{_0x4ac146=require(require(_0x1afdf7(0x126))[_0x1afdf7(0x96)](this[_0x1afdf7(0x8c)],'ws'));}catch{throw new Error('failed\\\\x20to\\\\x20find\\\\x20and\\\\x20load\\\\x20WebSocket');}}}return this['_WebSocketClass']=_0x4ac146,_0x4ac146;}['_connectToHostNow'](){var _0x2882f0=_0x39c404;this[_0x2882f0(0xd8)]||this['_connected']||this[_0x2882f0(0x99)]>=this[_0x2882f0(0x154)]||(this[_0x2882f0(0xb4)]=!0x1,this[_0x2882f0(0xd8)]=!0x0,this[_0x2882f0(0x99)]++,this['_ws']=new Promise((_0x3177af,_0x5c3906)=>{var _0x2fd364=_0x2882f0;this['getWebSocketClass']()[_0x2fd364(0x134)](_0x1808dc=>{var _0x3a350d=_0x2fd364;let _0x3cef17=new _0x1808dc(_0x3a350d(0xbf)+(!this['_inBrowser']&&this['dockerizedApp']?'gateway.docker.internal':this['host'])+':'+this[_0x3a350d(0x166)]);_0x3cef17['onerror']=()=>{var _0x9be3eb=_0x3a350d;this[_0x9be3eb(0x11f)]=!0x1,this['_disposeWebsocket'](_0x3cef17),this['_attemptToReconnectShortly'](),_0x5c3906(new Error('logger\\\\x20websocket\\\\x20error'));},_0x3cef17['onopen']=()=>{var _0x59d45d=_0x3a350d;this[_0x59d45d(0xc5)]||_0x3cef17[_0x59d45d(0x130)]&&_0x3cef17[_0x59d45d(0x130)][_0x59d45d(0x164)]&&_0x3cef17[_0x59d45d(0x130)]['unref'](),_0x3177af(_0x3cef17);},_0x3cef17[_0x3a350d(0x102)]=()=>{var _0x36a621=_0x3a350d;this[_0x36a621(0xb4)]=!0x0,this[_0x36a621(0x9d)](_0x3cef17),this[_0x36a621(0x88)]();},_0x3cef17[_0x3a350d(0x128)]=_0x3bdf69=>{var _0x2bddf4=_0x3a350d;try{_0x3bdf69&&_0x3bdf69[_0x2bddf4(0xa4)]&&this[_0x2bddf4(0xc5)]&&JSON['parse'](_0x3bdf69[_0x2bddf4(0xa4)])[_0x2bddf4(0x8f)]==='reload'&&this[_0x2bddf4(0xfc)][_0x2bddf4(0xe8)][_0x2bddf4(0x142)]();}catch{}};})[_0x2fd364(0x134)](_0x4a3cc6=>(this['_connected']=!0x0,this[_0x2fd364(0xd8)]=!0x1,this[_0x2fd364(0xb4)]=!0x1,this['_allowedToSend']=!0x0,this[_0x2fd364(0x99)]=0x0,_0x4a3cc6))['catch'](_0x31e086=>(this[_0x2fd364(0x11a)]=!0x1,this['_connecting']=!0x1,console[_0x2fd364(0x162)](_0x2fd364(0x145)+this[_0x2fd364(0xbe)]),_0x5c3906(new Error(_0x2fd364(0x151)+(_0x31e086&&_0x31e086[_0x2fd364(0xaf)])))));}));}[_0x39c404(0x9d)](_0x36b6a3){var _0x1387dc=_0x39c404;this[_0x1387dc(0x11a)]=!0x1,this[_0x1387dc(0xd8)]=!0x1;try{_0x36b6a3['onclose']=null,_0x36b6a3['onerror']=null,_0x36b6a3[_0x1387dc(0x150)]=null;}catch{}try{_0x36b6a3['readyState']<0x2&&_0x36b6a3['close']();}catch{}}[_0x39c404(0x88)](){var _0x58b1a0=_0x39c404;clearTimeout(this[_0x58b1a0(0xee)]),!(this['_connectAttemptCount']>=this[_0x58b1a0(0x154)])&&(this[_0x58b1a0(0xee)]=setTimeout(()=>{var _0xe3870c=_0x58b1a0;this[_0xe3870c(0x11a)]||this[_0xe3870c(0xd8)]||(this[_0xe3870c(0x161)](),this['_ws']?.[_0xe3870c(0x15b)](()=>this[_0xe3870c(0x88)]()));},0x1f4),this[_0x58b1a0(0xee)][_0x58b1a0(0x164)]&&this[_0x58b1a0(0xee)][_0x58b1a0(0x164)]());}async['send'](_0x8cb7b3){var _0x2e9938=_0x39c404;try{if(!this['_allowedToSend'])return;this['_allowedToConnectOnSend']&&this['_connectToHostNow'](),(await this[_0x2e9938(0x107)])[_0x2e9938(0xf2)](JSON[_0x2e9938(0xe1)](_0x8cb7b3));}catch(_0x4fef2f){console[_0x2e9938(0x162)](this[_0x2e9938(0xf6)]+':\\\\x20'+(_0x4fef2f&&_0x4fef2f[_0x2e9938(0xaf)])),this[_0x2e9938(0x11f)]=!0x1,this['_attemptToReconnectShortly']();}}};function _0x5a45(_0x57500f,_0x46c534){var _0x554e76=_0x554e();return _0x5a45=function(_0x5a45e5,_0x5b02c8){_0x5a45e5=_0x5a45e5-0x84;var _0x4d3b76=_0x554e76[_0x5a45e5];return _0x4d3b76;},_0x5a45(_0x57500f,_0x46c534);}function _0x554e(){var _0x329fe2=['_addProperty','substr','time','isExpressionToEvaluate','_addObjectProperty','message','disabledLog','capped','funcName','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20refreshing\\\\x20the\\\\x20page\\\\x20may\\\\x20help;\\\\x20also\\\\x20see\\\\x20','_allowedToConnectOnSend','now','expId','Map','array','versions','enumerable','pathToFileURL','3288846IIvgmP','ws/index.js','_webSocketErrorDocsLink','ws://','String','cappedElements','match','function','1409829kPnqqt','_inBrowser','[object\\\\x20Set]','_isPrimitiveWrapperType','strLength','positiveInfinity','map','_treeNodePropertiesBeforeFullValue','elements','_setNodeExpandableState','stackTraceLimit','create','645150rMgqnY','_setNodeQueryPath','_consoleNinjaAllowedToStart','value','1702440829211','replace','index','_inNextEdge','_connecting','_isUndefined','_type','[object\\\\x20Map]','1442RvGbGd','NEXT_RUNTIME','30522QZDeRB','RegExp','hostname','stringify','WebSocket','[object\\\\x20BigInt]','getPrototypeOf','_treeNodePropertiesAfterFullValue','totalStrLength','length','location','indexOf','performance','toLowerCase','_console_ninja_session','36LRowNO','_reconnectTimeout','date','getOwnPropertySymbols','disabledTrace','send','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20restarting\\\\x20the\\\\x20process\\\\x20may\\\\x20help;\\\\x20also\\\\x20see\\\\x20','level','coverage','_sendErrorMessage','1779740iMLuDd','url','127.0.0.1','_setNodeLabel','webpack','global','forEach','POSITIVE_INFINITY','_keyStrRegExp','_undefined','default','onclose','_processTreeNodeResult','_dateToString','_hasSymbolPropertyOnItsPath','test','_ws','console','env','null','__es'+'Module','trace','224756ntIpJt','negativeZero','https://tinyurl.com/37x8b79t','nuxt','split','remix','slice','bind','perf_hooks','_isNegativeZero','_isSet','isArray','_property','_connected',':logPointId:','sortProps','getOwnPropertyDescriptor','_blacklistedProperty','_allowedToSend','_p_length','hasOwnProperty','_getOwnPropertyNames','_sortProps','type','_setNodeExpressionPath','path','allStrLength','onmessage','HTMLAllCollection','hits','\\\\x20browser','unknown','getOwnPropertyNames','negativeInfinity','constructor','_socket','54192','_capIfString','Symbol','then','_setNodeId','bigint','_console_ninja','astro','hrtime','depth','autoExpandMaxDepth','_propertyName','sort','autoExpandPreviousObjects','_setNodePermissions','','host','reload','current','_hasSetOnItsPath','logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host,\\\\x20see\\\\x20','call','_isArray','expressionsToEvaluate','number','Boolean','_getOwnPropertySymbols','node','Set','noFunctions','serialize','onopen','failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host:\\\\x20','_addFunctionsNode','parent','_maxConnectAttemptCount','[object\\\\x20Array]','setter','_isPrimitiveType','root_exp','','autoExpand','catch','props','name','toString','push','defineProperty','_connectToHostNow','warn','angular','unref','_p_','port','Buffer','edge','...','autoExpandLimit','_isMap','resolveGetters','log','4rFQsmG','NEGATIVE_INFINITY','_cleanNode','logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host','process','_regExpToString','Number','Error','_attemptToReconnectShortly','_additionalMetadata','string','symbol','nodeModules','reduceLimits','autoExpandPropertyCount','method','94896RCDnMD','undefined','_addLoadNode','count','468KtRcqQ','concat','join','_HTMLAllCollection','timeEnd','_connectAttemptCount','_objectToString','error','_quotedRegExp','_disposeWebsocket','_WebSocketClass','5FyYece','prototype','valueOf','boolean','[object\\\\x20Date]','data','_numberRegExp','\\\\x20server','elapsed','_Symbol','object'];_0x554e=function(){return _0x329fe2;};return _0x554e();}function b(_0x2108a6,_0x1517bb,_0x23dc1b,_0x597e41,_0x47089d,_0x1bb585){var _0x4baa73=_0x39c404;let _0xbb13bc=_0x23dc1b[_0x4baa73(0x111)](',')[_0x4baa73(0xca)](_0x5e2819=>{var _0x2db162=_0x4baa73;try{_0x2108a6['_console_ninja_session']||((_0x47089d==='next.js'||_0x47089d===_0x2db162(0x112)||_0x47089d===_0x2db162(0x138)||_0x47089d===_0x2db162(0x163))&&(_0x47089d+=!_0x2108a6[_0x2db162(0x84)]?.[_0x2db162(0xb9)]?.[_0x2db162(0x14c)]&&_0x2108a6['process']?.[_0x2db162(0x109)]?.['NEXT_RUNTIME']!=='edge'?_0x2db162(0x12b):_0x2db162(0xa6)),_0x2108a6[_0x2db162(0xec)]={'id':+new Date(),'tool':_0x47089d});let _0x45be49=new X(_0x2108a6,_0x1517bb,_0x5e2819,_0x597e41,_0x1bb585);return _0x45be49[_0x2db162(0xf2)][_0x2db162(0x114)](_0x45be49);}catch(_0x30a320){return console['warn'](_0x2db162(0x171),_0x30a320&&_0x30a320[_0x2db162(0xaf)]),()=>{};}});return _0x3c14d5=>_0xbb13bc[_0x4baa73(0xfd)](_0x3a6bb3=>_0x3a6bb3(_0x3c14d5));}function W(_0x22100b){var _0x43a81b=_0x39c404;let _0x28bbe6=function(_0x375e23,_0x49d677){return _0x49d677-_0x375e23;},_0x29d8c5;if(_0x22100b[_0x43a81b(0xea)])_0x29d8c5=function(){var _0x181040=_0x43a81b;return _0x22100b['performance'][_0x181040(0xb5)]();};else{if(_0x22100b[_0x43a81b(0x84)]&&_0x22100b[_0x43a81b(0x84)][_0x43a81b(0x139)]&&_0x22100b[_0x43a81b(0x84)]?.['env']?.[_0x43a81b(0xdd)]!==_0x43a81b(0x168))_0x29d8c5=function(){var _0xdd85e4=_0x43a81b;return _0x22100b['process'][_0xdd85e4(0x139)]();},_0x28bbe6=function(_0x55e984,_0x5ac947){return 0x3e8*(_0x5ac947[0x0]-_0x55e984[0x0])+(_0x5ac947[0x1]-_0x55e984[0x1])/0xf4240;};else try{let {performance:_0x4a3712}=require(_0x43a81b(0x115));_0x29d8c5=function(){var _0x5a2df8=_0x43a81b;return _0x4a3712[_0x5a2df8(0xb5)]();};}catch{_0x29d8c5=function(){return+new Date();};}}return{'elapsed':_0x28bbe6,'timeStamp':_0x29d8c5,'now':()=>Date[_0x43a81b(0xb5)]()};}function J(_0x48d6dc,_0xe0bce7,_0x57aa67){var _0x3060e2=_0x39c404;if(_0x48d6dc['_consoleNinjaAllowedToStart']!==void 0x0)return _0x48d6dc[_0x3060e2(0xd2)];let _0x488f4e=_0x48d6dc[_0x3060e2(0x84)]?.[_0x3060e2(0xb9)]?.[_0x3060e2(0x14c)]||_0x48d6dc['process']?.[_0x3060e2(0x109)]?.[_0x3060e2(0xdd)]===_0x3060e2(0x168);return _0x488f4e&&_0x57aa67===_0x3060e2(0x110)?_0x48d6dc[_0x3060e2(0xd2)]=!0x1:_0x48d6dc[_0x3060e2(0xd2)]=_0x488f4e||!_0xe0bce7||_0x48d6dc['location']?.[_0x3060e2(0xe0)]&&_0xe0bce7['includes'](_0x48d6dc[_0x3060e2(0xe8)][_0x3060e2(0xe0)]),_0x48d6dc['_consoleNinjaAllowedToStart'];}function Y(_0x252ee7,_0x2be4cb,_0xa8908e,_0x1093fe){var _0x54d984=_0x39c404;_0x252ee7=_0x252ee7,_0x2be4cb=_0x2be4cb,_0xa8908e=_0xa8908e,_0x1093fe=_0x1093fe;let _0x155327=W(_0x252ee7),_0x415d43=_0x155327['elapsed'],_0x1ba96c=_0x155327['timeStamp'];class _0x15f4c2{constructor(){var _0x49fc45=_0x5a45;this[_0x49fc45(0xff)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\\\xA0-\\\\uFFFF][_$a-zA-Z0-9\\\\xA0-\\\\uFFFF]*$/,this[_0x49fc45(0xa5)]=/^(0|[1-9][0-9]*)$/,this[_0x49fc45(0x9c)]=/'([^\\\\\\\\']|\\\\\\\\')*'/,this[_0x49fc45(0x100)]=_0x252ee7['undefined'],this[_0x49fc45(0x97)]=_0x252ee7[_0x49fc45(0x129)],this['_getOwnPropertyDescriptor']=Object[_0x49fc45(0x11d)],this[_0x49fc45(0x122)]=Object['getOwnPropertyNames'],this[_0x49fc45(0xa8)]=_0x252ee7[_0x49fc45(0x133)],this['_regExpToString']=RegExp[_0x49fc45(0xa0)]['toString'],this[_0x49fc45(0x104)]=Date['prototype'][_0x49fc45(0x15e)];}[_0x54d984(0x14f)](_0x5da997,_0x4224c8,_0x14ee79,_0x3dd436){var _0x46d93a=_0x54d984,_0x565f58=this,_0x44f501=_0x14ee79[_0x46d93a(0x15a)];function _0x5cd797(_0x5277b6,_0x1af9a4,_0x2d45ed){var _0x4dc4fa=_0x46d93a;_0x1af9a4['type']=_0x4dc4fa(0x12c),_0x1af9a4[_0x4dc4fa(0x9b)]=_0x5277b6[_0x4dc4fa(0xaf)],_0x13aa0d=_0x2d45ed[_0x4dc4fa(0x14c)][_0x4dc4fa(0x143)],_0x2d45ed[_0x4dc4fa(0x14c)][_0x4dc4fa(0x143)]=_0x1af9a4,_0x565f58[_0x4dc4fa(0xcb)](_0x1af9a4,_0x2d45ed);}try{_0x14ee79['level']++,_0x14ee79[_0x46d93a(0x15a)]&&_0x14ee79[_0x46d93a(0x13e)][_0x46d93a(0x15f)](_0x4224c8);var _0x2a5056,_0x53d25c,_0x746abf,_0x1632ef,_0x4d2046=[],_0x548400=[],_0x40dd4f,_0x4fb388=this[_0x46d93a(0xda)](_0x4224c8),_0x51cb09=_0x4fb388===_0x46d93a(0xb8),_0x29c539=!0x1,_0xd9e90e=_0x4fb388===_0x46d93a(0xc3),_0x3ce3cd=this[_0x46d93a(0x157)](_0x4fb388),_0xe8d767=this[_0x46d93a(0xc7)](_0x4fb388),_0x5dda9e=_0x3ce3cd||_0xe8d767,_0x537e32={},_0x1aa508=0x0,_0x52ae26=!0x1,_0x13aa0d,_0x25deba=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x14ee79[_0x46d93a(0x13a)]){if(_0x51cb09){if(_0x53d25c=_0x4224c8[_0x46d93a(0xe7)],_0x53d25c>_0x14ee79[_0x46d93a(0xcc)]){for(_0x746abf=0x0,_0x1632ef=_0x14ee79[_0x46d93a(0xcc)],_0x2a5056=_0x746abf;_0x2a5056<_0x1632ef;_0x2a5056++)_0x548400[_0x46d93a(0x15f)](_0x565f58[_0x46d93a(0xaa)](_0x4d2046,_0x4224c8,_0x4fb388,_0x2a5056,_0x14ee79));_0x5da997[_0x46d93a(0xc1)]=!0x0;}else{for(_0x746abf=0x0,_0x1632ef=_0x53d25c,_0x2a5056=_0x746abf;_0x2a5056<_0x1632ef;_0x2a5056++)_0x548400['push'](_0x565f58[_0x46d93a(0xaa)](_0x4d2046,_0x4224c8,_0x4fb388,_0x2a5056,_0x14ee79));}_0x14ee79[_0x46d93a(0x8e)]+=_0x548400[_0x46d93a(0xe7)];}if(!(_0x4fb388===_0x46d93a(0x10a)||_0x4fb388===_0x46d93a(0x91))&&!_0x3ce3cd&&_0x4fb388!==_0x46d93a(0xc0)&&_0x4fb388!==_0x46d93a(0x167)&&_0x4fb388!=='bigint'){var _0x1a9f3a=_0x3dd436[_0x46d93a(0x15c)]||_0x14ee79[_0x46d93a(0x15c)];if(this[_0x46d93a(0x117)](_0x4224c8)?(_0x2a5056=0x0,_0x4224c8[_0x46d93a(0xfd)](function(_0x1b9fb6){var _0x57054d=_0x46d93a;if(_0x1aa508++,_0x14ee79[_0x57054d(0x8e)]++,_0x1aa508>_0x1a9f3a){_0x52ae26=!0x0;return;}if(!_0x14ee79['isExpressionToEvaluate']&&_0x14ee79[_0x57054d(0x15a)]&&_0x14ee79[_0x57054d(0x8e)]>_0x14ee79[_0x57054d(0x16a)]){_0x52ae26=!0x0;return;}_0x548400['push'](_0x565f58[_0x57054d(0xaa)](_0x4d2046,_0x4224c8,_0x57054d(0x14d),_0x2a5056++,_0x14ee79,function(_0x2f7713){return function(){return _0x2f7713;};}(_0x1b9fb6)));})):this[_0x46d93a(0x16b)](_0x4224c8)&&_0x4224c8[_0x46d93a(0xfd)](function(_0x17c731,_0x214360){var _0x174899=_0x46d93a;if(_0x1aa508++,_0x14ee79[_0x174899(0x8e)]++,_0x1aa508>_0x1a9f3a){_0x52ae26=!0x0;return;}if(!_0x14ee79[_0x174899(0xad)]&&_0x14ee79[_0x174899(0x15a)]&&_0x14ee79[_0x174899(0x8e)]>_0x14ee79[_0x174899(0x16a)]){_0x52ae26=!0x0;return;}var _0x22d642=_0x214360['toString']();_0x22d642[_0x174899(0xe7)]>0x64&&(_0x22d642=_0x22d642[_0x174899(0x113)](0x0,0x64)+_0x174899(0x169)),_0x548400[_0x174899(0x15f)](_0x565f58[_0x174899(0xaa)](_0x4d2046,_0x4224c8,_0x174899(0xb7),_0x22d642,_0x14ee79,function(_0x556151){return function(){return _0x556151;};}(_0x17c731)));}),!_0x29c539){try{for(_0x40dd4f in _0x4224c8)if(!(_0x51cb09&&_0x25deba[_0x46d93a(0x106)](_0x40dd4f))&&!this[_0x46d93a(0x11e)](_0x4224c8,_0x40dd4f,_0x14ee79)){if(_0x1aa508++,_0x14ee79['autoExpandPropertyCount']++,_0x1aa508>_0x1a9f3a){_0x52ae26=!0x0;break;}if(!_0x14ee79[_0x46d93a(0xad)]&&_0x14ee79['autoExpand']&&_0x14ee79['autoExpandPropertyCount']>_0x14ee79[_0x46d93a(0x16a)]){_0x52ae26=!0x0;break;}_0x548400['push'](_0x565f58[_0x46d93a(0xae)](_0x4d2046,_0x537e32,_0x4224c8,_0x4fb388,_0x40dd4f,_0x14ee79));}}catch{}if(_0x537e32[_0x46d93a(0x120)]=!0x0,_0xd9e90e&&(_0x537e32['_p_name']=!0x0),!_0x52ae26){var _0x211cb6=[][_0x46d93a(0x95)](this['_getOwnPropertyNames'](_0x4224c8))[_0x46d93a(0x95)](this[_0x46d93a(0x14b)](_0x4224c8));for(_0x2a5056=0x0,_0x53d25c=_0x211cb6[_0x46d93a(0xe7)];_0x2a5056<_0x53d25c;_0x2a5056++)if(_0x40dd4f=_0x211cb6[_0x2a5056],!(_0x51cb09&&_0x25deba['test'](_0x40dd4f[_0x46d93a(0x15e)]()))&&!this[_0x46d93a(0x11e)](_0x4224c8,_0x40dd4f,_0x14ee79)&&!_0x537e32[_0x46d93a(0x165)+_0x40dd4f[_0x46d93a(0x15e)]()]){if(_0x1aa508++,_0x14ee79[_0x46d93a(0x8e)]++,_0x1aa508>_0x1a9f3a){_0x52ae26=!0x0;break;}if(!_0x14ee79[_0x46d93a(0xad)]&&_0x14ee79[_0x46d93a(0x15a)]&&_0x14ee79[_0x46d93a(0x8e)]>_0x14ee79[_0x46d93a(0x16a)]){_0x52ae26=!0x0;break;}_0x548400['push'](_0x565f58[_0x46d93a(0xae)](_0x4d2046,_0x537e32,_0x4224c8,_0x4fb388,_0x40dd4f,_0x14ee79));}}}}}if(_0x5da997[_0x46d93a(0x124)]=_0x4fb388,_0x5dda9e?(_0x5da997[_0x46d93a(0xd3)]=_0x4224c8[_0x46d93a(0xa1)](),this['_capIfString'](_0x4fb388,_0x5da997,_0x14ee79,_0x3dd436)):_0x4fb388===_0x46d93a(0xef)?_0x5da997[_0x46d93a(0xd3)]=this['_dateToString'][_0x46d93a(0x146)](_0x4224c8):_0x4fb388===_0x46d93a(0x136)?_0x5da997[_0x46d93a(0xd3)]=_0x4224c8[_0x46d93a(0x15e)]():_0x4fb388===_0x46d93a(0xdf)?_0x5da997[_0x46d93a(0xd3)]=this[_0x46d93a(0x85)][_0x46d93a(0x146)](_0x4224c8):_0x4fb388===_0x46d93a(0x8b)&&this[_0x46d93a(0xa8)]?_0x5da997[_0x46d93a(0xd3)]=this[_0x46d93a(0xa8)][_0x46d93a(0xa0)][_0x46d93a(0x15e)]['call'](_0x4224c8):!_0x14ee79[_0x46d93a(0x13a)]&&!(_0x4fb388===_0x46d93a(0x10a)||_0x4fb388===_0x46d93a(0x91))&&(delete _0x5da997[_0x46d93a(0xd3)],_0x5da997[_0x46d93a(0xb1)]=!0x0),_0x52ae26&&(_0x5da997['cappedProps']=!0x0),_0x13aa0d=_0x14ee79[_0x46d93a(0x14c)][_0x46d93a(0x143)],_0x14ee79[_0x46d93a(0x14c)]['current']=_0x5da997,this[_0x46d93a(0xcb)](_0x5da997,_0x14ee79),_0x548400[_0x46d93a(0xe7)]){for(_0x2a5056=0x0,_0x53d25c=_0x548400[_0x46d93a(0xe7)];_0x2a5056<_0x53d25c;_0x2a5056++)_0x548400[_0x2a5056](_0x2a5056);}_0x4d2046[_0x46d93a(0xe7)]&&(_0x5da997['props']=_0x4d2046);}catch(_0x5155d5){_0x5cd797(_0x5155d5,_0x5da997,_0x14ee79);}return this[_0x46d93a(0x89)](_0x4224c8,_0x5da997),this[_0x46d93a(0xe5)](_0x5da997,_0x14ee79),_0x14ee79[_0x46d93a(0x14c)][_0x46d93a(0x143)]=_0x13aa0d,_0x14ee79[_0x46d93a(0xf4)]--,_0x14ee79[_0x46d93a(0x15a)]=_0x44f501,_0x14ee79[_0x46d93a(0x15a)]&&_0x14ee79[_0x46d93a(0x13e)]['pop'](),_0x5da997;}[_0x54d984(0x14b)](_0x5808d9){var _0x66abf2=_0x54d984;return Object['getOwnPropertySymbols']?Object[_0x66abf2(0xf0)](_0x5808d9):[];}[_0x54d984(0x117)](_0x680252){var _0x44bf63=_0x54d984;return!!(_0x680252&&_0x252ee7[_0x44bf63(0x14d)]&&this['_objectToString'](_0x680252)===_0x44bf63(0xc6)&&_0x680252[_0x44bf63(0xfd)]);}[_0x54d984(0x11e)](_0x58c879,_0x46a1ce,_0x502fe2){var _0x5443a0=_0x54d984;return _0x502fe2[_0x5443a0(0x14e)]?typeof _0x58c879[_0x46a1ce]==_0x5443a0(0xc3):!0x1;}['_type'](_0x49a6f2){var _0x4ac393=_0x54d984,_0x268882='';return _0x268882=typeof _0x49a6f2,_0x268882===_0x4ac393(0xa9)?this[_0x4ac393(0x9a)](_0x49a6f2)==='[object\\\\x20Array]'?_0x268882=_0x4ac393(0xb8):this[_0x4ac393(0x9a)](_0x49a6f2)===_0x4ac393(0xa3)?_0x268882=_0x4ac393(0xef):this['_objectToString'](_0x49a6f2)===_0x4ac393(0xe3)?_0x268882='bigint':_0x49a6f2===null?_0x268882='null':_0x49a6f2['constructor']&&(_0x268882=_0x49a6f2[_0x4ac393(0x12f)]['name']||_0x268882):_0x268882===_0x4ac393(0x91)&&this[_0x4ac393(0x97)]&&_0x49a6f2 instanceof this[_0x4ac393(0x97)]&&(_0x268882=_0x4ac393(0x129)),_0x268882;}[_0x54d984(0x9a)](_0x1cd45f){var _0x1a6e5f=_0x54d984;return Object[_0x1a6e5f(0xa0)]['toString'][_0x1a6e5f(0x146)](_0x1cd45f);}[_0x54d984(0x157)](_0x5d44b7){var _0x2c2dcf=_0x54d984;return _0x5d44b7===_0x2c2dcf(0xa2)||_0x5d44b7==='string'||_0x5d44b7==='number';}[_0x54d984(0xc7)](_0x4a6219){var _0x107a17=_0x54d984;return _0x4a6219===_0x107a17(0x14a)||_0x4a6219===_0x107a17(0xc0)||_0x4a6219===_0x107a17(0x86);}[_0x54d984(0xaa)](_0x211ad2,_0x7563ed,_0x324fb2,_0x37a414,_0x13c141,_0x47991e){var _0x50d817=this;return function(_0x2a70e5){var _0x478d2f=_0x5a45,_0x436625=_0x13c141[_0x478d2f(0x14c)][_0x478d2f(0x143)],_0x573ae1=_0x13c141[_0x478d2f(0x14c)][_0x478d2f(0xd6)],_0x1e573d=_0x13c141[_0x478d2f(0x14c)][_0x478d2f(0x153)];_0x13c141['node'][_0x478d2f(0x153)]=_0x436625,_0x13c141[_0x478d2f(0x14c)][_0x478d2f(0xd6)]=typeof _0x37a414==_0x478d2f(0x149)?_0x37a414:_0x2a70e5,_0x211ad2[_0x478d2f(0x15f)](_0x50d817[_0x478d2f(0x119)](_0x7563ed,_0x324fb2,_0x37a414,_0x13c141,_0x47991e)),_0x13c141[_0x478d2f(0x14c)][_0x478d2f(0x153)]=_0x1e573d,_0x13c141[_0x478d2f(0x14c)][_0x478d2f(0xd6)]=_0x573ae1;};}[_0x54d984(0xae)](_0x3e4715,_0x10a913,_0x440dda,_0x1fcc02,_0x3df342,_0x198316,_0x1df01b){var _0xef252f=_0x54d984,_0x31db88=this;return _0x10a913['_p_'+_0x3df342[_0xef252f(0x15e)]()]=!0x0,function(_0xeacf84){var _0x202c1c=_0xef252f,_0x16f55b=_0x198316['node'][_0x202c1c(0x143)],_0x5a4b7f=_0x198316['node'][_0x202c1c(0xd6)],_0x97b5e3=_0x198316[_0x202c1c(0x14c)][_0x202c1c(0x153)];_0x198316[_0x202c1c(0x14c)]['parent']=_0x16f55b,_0x198316[_0x202c1c(0x14c)]['index']=_0xeacf84,_0x3e4715[_0x202c1c(0x15f)](_0x31db88['_property'](_0x440dda,_0x1fcc02,_0x3df342,_0x198316,_0x1df01b)),_0x198316['node'][_0x202c1c(0x153)]=_0x97b5e3,_0x198316[_0x202c1c(0x14c)][_0x202c1c(0xd6)]=_0x5a4b7f;};}[_0x54d984(0x119)](_0x1710ac,_0x1f5a60,_0x27288f,_0x15078b,_0x368b27){var _0xebca43=_0x54d984,_0x10e010=this;_0x368b27||(_0x368b27=function(_0x31720c,_0x3e0d38){return _0x31720c[_0x3e0d38];});var _0x1b9ee3=_0x27288f['toString'](),_0x24885a=_0x15078b[_0xebca43(0x148)]||{},_0x28587d=_0x15078b[_0xebca43(0x13a)],_0x5eed83=_0x15078b['isExpressionToEvaluate'];try{var _0x523302=this[_0xebca43(0x16b)](_0x1710ac),_0xa9c420=_0x1b9ee3;_0x523302&&_0xa9c420[0x0]==='\\\\x27'&&(_0xa9c420=_0xa9c420[_0xebca43(0xab)](0x1,_0xa9c420[_0xebca43(0xe7)]-0x2));var _0x4eb2f7=_0x15078b['expressionsToEvaluate']=_0x24885a[_0xebca43(0x165)+_0xa9c420];_0x4eb2f7&&(_0x15078b[_0xebca43(0x13a)]=_0x15078b[_0xebca43(0x13a)]+0x1),_0x15078b[_0xebca43(0xad)]=!!_0x4eb2f7;var _0x204548=typeof _0x27288f=='symbol',_0x71f08b={'name':_0x204548||_0x523302?_0x1b9ee3:this[_0xebca43(0x13c)](_0x1b9ee3)};if(_0x204548&&(_0x71f08b[_0xebca43(0x8b)]=!0x0),!(_0x1f5a60===_0xebca43(0xb8)||_0x1f5a60===_0xebca43(0x87))){var _0x2fc9cc=this['_getOwnPropertyDescriptor'](_0x1710ac,_0x27288f);if(_0x2fc9cc&&(_0x2fc9cc['set']&&(_0x71f08b[_0xebca43(0x156)]=!0x0),_0x2fc9cc['get']&&!_0x4eb2f7&&!_0x15078b[_0xebca43(0x16c)]))return _0x71f08b['getter']=!0x0,this['_processTreeNodeResult'](_0x71f08b,_0x15078b),_0x71f08b;}var _0x372093;try{_0x372093=_0x368b27(_0x1710ac,_0x27288f);}catch(_0xca98b){return _0x71f08b={'name':_0x1b9ee3,'type':_0xebca43(0x12c),'error':_0xca98b[_0xebca43(0xaf)]},this['_processTreeNodeResult'](_0x71f08b,_0x15078b),_0x71f08b;}var _0x4fc92b=this[_0xebca43(0xda)](_0x372093),_0x43167d=this['_isPrimitiveType'](_0x4fc92b);if(_0x71f08b['type']=_0x4fc92b,_0x43167d)this[_0xebca43(0x103)](_0x71f08b,_0x15078b,_0x372093,function(){var _0x48492f=_0xebca43;_0x71f08b[_0x48492f(0xd3)]=_0x372093[_0x48492f(0xa1)](),!_0x4eb2f7&&_0x10e010[_0x48492f(0x132)](_0x4fc92b,_0x71f08b,_0x15078b,{});});else{var _0x17e50c=_0x15078b[_0xebca43(0x15a)]&&_0x15078b['level']<_0x15078b[_0xebca43(0x13b)]&&_0x15078b[_0xebca43(0x13e)][_0xebca43(0xe9)](_0x372093)<0x0&&_0x4fc92b!==_0xebca43(0xc3)&&_0x15078b['autoExpandPropertyCount']<_0x15078b['autoExpandLimit'];_0x17e50c||_0x15078b['level']<_0x28587d||_0x4eb2f7?(this['serialize'](_0x71f08b,_0x372093,_0x15078b,_0x4eb2f7||{}),this[_0xebca43(0x89)](_0x372093,_0x71f08b)):this[_0xebca43(0x103)](_0x71f08b,_0x15078b,_0x372093,function(){var _0x3d5f37=_0xebca43;_0x4fc92b===_0x3d5f37(0x10a)||_0x4fc92b==='undefined'||(delete _0x71f08b['value'],_0x71f08b[_0x3d5f37(0xb1)]=!0x0);});}return _0x71f08b;}finally{_0x15078b[_0xebca43(0x148)]=_0x24885a,_0x15078b[_0xebca43(0x13a)]=_0x28587d,_0x15078b['isExpressionToEvaluate']=_0x5eed83;}}[_0x54d984(0x132)](_0x15644c,_0x21d003,_0x5d08ae,_0x477282){var _0x4ab8e6=_0x54d984,_0x597b03=_0x477282[_0x4ab8e6(0xc8)]||_0x5d08ae['strLength'];if((_0x15644c===_0x4ab8e6(0x8a)||_0x15644c===_0x4ab8e6(0xc0))&&_0x21d003[_0x4ab8e6(0xd3)]){let _0x3f458e=_0x21d003['value'][_0x4ab8e6(0xe7)];_0x5d08ae[_0x4ab8e6(0x127)]+=_0x3f458e,_0x5d08ae[_0x4ab8e6(0x127)]>_0x5d08ae['totalStrLength']?(_0x21d003['capped']='',delete _0x21d003['value']):_0x3f458e>_0x597b03&&(_0x21d003['capped']=_0x21d003[_0x4ab8e6(0xd3)][_0x4ab8e6(0xab)](0x0,_0x597b03),delete _0x21d003[_0x4ab8e6(0xd3)]);}}[_0x54d984(0x16b)](_0xadcbce){var _0x6e5f4b=_0x54d984;return!!(_0xadcbce&&_0x252ee7['Map']&&this[_0x6e5f4b(0x9a)](_0xadcbce)===_0x6e5f4b(0xdb)&&_0xadcbce['forEach']);}[_0x54d984(0x13c)](_0x2964aa){var _0x313a0d=_0x54d984;if(_0x2964aa[_0x313a0d(0xc2)](/^\\\\d+$/))return _0x2964aa;var _0x2d9f65;try{_0x2d9f65=JSON[_0x313a0d(0xe1)](''+_0x2964aa);}catch{_0x2d9f65='\\\\x22'+this['_objectToString'](_0x2964aa)+'\\\\x22';}return _0x2d9f65['match'](/^\\\"([a-zA-Z_][a-zA-Z_0-9]*)\\\"$/)?_0x2d9f65=_0x2d9f65['substr'](0x1,_0x2d9f65[_0x313a0d(0xe7)]-0x2):_0x2d9f65=_0x2d9f65['replace'](/'/g,'\\\\x5c\\\\x27')[_0x313a0d(0xd5)](/\\\\\\\\\\\"/g,'\\\\x22')[_0x313a0d(0xd5)](/(^\\\"|\\\"$)/g,'\\\\x27'),_0x2d9f65;}['_processTreeNodeResult'](_0xce303f,_0x5ff6c7,_0x2d4532,_0x55c161){var _0x428ab9=_0x54d984;this[_0x428ab9(0xcb)](_0xce303f,_0x5ff6c7),_0x55c161&&_0x55c161(),this[_0x428ab9(0x89)](_0x2d4532,_0xce303f),this[_0x428ab9(0xe5)](_0xce303f,_0x5ff6c7);}[_0x54d984(0xcb)](_0x41516b,_0x4712a1){var _0x2ed291=_0x54d984;this[_0x2ed291(0x135)](_0x41516b,_0x4712a1),this[_0x2ed291(0xd1)](_0x41516b,_0x4712a1),this['_setNodeExpressionPath'](_0x41516b,_0x4712a1),this[_0x2ed291(0x13f)](_0x41516b,_0x4712a1);}[_0x54d984(0x135)](_0x54df9e,_0x25adf7){}[_0x54d984(0xd1)](_0x2492f8,_0x44e33f){}[_0x54d984(0xfa)](_0x14f781,_0x5280eb){}[_0x54d984(0xd9)](_0x21f85d){var _0x19ef6c=_0x54d984;return _0x21f85d===this[_0x19ef6c(0x100)];}['_treeNodePropertiesAfterFullValue'](_0x489c95,_0x423c1c){var _0x28b63d=_0x54d984;this[_0x28b63d(0xfa)](_0x489c95,_0x423c1c),this[_0x28b63d(0xcd)](_0x489c95),_0x423c1c[_0x28b63d(0x11c)]&&this[_0x28b63d(0x123)](_0x489c95),this[_0x28b63d(0x152)](_0x489c95,_0x423c1c),this[_0x28b63d(0x92)](_0x489c95,_0x423c1c),this[_0x28b63d(0x170)](_0x489c95);}[_0x54d984(0x89)](_0x4dbcaa,_0x355b84){var _0x12d1f4=_0x54d984;let _0x1eed9a;try{_0x252ee7[_0x12d1f4(0x108)]&&(_0x1eed9a=_0x252ee7['console'][_0x12d1f4(0x9b)],_0x252ee7['console'][_0x12d1f4(0x9b)]=function(){}),_0x4dbcaa&&typeof _0x4dbcaa[_0x12d1f4(0xe7)]==_0x12d1f4(0x149)&&(_0x355b84[_0x12d1f4(0xe7)]=_0x4dbcaa[_0x12d1f4(0xe7)]);}catch{}finally{_0x1eed9a&&(_0x252ee7['console']['error']=_0x1eed9a);}if(_0x355b84[_0x12d1f4(0x124)]===_0x12d1f4(0x149)||_0x355b84['type']===_0x12d1f4(0x86)){if(isNaN(_0x355b84[_0x12d1f4(0xd3)]))_0x355b84['nan']=!0x0,delete _0x355b84[_0x12d1f4(0xd3)];else switch(_0x355b84[_0x12d1f4(0xd3)]){case Number[_0x12d1f4(0xfe)]:_0x355b84[_0x12d1f4(0xc9)]=!0x0,delete _0x355b84[_0x12d1f4(0xd3)];break;case Number[_0x12d1f4(0x16f)]:_0x355b84[_0x12d1f4(0x12e)]=!0x0,delete _0x355b84['value'];break;case 0x0:this[_0x12d1f4(0x116)](_0x355b84['value'])&&(_0x355b84[_0x12d1f4(0x10e)]=!0x0);break;}}else _0x355b84[_0x12d1f4(0x124)]==='function'&&typeof _0x4dbcaa[_0x12d1f4(0x15d)]=='string'&&_0x4dbcaa[_0x12d1f4(0x15d)]&&_0x355b84['name']&&_0x4dbcaa['name']!==_0x355b84[_0x12d1f4(0x15d)]&&(_0x355b84[_0x12d1f4(0xb2)]=_0x4dbcaa[_0x12d1f4(0x15d)]);}[_0x54d984(0x116)](_0x787478){var _0x5cb23d=_0x54d984;return 0x1/_0x787478===Number[_0x5cb23d(0x16f)];}[_0x54d984(0x123)](_0x313190){var _0x10707c=_0x54d984;!_0x313190[_0x10707c(0x15c)]||!_0x313190['props'][_0x10707c(0xe7)]||_0x313190[_0x10707c(0x124)]==='array'||_0x313190[_0x10707c(0x124)]===_0x10707c(0xb7)||_0x313190[_0x10707c(0x124)]===_0x10707c(0x14d)||_0x313190[_0x10707c(0x15c)][_0x10707c(0x13d)](function(_0x4dd13c,_0x18cb73){var _0x167573=_0x10707c,_0xa45fc9=_0x4dd13c[_0x167573(0x15d)][_0x167573(0xeb)](),_0x18dae3=_0x18cb73[_0x167573(0x15d)]['toLowerCase']();return _0xa45fc9<_0x18dae3?-0x1:_0xa45fc9>_0x18dae3?0x1:0x0;});}[_0x54d984(0x152)](_0xa69bd9,_0x24e091){var _0x76017=_0x54d984;if(!(_0x24e091['noFunctions']||!_0xa69bd9['props']||!_0xa69bd9[_0x76017(0x15c)]['length'])){for(var _0x7c22f=[],_0x265c9a=[],_0x56af45=0x0,_0x311920=_0xa69bd9['props'][_0x76017(0xe7)];_0x56af45<_0x311920;_0x56af45++){var _0x59194e=_0xa69bd9[_0x76017(0x15c)][_0x56af45];_0x59194e['type']===_0x76017(0xc3)?_0x7c22f[_0x76017(0x15f)](_0x59194e):_0x265c9a[_0x76017(0x15f)](_0x59194e);}if(!(!_0x265c9a['length']||_0x7c22f[_0x76017(0xe7)]<=0x1)){_0xa69bd9[_0x76017(0x15c)]=_0x265c9a;var _0x1e0926={'functionsNode':!0x0,'props':_0x7c22f};this[_0x76017(0x135)](_0x1e0926,_0x24e091),this[_0x76017(0xfa)](_0x1e0926,_0x24e091),this[_0x76017(0xcd)](_0x1e0926),this['_setNodePermissions'](_0x1e0926,_0x24e091),_0x1e0926['id']+='\\\\x20f',_0xa69bd9[_0x76017(0x15c)]['unshift'](_0x1e0926);}}}[_0x54d984(0x92)](_0x5d4567,_0x3f22a5){}[_0x54d984(0xcd)](_0xed1ebc){}[_0x54d984(0x147)](_0x44d40f){var _0x3bc38a=_0x54d984;return Array[_0x3bc38a(0x118)](_0x44d40f)||typeof _0x44d40f==_0x3bc38a(0xa9)&&this[_0x3bc38a(0x9a)](_0x44d40f)===_0x3bc38a(0x155);}[_0x54d984(0x13f)](_0x327ed6,_0x4f2889){}['_cleanNode'](_0x57f2ce){var _0x62d332=_0x54d984;delete _0x57f2ce[_0x62d332(0x105)],delete _0x57f2ce[_0x62d332(0x144)],delete _0x57f2ce['_hasMapOnItsPath'];}[_0x54d984(0x125)](_0x2708b4,_0x354945){}}let _0x2267c6=new _0x15f4c2(),_0x10e34e={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x4bed4c={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0xd37905(_0x44431c,_0x46b12f,_0x332972,_0x9a9f60,_0x222085,_0x333e5f){var _0x186dba=_0x54d984;let _0x12ec8b,_0x137fff;try{_0x137fff=_0x1ba96c(),_0x12ec8b=_0xa8908e[_0x46b12f],!_0x12ec8b||_0x137fff-_0x12ec8b['ts']>0x1f4&&_0x12ec8b[_0x186dba(0x93)]&&_0x12ec8b[_0x186dba(0xac)]/_0x12ec8b[_0x186dba(0x93)]<0x64?(_0xa8908e[_0x46b12f]=_0x12ec8b={'count':0x0,'time':0x0,'ts':_0x137fff},_0xa8908e[_0x186dba(0x12a)]={}):_0x137fff-_0xa8908e['hits']['ts']>0x32&&_0xa8908e[_0x186dba(0x12a)][_0x186dba(0x93)]&&_0xa8908e['hits'][_0x186dba(0xac)]/_0xa8908e['hits'][_0x186dba(0x93)]<0x64&&(_0xa8908e[_0x186dba(0x12a)]={});let _0x1e71fa=[],_0x420fae=_0x12ec8b['reduceLimits']||_0xa8908e[_0x186dba(0x12a)][_0x186dba(0x8d)]?_0x4bed4c:_0x10e34e,_0x4e8d1d=_0x5ab579=>{var _0x4918f5=_0x186dba;let _0x3afe12={};return _0x3afe12[_0x4918f5(0x15c)]=_0x5ab579[_0x4918f5(0x15c)],_0x3afe12[_0x4918f5(0xcc)]=_0x5ab579[_0x4918f5(0xcc)],_0x3afe12[_0x4918f5(0xc8)]=_0x5ab579[_0x4918f5(0xc8)],_0x3afe12[_0x4918f5(0xe6)]=_0x5ab579[_0x4918f5(0xe6)],_0x3afe12[_0x4918f5(0x16a)]=_0x5ab579['autoExpandLimit'],_0x3afe12[_0x4918f5(0x13b)]=_0x5ab579[_0x4918f5(0x13b)],_0x3afe12[_0x4918f5(0x11c)]=!0x1,_0x3afe12['noFunctions']=!_0x2be4cb,_0x3afe12[_0x4918f5(0x13a)]=0x1,_0x3afe12[_0x4918f5(0xf4)]=0x0,_0x3afe12[_0x4918f5(0xb6)]='root_exp_id',_0x3afe12['rootExpression']=_0x4918f5(0x158),_0x3afe12[_0x4918f5(0x15a)]=!0x0,_0x3afe12['autoExpandPreviousObjects']=[],_0x3afe12[_0x4918f5(0x8e)]=0x0,_0x3afe12[_0x4918f5(0x16c)]=!0x0,_0x3afe12[_0x4918f5(0x127)]=0x0,_0x3afe12[_0x4918f5(0x14c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3afe12;};for(var _0x2a7234=0x0;_0x2a7234<_0x222085[_0x186dba(0xe7)];_0x2a7234++)_0x1e71fa[_0x186dba(0x15f)](_0x2267c6['serialize']({'timeNode':_0x44431c==='time'||void 0x0},_0x222085[_0x2a7234],_0x4e8d1d(_0x420fae),{}));if(_0x44431c===_0x186dba(0x10c)){let _0x2a0dc2=Error['stackTraceLimit'];try{Error[_0x186dba(0xce)]=0x1/0x0,_0x1e71fa['push'](_0x2267c6['serialize']({'stackNode':!0x0},new Error()['stack'],_0x4e8d1d(_0x420fae),{'strLength':0x1/0x0}));}finally{Error[_0x186dba(0xce)]=_0x2a0dc2;}}return{'method':'log','version':_0x1093fe,'args':[{'ts':_0x332972,'session':_0x9a9f60,'args':_0x1e71fa,'id':_0x46b12f,'context':_0x333e5f}]};}catch(_0x53c5b8){return{'method':'log','version':_0x1093fe,'args':[{'ts':_0x332972,'session':_0x9a9f60,'args':[{'type':_0x186dba(0x12c),'error':_0x53c5b8&&_0x53c5b8[_0x186dba(0xaf)]}],'id':_0x46b12f,'context':_0x333e5f}]};}finally{try{if(_0x12ec8b&&_0x137fff){let _0xeacb14=_0x1ba96c();_0x12ec8b[_0x186dba(0x93)]++,_0x12ec8b[_0x186dba(0xac)]+=_0x415d43(_0x137fff,_0xeacb14),_0x12ec8b['ts']=_0xeacb14,_0xa8908e[_0x186dba(0x12a)][_0x186dba(0x93)]++,_0xa8908e[_0x186dba(0x12a)][_0x186dba(0xac)]+=_0x415d43(_0x137fff,_0xeacb14),_0xa8908e[_0x186dba(0x12a)]['ts']=_0xeacb14,(_0x12ec8b[_0x186dba(0x93)]>0x32||_0x12ec8b[_0x186dba(0xac)]>0x64)&&(_0x12ec8b[_0x186dba(0x8d)]=!0x0),(_0xa8908e['hits'][_0x186dba(0x93)]>0x3e8||_0xa8908e[_0x186dba(0x12a)][_0x186dba(0xac)]>0x12c)&&(_0xa8908e[_0x186dba(0x12a)][_0x186dba(0x8d)]=!0x0);}}catch{}}}return _0xd37905;}((_0x2c791c,_0x715769,_0x35b369,_0x5602b0,_0x4260ca,_0x99bca4,_0x4ed33f,_0x4e081c,_0x2bffc0,_0x2457d4)=>{var _0x2e7b75=_0x39c404;if(_0x2c791c[_0x2e7b75(0x137)])return _0x2c791c[_0x2e7b75(0x137)];if(!J(_0x2c791c,_0x4e081c,_0x4260ca))return _0x2c791c['_console_ninja']={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2c791c[_0x2e7b75(0x137)];let _0x4b93b9=W(_0x2c791c),_0x6e38ae=_0x4b93b9[_0x2e7b75(0xa7)],_0x4abd16=_0x4b93b9['timeStamp'],_0x3bf630=_0x4b93b9[_0x2e7b75(0xb5)],_0x1025b5={'hits':{},'ts':{}},_0xe60b39=Y(_0x2c791c,_0x2bffc0,_0x1025b5,_0x99bca4),_0xc22f1f=_0x5d5ef7=>{_0x1025b5['ts'][_0x5d5ef7]=_0x4abd16();},_0x22f39c=(_0x2e9e0b,_0x3909a1)=>{var _0x37f4fa=_0x2e7b75;let _0x25ce43=_0x1025b5['ts'][_0x3909a1];if(delete _0x1025b5['ts'][_0x3909a1],_0x25ce43){let _0x282fa3=_0x6e38ae(_0x25ce43,_0x4abd16());_0x1a5bfa(_0xe60b39(_0x37f4fa(0xac),_0x2e9e0b,_0x3bf630(),_0x4cb23d,[_0x282fa3],_0x3909a1));}},_0x56f609=_0x27033c=>_0x1f57ea=>{var _0x4370b6=_0x2e7b75;try{_0xc22f1f(_0x1f57ea),_0x27033c(_0x1f57ea);}finally{_0x2c791c[_0x4370b6(0x108)][_0x4370b6(0xac)]=_0x27033c;}},_0x3b8a89=_0x61b94e=>_0x4f8947=>{var _0x4df500=_0x2e7b75;try{let [_0x445306,_0x599289]=_0x4f8947[_0x4df500(0x111)](_0x4df500(0x11b));_0x22f39c(_0x599289,_0x445306),_0x61b94e(_0x445306);}finally{_0x2c791c[_0x4df500(0x108)]['timeEnd']=_0x61b94e;}};_0x2c791c[_0x2e7b75(0x137)]={'consoleLog':(_0x486e14,_0x5a5f6f)=>{var _0x2abaf8=_0x2e7b75;_0x2c791c['console'][_0x2abaf8(0x16d)]['name']!==_0x2abaf8(0xb0)&&_0x1a5bfa(_0xe60b39(_0x2abaf8(0x16d),_0x486e14,_0x3bf630(),_0x4cb23d,_0x5a5f6f));},'consoleTrace':(_0x1ee243,_0x198f6d)=>{var _0x43fbdc=_0x2e7b75;_0x2c791c[_0x43fbdc(0x108)][_0x43fbdc(0x16d)]['name']!==_0x43fbdc(0xf1)&&_0x1a5bfa(_0xe60b39(_0x43fbdc(0x10c),_0x1ee243,_0x3bf630(),_0x4cb23d,_0x198f6d));},'consoleTime':()=>{var _0x478cdd=_0x2e7b75;_0x2c791c[_0x478cdd(0x108)][_0x478cdd(0xac)]=_0x56f609(_0x2c791c[_0x478cdd(0x108)][_0x478cdd(0xac)]);},'consoleTimeEnd':()=>{var _0xfd2b40=_0x2e7b75;_0x2c791c[_0xfd2b40(0x108)][_0xfd2b40(0x98)]=_0x3b8a89(_0x2c791c[_0xfd2b40(0x108)][_0xfd2b40(0x98)]);},'autoLog':(_0x590589,_0x3d297c)=>{var _0x4d8146=_0x2e7b75;_0x1a5bfa(_0xe60b39(_0x4d8146(0x16d),_0x3d297c,_0x3bf630(),_0x4cb23d,[_0x590589]));},'autoLogMany':(_0x566e85,_0xf5c048)=>{var _0x52c265=_0x2e7b75;_0x1a5bfa(_0xe60b39(_0x52c265(0x16d),_0x566e85,_0x3bf630(),_0x4cb23d,_0xf5c048));},'autoTrace':(_0x5f4ae6,_0x20adca)=>{var _0x38ab4d=_0x2e7b75;_0x1a5bfa(_0xe60b39(_0x38ab4d(0x10c),_0x20adca,_0x3bf630(),_0x4cb23d,[_0x5f4ae6]));},'autoTraceMany':(_0x507d93,_0x571933)=>{var _0x3e3a5d=_0x2e7b75;_0x1a5bfa(_0xe60b39(_0x3e3a5d(0x10c),_0x507d93,_0x3bf630(),_0x4cb23d,_0x571933));},'autoTime':(_0x1cf37e,_0x55e7c9,_0x7038ce)=>{_0xc22f1f(_0x7038ce);},'autoTimeEnd':(_0x6327fb,_0x3c032c,_0x44b6b6)=>{_0x22f39c(_0x3c032c,_0x44b6b6);},'coverage':_0x20742f=>{var _0x2d0d6e=_0x2e7b75;_0x1a5bfa({'method':_0x2d0d6e(0xf5),'version':_0x99bca4,'args':[{'id':_0x20742f}]});}};let _0x1a5bfa=b(_0x2c791c,_0x715769,_0x35b369,_0x5602b0,_0x4260ca,_0x2457d4),_0x4cb23d=_0x2c791c[_0x2e7b75(0xec)];return _0x2c791c[_0x2e7b75(0x137)];})(globalThis,_0x39c404(0xf9),_0x39c404(0x131),\\\"c:\\\\\\\\Users\\\\\\\\axell\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\wallabyjs.console-ninja-1.0.267\\\\\\\\node_modules\\\",_0x39c404(0xfb),'1.0.0',_0x39c404(0xd4),[\\\"localhost\\\",\\\"127.0.0.1\\\",\\\"example.cypress.io\\\",\\\"LaptopOfAxell\\\",\\\"10.201.21.181\\\"],_0x39c404(0x140),_0x39c404(0x159));\");\n  } catch (e) {}\n}\n; /* istanbul ignore next */\nfunction oo_oo(i) {\n  for (var _len = arguments.length, v = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    v[_key - 1] = arguments[_key];\n  }\n  try {\n    oo_cm().consoleLog(i, v);\n  } catch (e) {}\n  return v;\n}\n; /* istanbul ignore next */\nfunction oo_tr(i) {\n  for (var _len2 = arguments.length, v = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    v[_key2 - 1] = arguments[_key2];\n  }\n  try {\n    oo_cm().consoleTrace(i, v);\n  } catch (e) {}\n  return v;\n}\n; /* istanbul ignore next */\nfunction oo_ts() {\n  try {\n    oo_cm().consoleTime();\n  } catch (e) {}\n}\n; /* istanbul ignore next */\nfunction oo_te() {\n  try {\n    oo_cm().consoleTimeEnd();\n  } catch (e) {}\n}\n; /*eslint unicorn/no-abusive-eslint-disable:,eslint-comments/disable-enable-pair:,eslint-comments/no-unlimited-disable:,eslint-comments/no-aggregating-enable:,eslint-comments/no-duplicate-disable:,eslint-comments/no-unused-disable:,eslint-comments/no-unused-enable:,*/\n\n//# sourceURL=webpack://server-client/./src/tab-src/dashboard.js?");

/***/ }),

/***/ "./src/utils/class/apiDto.js":
/*!***********************************!*\
  !*** ./src/utils/class/apiDto.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProductRequestHistoryDto: () => (/* binding */ ProductRequestHistoryDto)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar ProductRequestHistoryDto = /*#__PURE__*/_createClass(\n/**\r\n *\r\n * @param {Number} pinnacleItemTypeId\r\n * @param {String} partTypeCode\r\n * @param {String} partTypeFriendlyName\r\n * @param {String} interchangeNumber\r\n * @param {String} interchangeVersion\r\n * @param {Number} totalNumberOfRequests\r\n * @param {Number} totalNumberOfNotFoundRequests\r\n * @param {Number} totalNumberOfUnitsSold\r\n * @param {String} vehicleManufacturers\r\n * @param {String} vehicleModels\r\n * @param {String} vehicleIdentificationNumbers\r\n * @param {String} interchangeDescriptions\r\n * @param {String} productStockNumber\r\n * @param {String} altIndexNumber\r\n * @param {String} vendorName\r\n * @param {Number} averageConditionPrice\r\n * @param {Number} costPrice\r\n */\nfunction ProductRequestHistoryDto(pinnacleItemTypeId, partTypeCode, partTypeFriendlyName, interchangeNumber, interchangeVersion, totalNumberOfRequests, totalNumberOfNotFoundRequests, totalNumberOfUnitsSold, vehicleManufacturers, vehicleModels, vehicleIdentificationNumbers, interchangeDescriptions, productStockNumber, altIndexNumber, vendorName, averageConditionPrice, costPrice) {\n  _classCallCheck(this, ProductRequestHistoryDto);\n  this.pinnacleItemTypeId = pinnacleItemTypeId;\n  this.partTypeCode = partTypeCode;\n  this.partTypeFriendlyName = partTypeFriendlyName;\n  this.interchangeNumber = interchangeNumber;\n  this.interchangeVersion = interchangeVersion;\n  this.totalNumberOfRequests = totalNumberOfRequests;\n  this.totalNumberOfNotFoundRequests = totalNumberOfNotFoundRequests;\n  this.totalNumberOfUnitsSold = totalNumberOfUnitsSold;\n  this.vehicleManufacturers = vehicleManufacturers;\n  this.vehicleModels = vehicleModels;\n  this.vehicleIdentificationNumbers = vehicleIdentificationNumbers;\n  this.interchangeDescriptions = interchangeDescriptions;\n  this.productStockNumber = productStockNumber;\n  this.altIndexNumber = altIndexNumber;\n  this.vendorName = vendorName;\n  this.averageConditionPrice = averageConditionPrice;\n  this.costPrice = costPrice;\n  this.researchIdentifier = \"\";\n});\n\n//# sourceURL=webpack://server-client/./src/utils/class/apiDto.js?");

/***/ }),

/***/ "./src/utils/html-utils.js":
/*!*********************************!*\
  !*** ./src/utils/html-utils.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exitPopUpForm: () => (/* binding */ exitPopUpForm),\n/* harmony export */   hideLoadingScreen: () => (/* binding */ hideLoadingScreen),\n/* harmony export */   hidePopUpForm: () => (/* binding */ hidePopUpForm),\n/* harmony export */   selectTab: () => (/* binding */ selectTab),\n/* harmony export */   showAlert: () => (/* binding */ showAlert),\n/* harmony export */   showLoadingScreen: () => (/* binding */ showLoadingScreen),\n/* harmony export */   showPopUpForm: () => (/* binding */ showPopUpForm)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var datatables_net_dt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! datatables.net-dt */ \"./node_modules/datatables.net-dt/js/dataTables.dataTables.mjs\");\n\n\n\n/**\r\n * Shows Alert message by appending or unhiding div with alert class\r\n * @param {String} message Alert message shown (can have html inside)\r\n * @returns {void}\r\n */\nfunction showAlert(message) {\n  // Check if alert has been made before\n  if (!jquery__WEBPACK_IMPORTED_MODULE_0__(\".alert\").length) {\n    jquery__WEBPACK_IMPORTED_MODULE_0__(\"body\").append(\"\\n          <div class=\\\"alert\\\">\\n            <span class=\\\"closebtn\\\" onclick=\\\"this.parentElement.style.display='none';\\\">&times;</span> \\n            <div id=AlertMessage>\".concat(message, \"</div>\\n          </div>\"));\n  }\n  // Show previously made alert\n  else if (jquery__WEBPACK_IMPORTED_MODULE_0__(\".alert\").is(\":hidden\")) {\n    jquery__WEBPACK_IMPORTED_MODULE_0__(\"#AlertMessage\").html(message);\n    jquery__WEBPACK_IMPORTED_MODULE_0__(\".alert\").show();\n  } else {\n    jquery__WEBPACK_IMPORTED_MODULE_0__(\"#AlertMessage\").html(message);\n  }\n}\n\n/**\r\n * Shows or unhides Pop-up form, disable screen besides form\r\n * @param {String} type Type of form to show\r\n * @param {String} title Title of the form\r\n * @returns {void}\r\n */\nfunction showPopUpForm(type, title) {\n  jquery__WEBPACK_IMPORTED_MODULE_0__('h2[name=\"formTitle\"]').text(title);\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#popupForm\").show();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\".concat(type, \"Form\")).show();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#darkLayer\").css(\"position\", \"fixed\");\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#darkLayer\").show();\n}\n\n/**\r\n * Hides Pop-up form, enable screen besides form\r\n * @param {String} type Type of form to show\r\n * @returns\r\n */\nfunction hidePopUpForm(type) {\n  // Finally hide Form from user\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#popupForm\").hide();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\".concat(type, \"Form\")).hide();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\".alert\").hide();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#darkLayer\").hide();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#darkLayer\").css(\"position\", \"absolute\");\n}\n\n/**\r\n * Exits pop-up form and resets all input in form\r\n * @param {String} type Type of form to exit\r\n * @returns\r\n */\nfunction exitPopUpForm(type) {\n  hidePopUpForm(type);\n\n  // Reset textboxes' and selectboxes' values\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\".concat(type, \"Form input[type=\\\"text\\\"]\")).val(\"\");\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\".concat(type, \"Form select\")).val(\"\");\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\".concat(type, \"Form input[type=\\\"checkbox\\\"]\")).prop(\"checked\", false);\n}\n\n/**\r\n * Show loading screen when method is called\r\n * @param {String} loadingMessage Message to display when loading\r\n */\nfunction showLoadingScreen(loadingMessage) {\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#darkLayer\").css(\"position\", \"fixed\");\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#darkLayer\").show();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\".loading\").show();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\".loading p\").text(loadingMessage);\n}\n\n/**\r\n * Hides loading screen, use this after showLoadingScreen is called\r\n */\nfunction hideLoadingScreen() {\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#darkLayer\").hide();\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#darkLayer\").css(\"position\", \"absolute\");\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\".loading\").hide();\n}\n\n/**\r\n * Swithces tab on the layout.html level by loading HTML into #content\r\n * @param {String} tabIdSelected Tab's ID to switch to\r\n * @returns {void}\r\n */\nfunction selectTab(tabIdSelected) {\n  var currentTab = jquery__WEBPACK_IMPORTED_MODULE_0__(\".tab-selected\").attr(\"id\");\n  if (currentTab) {\n    jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\" + currentTab + \"-name\").removeClass(\"tab-name-selected\");\n    jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\" + currentTab + \"-icon\").removeClass(\"tab-icon-selected\");\n    jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\" + currentTab).removeClass(\"tab-selected\");\n  }\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\" + tabIdSelected + \"-name\").addClass(\"tab-name-selected\");\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\" + tabIdSelected + \"-icon\").addClass(\"tab-icon-selected\");\n  jquery__WEBPACK_IMPORTED_MODULE_0__(\"#\" + tabIdSelected).addClass(\"tab-selected\");\n  // remove any saved changes on Session Storage\n  sessionStorage.removeItem(\"savedChanges\");\n\n  // Clear all search function in DataTable\n  jquery__WEBPACK_IMPORTED_MODULE_0__.fn.dataTable.ext.search.length = 0;\n  var content = jquery__WEBPACK_IMPORTED_MODULE_0__(\"#content\");\n  switch (tabIdSelected) {\n    case \"tab0\":\n      jquery__WEBPACK_IMPORTED_MODULE_0__(\"#content\").load(\"../html/dashboard.html\");\n      break;\n    case \"tab1\":\n      jquery__WEBPACK_IMPORTED_MODULE_0__(\"#content\").load(\"../html/product.html\");\n      break;\n    case \"tab2\":\n      jquery__WEBPACK_IMPORTED_MODULE_0__(\"#content\").load(\"../html/stats.html\");\n      break;\n    case \"tab3\":\n      jquery__WEBPACK_IMPORTED_MODULE_0__(\"#content\").load(\"../html/cost&Vol.html\");\n      break;\n    case \"tab4\":\n      jquery__WEBPACK_IMPORTED_MODULE_0__(\"#content\").load(\"../html/altIndex.html\");\n      break;\n    case \"tab5\":\n      jquery__WEBPACK_IMPORTED_MODULE_0__(\"#content\").load(\"../html/ebay.html\");\n      break;\n    default:\n      content.html(\"\\n            <h1>Welcome to Empty Tab</h1>\\n            <p>This is the content of current Empty Tab with the wrong tab ID.</p>\\n          \");\n      break;\n  }\n}\n\n//# sourceURL=webpack://server-client/./src/utils/html-utils.js?");

/***/ }),

/***/ "./src/utils/socket-utils.js":
/*!***********************************!*\
  !*** ./src/utils/socket-utils.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/esm/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Socket = /*#__PURE__*/_createClass(function Socket() {\n  _classCallCheck(this, Socket);\n  if (!Socket.instance) {\n    this.socket = socket_io_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].connect(\"http://localhost:5000\");\n    Socket.instance = this;\n  }\n  return Socket.instance;\n});\nvar instance = new Socket();\nObject.freeze(instance);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instance.socket);\n\n//# sourceURL=webpack://server-client/./src/utils/socket-utils.js?");

/***/ }),

/***/ "./src/utils/tab-utils.js":
/*!********************************!*\
  !*** ./src/utils/tab-utils.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNewProductRequestHistory: () => (/* binding */ addNewProductRequestHistory),\n/* harmony export */   calculateAUD: () => (/* binding */ calculateAUD),\n/* harmony export */   getAltIndexValueDictionary: () => (/* binding */ getAltIndexValueDictionary),\n/* harmony export */   getProductIdentifier: () => (/* binding */ getProductIdentifier),\n/* harmony export */   getWeekNumber: () => (/* binding */ getWeekNumber),\n/* harmony export */   isFloat: () => (/* binding */ isFloat),\n/* harmony export */   isFloatValue: () => (/* binding */ isFloatValue),\n/* harmony export */   productSelectedChanged: () => (/* binding */ productSelectedChanged),\n/* harmony export */   saveChanges: () => (/* binding */ saveChanges),\n/* harmony export */   toTitleCase: () => (/* binding */ toTitleCase),\n/* harmony export */   updateChanges: () => (/* binding */ updateChanges),\n/* harmony export */   updateHasChanges: () => (/* binding */ updateHasChanges),\n/* harmony export */   updateObject: () => (/* binding */ updateObject),\n/* harmony export */   updateProductRequestHistory: () => (/* binding */ updateProductRequestHistory)\n/* harmony export */ });\n/* harmony import */ var _html_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html-utils.js */ \"./src/utils/html-utils.js\");\n/* harmony import */ var _class_apiDto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./class/apiDto.js */ \"./src/utils/class/apiDto.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n/**\r\n * Refresh tab when product is updated\r\n * @param {String} newId Product ID on search bar\r\n * @param {String[]} idList Complete list of all products to compare against\r\n * @param {String} currentId Current product ID selected\r\n * @param {String} tabId Current tab ID selected\r\n * @param {Boolean} showError Show Alert error message when true\r\n */\nfunction productSelectedChanged(newId, idList, currentId, tabId) {\n  var showError = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var hasChanges = sessionStorage.getItem(\"hasChanges\") == \"true\";\n  jquery__WEBPACK_IMPORTED_MODULE_2__(\"#productSelected\").attr(\"oldvalue\", currentId);\n  if (!idList.includes(newId) || newId == currentId) {\n    if (!showError) return;\n    (0,_html_utils_js__WEBPACK_IMPORTED_MODULE_0__.showAlert)(\"Error: Product ID \".concat(newId, \" not found\"));\n    jquery__WEBPACK_IMPORTED_MODULE_2__(\"#productSelected\").val(jquery__WEBPACK_IMPORTED_MODULE_2__(\"#productSelected\").attr(\"oldvalue\"));\n    return;\n  }\n  if (hasChanges) {\n    jquery__WEBPACK_IMPORTED_MODULE_2__(\"#searchConfirmation.confirmation\").show();\n    jquery__WEBPACK_IMPORTED_MODULE_2__(\"#darkLayer\").show();\n    jquery__WEBPACK_IMPORTED_MODULE_2__(\"#darkLayer\").css(\"position\", \"fixed\");\n    return;\n  }\n  sessionStorage.setItem(\"productIDSelected\", newId);\n  (0,_html_utils_js__WEBPACK_IMPORTED_MODULE_0__.selectTab)(tabId);\n}\n\n/**\r\n * Convert local currency to AUD currency\r\n * @param {String} costCurrency currency name\r\n * @param {Number} amount Amount in local currency\r\n * @returns {number} Amount converted to AUD\r\n */\nfunction calculateAUD(costCurrency, amount) {\n  var rates = JSON.parse(localStorage.getItem(\"currencyRate\"))[\"data\"];\n  if (!rates.hasOwnProperty(costCurrency))\n    // when currency not Found\n    return \"<i>Cost Currency \".concat(costCurrency, \"</i> not found and cannot be converted.\\n\");\n  return parseFloat((amount * 1 / rates[costCurrency]).toFixed(2));\n}\n\n/**\r\n * Check if value in row is float and adds error to the error list\r\n * @param {Dictionary} row each dictionary object from json\r\n * @param {String} key name of the key to check\r\n * @param {String[]} errorMessageList error message list to add if there is error\r\n */\nfunction isFloatValue(row, key, errorMessageList) {\n  if (!isFloat(row[key])) {\n    errorMessageList.push(\"Header \".concat(key, \" - value \").concat(row[key], \" has a wrong format\"));\n  }\n}\n\n/**\r\n * To check if string value(s) is a valid float.\r\n * @param {String} args string values to be validated\r\n * @returns {Boolean} True if the string is only a float, false otherwise\r\n */\nfunction isFloat() {\n  var isAllFloat = true;\n  var args = Array.prototype.slice.call(arguments);\n  args.forEach(function (str) {\n    isAllFloat && (isAllFloat = /^\\s*[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?\\s*$/.test(str));\n  });\n  return isAllFloat;\n}\n\n/**\r\n * For a given date, get the ISO week number\r\n * @param {Date} date Date object to get the week number from\r\n * @returns the ISO week number\r\n */\nfunction getWeekNumber(date) {\n  date.setMilliseconds(0);\n  var dayNum = date.getUTCDay() || 7;\n  date.setUTCDate(date.getUTCDate() + 4 - dayNum);\n  var yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));\n  return Math.ceil(((date - yearStart) / 86400000 + 1) / 7);\n}\n\n/**\r\n *\r\n * @param {str} str string to capitalize in title format\r\n * @returns\r\n */\nfunction toTitleCase(str) {\n  return (str !== null && str !== void 0 ? str : \"\").replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\n/**\r\n * Get Unique list of all researchIdentifier and productStockNumber\r\n * @param {ProductRequestHistoryDto[]} productDtoArray Array of ProductRequestHistoryDto as source of data\r\n * @returns {String[]} Unique list of all researchIdentifier and productStockNumber\r\n */\nfunction getProductIdentifier(productDtoArray) {\n  var researchIdentifiers = _toConsumableArray(productDtoArray.map(function (product) {\n    return product.researchIdentifier;\n  }));\n  var productStockNumbers = _toConsumableArray(productDtoArray.map(function (product) {\n    return product.productStockNumber;\n  }));\n  return _toConsumableArray(new Set([].concat(_toConsumableArray(researchIdentifiers), _toConsumableArray(productStockNumbers)))).filter(function (str) {\n    return str != null && str.trim() !== \"\";\n  });\n}\n\n/**\r\n * Get Alternate Index Dictiornary for their ID and Name\r\n * @param {ProductRequestHistoryDto[]} productDtoArray Array of ProductRequestHistoryDto as source of data\r\n * @return { Dictionary} Dictionary containing Alt Index Number as Keys and Name as Values\r\n */\nfunction getAltIndexValueDictionary(productDtoArray) {\n  return productDtoArray.reduce(function (result, product) {\n    if (product.altIndexNumber !== null && product.vendorName !== null) {\n      result[product.altIndexNumber] = product.vendorName;\n    }\n    return result;\n  }, {});\n}\n\n/**\r\n * Update object's values with the given updates's key value pair\r\n * @param {Object} object object to be updated\r\n * @param {Object} updates key value pair to update with\r\n * @returns {Object} new object with updated values\r\n */\nfunction updateObject(object, updates) {\n  Object.entries(updates).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    object[key] = value;\n  });\n  return object;\n}\n\n/**\r\n * Set Session Storage's \"hasChanges\" to hasChange parameter\r\n * @param {Boolean} hasChange Tab's ID to switch\r\n * @returns {}\r\n */\nfunction updateHasChanges(hasChange) {\n  // Change hasChanges value in session storage\n  sessionStorage.setItem(\"hasChanges\", hasChange);\n\n  // Enable or disable the save button based on hasChange value\n  jquery__WEBPACK_IMPORTED_MODULE_2__(\"button[name=saveBtn]\").prop(\"disabled\", !hasChange);\n}\n\n/**\r\n * Save changes made to Session Storage's \"savedChanges\" in JSON Format\r\n * @param {Map[]} change Map Array of changes to be saved\r\n */\nfunction updateChanges(change) {\n  var _storedChanges;\n  var storedChanges = sessionStorage.getItem(\"savedChanges\") || \"[]\";\n  storedChanges = JSON.parse(storedChanges).map(function (array) {\n    return new Map(array);\n  });\n  (_storedChanges = storedChanges).push.apply(_storedChanges, _toConsumableArray(change));\n  sessionStorage.setItem(\"savedChanges\", JSON.stringify(storedChanges.map(function (map) {\n    return Array.from(map.entries());\n  })));\n}\n\n/**\r\n * Save changes made to Server-side\r\n * Session Storage's \"savedChanges\" will be cleared\r\n * @param {Socket<DefaultEventsMap, DefaultEventsMap>} socket\r\n * @returns {Promise<boolean>} true if successful, false otherwise\r\n */\nfunction saveChanges(_x) {\n  return _saveChanges.apply(this, arguments);\n}\n\n/**\r\n * Call emit function to update the database\r\n * @param {Socket<DefaultEventsMap, DefaultEventsMap>} socket\r\n * @param {Map[]} changes array of changes to update\r\n * @returns {Promise<boolean>} true if all works well, false when there is an error\r\n */\nfunction _saveChanges() {\n  _saveChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(socket) {\n    var storedChanges, savedChanges, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          storedChanges = sessionStorage.getItem(\"savedChanges\");\n          savedChanges = JSON.parse(storedChanges).map(function (array) {\n            return new Map(array);\n          });\n          if (!(!storedChanges || savedChanges.size === 0)) {\n            _context.next = 5;\n            break;\n          }\n          (0,_html_utils_js__WEBPACK_IMPORTED_MODULE_0__.showAlert)(\"<strong>FATAL Error!</strong> No changes were found, please contact the administrator\");\n          return _context.abrupt(\"return\", false);\n        case 5:\n          _context.prev = 5;\n          _context.next = 8;\n          return updateDataOnDatabase(socket, savedChanges);\n        case 8:\n          result = _context.sent;\n          sessionStorage.removeItem(\"savedChanges\");\n          return _context.abrupt(\"return\", result);\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](5);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", false);\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[5, 13]]);\n  }));\n  return _saveChanges.apply(this, arguments);\n}\nfunction updateDataOnDatabase(_x2, _x3) {\n  return _updateDataOnDatabase.apply(this, arguments);\n}\n/**\r\n * Update product request history with new products\r\n * @param {Object[]} newProductArray - Array of New Product from Database\r\n * @param {Object[]} productArray - Array of Product from Database\r\n */\nfunction _updateDataOnDatabase() {\n  _updateDataOnDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(socket, changes) {\n    var serializedChanges;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          serializedChanges = changes.map(function (map) {\n            return JSON.stringify(Array.from(map.entries()));\n          });\n          return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n            socket.emit(\"update database\", serializedChanges, function (ackData) {\n              if (ackData.status === \"ERROR\") {\n                (0,_html_utils_js__WEBPACK_IMPORTED_MODULE_0__.showAlert)(\"<strong>FATAL Error!</strong> Failed to save to the database, please contact the administrator:<br>\".concat(ackData.errors.map(function (err) {\n                  return \"\".concat(err.name, \": \").concat(err.message);\n                }).join(\"<br>\")));\n                reject(false);\n              } else {\n                resolve(true);\n              }\n            });\n          }));\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _updateDataOnDatabase.apply(this, arguments);\n}\nfunction updateProductRequestHistory(newProductArray, productArray) {\n  var productRequestHistoryArray = JSON.parse(sessionStorage.getItem(\"productRequestHistory\"));\n  newProductArray.forEach(function (product) {\n    if (!productRequestHistoryArray.find(function (p) {\n      return p.researchIdentifier === product.ResearchID;\n    })) {\n      var productDetailMatch = productArray.find(function (p) {\n        return p.ResearchID === product.ResearchID;\n      });\n      var newProduct = new _class_apiDto_js__WEBPACK_IMPORTED_MODULE_1__.ProductRequestHistoryDto(null, product.PartTypeCode, product.PartType, product.IcNumber, \"\", product.Request, product.RequestNF, product.UnitSold, product.Make, product.Model, \"\", product.IcDescription, productDetailMatch ? productDetailMatch.SKU : \"\", \"\", \"\", product.AveragePrice, 0);\n      newProduct.researchIdentifier = product.ResearchID;\n      productRequestHistoryArray.push(_objectSpread({}, newProduct));\n    }\n  });\n  sessionStorage.setItem(\"productRequestHistory\", JSON.stringify(productRequestHistoryArray));\n}\nfunction addNewProductRequestHistory(newProduct) {\n  var productRequestHistoryArray = JSON.parse(sessionStorage.getItem(\"productRequestHistory\"));\n  var productToAdd = new _class_apiDto_js__WEBPACK_IMPORTED_MODULE_1__.ProductRequestHistoryDto(\"\", newProduct.TypeCode, newProduct.Type, newProduct.Num, \"\", 0, 0, 0, newProduct.Make, newProduct.Model, \"\", newProduct.Desc, newProduct.Sku, \"\", \"\", 0, 0);\n  productToAdd.researchIdentifier = newProduct.ResearchID;\n  productRequestHistoryArray.push(_objectSpread({}, productToAdd));\n  sessionStorage.setItem(\"productRequestHistory\", JSON.stringify(productRequestHistoryArray));\n}\n\n//# sourceURL=webpack://server-client/./src/utils/tab-utils.js?");

/***/ }),

/***/ "./src/utils/table-utils.js":
/*!**********************************!*\
  !*** ./src/utils/table-utils.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmptyRow: () => (/* binding */ createEmptyRow),\n/* harmony export */   exportDataTable: () => (/* binding */ exportDataTable),\n/* harmony export */   findMissingColumnHeader: () => (/* binding */ findMissingColumnHeader),\n/* harmony export */   readFileToJson: () => (/* binding */ readFileToJson)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var datatables_net__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! datatables.net */ \"./node_modules/datatables.net/js/jquery.dataTables.mjs\");\n/* harmony import */ var _utils_tableExport_utils_tableExport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/tableExport-utils/tableExport.js */ \"./src/utils/tableExport-utils/tableExport.js\");\n/* harmony import */ var _html_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./html-utils.js */ \"./src/utils/html-utils.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n/**\r\n * Gets empty rows for a html table based on rows and columns\r\n * @param {Number} rowQuantity How many empty rows to create\r\n * @param {Number} [columnQuantity=1] How many column are there in the table, default is 1\r\n * @returns {String} html \\<tr\\> rows\r\n */\nfunction createEmptyRow(rowQuantity) {\n  var columnQuantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return (\"<tr>\" + \"<td></td>\".repeat(columnQuantity) + \"</tr>\").repeat(rowQuantity);\n}\n\n/**\r\n * Find first missing header inside JSON Sheet\r\n * @param {Dictionary} rowObject First instance/element of JSON sheet (needs to contain headers)\r\n * @param {String[]} arrayHeader Array of header names to check\r\n * @returns {String} missing header name when found, otherwise empty string\r\n */\nfunction findMissingColumnHeader(rowObject, arrayHeader) {\n  var _iterator = _createForOfIteratorHelper(arrayHeader),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var header = _step.value;\n      if (header == null) {\n        continue;\n      }\n      if (!rowObject.hasOwnProperty(header)) {\n        return header;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return \"\";\n}\n\n/**\r\n * Read XLSX and XLS file to JSON representation format/\r\n * @param {String} filenameInput HTML file input Id\r\n * @param {String[] | String[String[]]} columnHeader List of Column Header names or List of Worksheet's List of header (when located in different worksheet)\r\n * @param {Boolean} worksheetSeperated Defaults to false\r\n * @param {String[]} worksheetName  Defaults to empty list\r\n * @returns {Promise<Map> | undefined} Excel Worksheet data in JSON format when resolved, if fail to read or rejects returns undefined\r\n */\nfunction readFileToJson(_x, _x2) {\n  return _readFileToJson.apply(this, arguments);\n}\n\n/**\r\n * Export all rows in DataTable to Xlsx file ~ more rows make take more time\r\n * @param {String} tableID HTML Table ID to export\r\n * @param {String} dataTableOptions DataTable options parameters\r\n * @param {String} fileName File name to export\r\n * @param {Boolean} isEmptyData Defaults to False ~ Flag indicating whether table is empty\r\n * @param {String[]}\r\n */\nfunction _readFileToJson() {\n  _readFileToJson = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(filenameInput, columnHeader) {\n    var worksheetSeperated,\n      worksheetName,\n      FILE,\n      READER,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          worksheetSeperated = _args.length > 2 && _args[2] !== undefined ? _args[2] : false;\n          worksheetName = _args.length > 3 && _args[3] !== undefined ? _args[3] : [];\n          // Read file\n          FILE = jquery__WEBPACK_IMPORTED_MODULE_0__(filenameInput).prop(\"files\");\n          READER = new FileReader();\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            READER.onloadend = function () {\n              var FILE_DATA = new Uint8Array(READER.result);\n              var WORKBOOK = XLSX.read(FILE_DATA, {\n                type: \"array\"\n              });\n\n              // Assuming the first sheet of the workbook is the relevant one\n              if (!worksheetSeperated) {\n                var SHEET_NAME = WORKBOOK.SheetNames[0];\n                var SHEET = WORKBOOK.Sheets[SHEET_NAME];\n                // Get all header cell location\n                var headerCell = [];\n                // const SHEET_ARRAY = XLSX.utils.sheet_to_json(SHEET);\n                for (var cellAddress in SHEET) if (columnHeader.includes(String(SHEET[cellAddress].v))) {\n                  headerCell.push(cellAddress);\n                }\n                // sort for index 0 to be the most top left cell\n                headerCell.sort();\n                if (headerCell.length == 0) {\n                  resolve([{\n                    no_header_found: true\n                  }]);\n                  return;\n                }\n\n                //encode range\n                var range = XLSX.utils.decode_range(SHEET[\"!ref\"]);\n                range.s = XLSX.utils.decode_cell(headerCell[0]);\n                var new_range = XLSX.utils.encode_range(range);\n                // Fix with this solution https://github.com/SheetJS/sheetjs/issues/728\n                resolve(XLSX.utils.sheet_to_json(SHEET, {\n                  range: new_range\n                }));\n              } else {\n                var jsonData = [];\n                var errorMessage = [];\n                worksheetName.forEach(function (sheetName, index) {\n                  if (!WORKBOOK.SheetNames.includes(sheetName)) {\n                    errorMessage.push(\"Worksheet \\\"\".concat(sheetName, \"\\\" not found.\"));\n                    return;\n                  }\n                  var worksheet = WORKBOOK.Sheets[sheetName];\n                  var worksheetData = XLSX.utils.sheet_to_json(worksheet, {\n                    header: columnHeader[index]\n                  });\n                  jsonData[sheetName] = worksheetData;\n                });\n\n                // If there is one or more error messages\n                if (errorMessage.length) {\n                  (0,_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.showAlert)(\"<strong>ERROR!</strong> \".concat(errorMessage.join(\".\\n\")));\n                  resolve(undefined);\n                  return;\n                }\n                // Combine all worksheet data into one JSON object\n                // Initialize an empty array to store the combined rows\n                combinedData = [];\n\n                // Iterate through the properties of the object, and find max row in object's property\n                var properties = Object.keys(jsonData);\n                var maxRows = Math.max.apply(Math, _toConsumableArray(properties.map(function (prop) {\n                  return jsonData[prop].length;\n                })));\n\n                // Combine all properties into one JSON object\n                for (var i = 0; i < maxRows; i++) {\n                  var combinedRow = {};\n                  var _iterator2 = _createForOfIteratorHelper(properties),\n                    _step2;\n                  try {\n                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                      var prop = _step2.value;\n                      var propArray = jsonData[prop];\n                      // Use an empty object if the property array is shorter\n\n                      var propObj = propArray[i] || {};\n                      combinedRow[prop] = propObj[prop];\n                    }\n                  } catch (err) {\n                    _iterator2.e(err);\n                  } finally {\n                    _iterator2.f();\n                  }\n                  combinedData.push(combinedRow);\n                }\n\n                // Clean up combinedData\n                combinedData.forEach(function (obj) {\n                  // Delete properties that are undefined\n                  Object.keys(obj).forEach(function (key) {\n                    return obj[key] === undefined && delete obj[key];\n                  });\n                });\n                resolve(combinedData);\n              }\n            };\n            READER.onerror = function () {\n              (0,_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.showAlert)(\"<strong>Error!</strong> File fail to load: \".concat(fileReader.error));\n              reject(undefined);\n            };\n            READER.readAsArrayBuffer(FILE[0]);\n          }));\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _readFileToJson.apply(this, arguments);\n}\nfunction exportDataTable(tableID, fileName) {\n  var isEmptyData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var worksheetNames = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  if (isEmptyData) {\n    (0,_html_utils_js__WEBPACK_IMPORTED_MODULE_3__.showAlert)(\"<strong>Error!</strong> No data found in table.\");\n  } else {\n    var previousPageLength = jquery__WEBPACK_IMPORTED_MODULE_0__(tableID).DataTable().page.len();\n    // redraw table with all row showm\n    jquery__WEBPACK_IMPORTED_MODULE_0__(tableID).DataTable().page.len(-1).draw(false);\n    var exportData = {\n      type: \"excel\",\n      fileName: fileName,\n      mso: {\n        fileFormat: \"xlsx\"\n      },\n      ignoreRow: [\"#searchRow\"]\n    };\n    if (worksheetNames.length > 0) exportData.mso[\"worksheetName\"] = worksheetNames;\n    // Export HTML table not Datatable\n    jquery__WEBPACK_IMPORTED_MODULE_0__(tableID).tableExport(exportData);\n    jquery__WEBPACK_IMPORTED_MODULE_0__(tableID).DataTable().page.len(previousPageLength).draw(false);\n  }\n}\nfunction delay(milliseconds) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, milliseconds);\n  });\n}\n\n//# sourceURL=webpack://server-client/./src/utils/table-utils.js?");

/***/ }),

/***/ "./src/utils/tableExport-utils/tableExport.js":
/*!****************************************************!*\
  !*** ./src/utils/tableExport-utils/tableExport.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\r\n * @preserve tableExport.jquery.plugin\r\n *\r\n * Version 1.28.0\r\n *\r\n * Copyright (c) 2015-2023 hhurz,\r\n *   https://github.com/hhurz/tableExport.jquery.plugin\r\n *\r\n * Based on https://github.com/kayalshri/tableExport.jquery.plugin\r\n *\r\n * Licensed under the MIT License\r\n **/\n\n\n\"use strict\";\n(function ($) {\n  $.fn.tableExport = function (options) {\n    var docData;\n    var defaults = {\n      csvEnclosure: '\"',\n      csvSeparator: \",\",\n      csvUseBOM: true,\n      date: {\n        html: \"dd/mm/yyyy\" // Date format used in html source. Supported placeholders: dd, mm, yy, yyyy and a arbitrary single separator character\n      },\n\n      displayTableName: false,\n      // Deprecated\n      escape: false,\n      // Deprecated\n      exportHiddenCells: false,\n      // true = speed up export of large tables with hidden cells (hidden cells will be exported !)\n      fileName: \"tableExport\",\n      htmlContent: false,\n      htmlHyperlink: \"content\",\n      // Export the 'content' or the 'href' link of <a> tags unless onCellHtmlHyperlink is not defined\n      ignoreColumn: [],\n      ignoreRow: [],\n      jsonScope: \"all\",\n      // One of 'head', 'data', 'all'\n      jspdf: {\n        // jsPDF / jsPDF-AutoTable related options\n        orientation: \"p\",\n        unit: \"pt\",\n        format: \"a4\",\n        // One of jsPDF page formats or 'bestfit' for automatic paper format selection\n        margins: {\n          left: 20,\n          right: 10,\n          top: 10,\n          bottom: 10\n        },\n        onDocCreated: null,\n        autotable: {\n          styles: {\n            cellPadding: 2,\n            rowHeight: 12,\n            fontSize: 8,\n            fillColor: 255,\n            // Color value or 'inherit' to use css background-color from html table\n            textColor: 50,\n            // Color value or 'inherit' to use css color from html table\n            fontStyle: \"normal\",\n            // 'normal', 'bold', 'italic', 'bolditalic' or 'inherit' to use css font-weight and font-style from html table\n            overflow: \"ellipsize\",\n            // 'visible', 'hidden', 'ellipsize' or 'linebreak'\n            halign: \"inherit\",\n            // 'left', 'center', 'right' or 'inherit' to use css horizontal cell alignment from html table\n            valign: \"middle\" // 'top', 'middle', or 'bottom'\n          },\n\n          headerStyles: {\n            fillColor: [52, 73, 94],\n            textColor: 255,\n            fontStyle: \"bold\",\n            halign: \"inherit\",\n            // 'left', 'center', 'right' or 'inherit' to use css horizontal header cell alignment from html table\n            valign: \"middle\" // 'top', 'middle', or 'bottom'\n          },\n\n          alternateRowStyles: {\n            fillColor: 245\n          },\n          tableExport: {\n            doc: null,\n            // jsPDF doc object. If set, an already created doc object will be used to export to\n            onAfterAutotable: null,\n            onBeforeAutotable: null,\n            onAutotableText: null,\n            onTable: null,\n            outputImages: true\n          }\n        }\n      },\n      mso: {\n        // MS Excel and MS Word related options\n        fileFormat: \"xlshtml\",\n        // 'xlshtml' = Excel 2000 html format\n        // 'xmlss' = XML Spreadsheet 2003 file format (XMLSS)\n        // 'xlsx' = Excel 2007 Office Open XML format\n        onMsoNumberFormat: null,\n        // Excel 2000 html format only. See readme.md for more information about msonumberformat\n        pageFormat: \"a4\",\n        // Page format used for page orientation\n        pageOrientation: \"portrait\",\n        // portrait, landscape (xlshtml format only)\n        rtl: false,\n        // true = Set worksheet option 'DisplayRightToLeft'\n        styles: [],\n        // E.g. ['border-bottom', 'border-top', 'border-left', 'border-right']\n        worksheetName: \"\",\n        xlsx: {\n          // Specific Excel 2007 XML format settings:\n          formatId: {\n            // XLSX format (id) used to format excel cells. See readme.md: data-tableexport-xlsxformatid\n            date: 14,\n            // The default format id, or a format string (e.g. 'm/d/yy'), or a function(cell, row, col)\n            numbers: 2,\n            // The default Format id, or a format string (e.g. '\\\"T\\\"\\ #0.00'), or a function(cell, row, col)\n            currency: 164 // This id is used by \"data-tableexport-xlsxformatid\" to allow you to export a cell in currency format (see below)\n          },\n\n          format: {\n            currency: \"$#,##0.00;[Red]-$#,##0.00\" // The format string to be used for the export for the currency format\n            // Euro format: '#,##0.00 €;[Red](#,##0.00) €'\n          },\n\n          onHyperlink: null // function($cell, row, col, href, content, hyperlink): Return what to export for hyperlinks\n        }\n      },\n\n      numbers: {\n        html: {\n          decimalMark: \".\",\n          // Decimal mark in html source\n          thousandsSeparator: \",\" // Thousands separator in html source\n        },\n\n        output: {\n          // Set 'output: false' to keep number format of html source in resulting output\n          decimalMark: \".\",\n          // Decimal mark in resulting output\n          thousandsSeparator: \",\" // Thousands separator in resulting output\n        }\n      },\n\n      onAfterSaveToFile: null,\n      // function(data, fileName)\n      onBeforeSaveToFile: null,\n      // saveIt = function(data, fileName, type, charset, encoding): Return false to abort save process\n      onCellData: null,\n      // Text to export = function($cell, row, col, href, cellText, cellType)\n      onCellHtmlData: null,\n      // Text to export = function($cell, row, col, htmlContent)\n      onCellHtmlHyperlink: null,\n      // Text to export = function($cell, row, col, href, cellText)\n      onIgnoreRow: null,\n      // ignoreRow = function($tr, row): Return true to prevent export of the row\n      onTableExportBegin: null,\n      // function() - called when export starts\n      onTableExportEnd: null,\n      // function() - called when export ends\n      outputMode: \"file\",\n      // 'file', 'string', 'base64' or 'window' (experimental)\n      pdfmake: {\n        enabled: false,\n        // true: Use pdfmake as pdf producer instead of jspdf and jspdf-autotable\n        docDefinition: {\n          pageSize: \"A4\",\n          // 4A0,2A0,A{0-10},B{0-10},C{0-10},RA{0-4},SRA{0-4},EXECUTIVE,FOLIO,LEGAL,LETTER,TABLOID\n          pageOrientation: \"portrait\",\n          // 'portrait' or 'landscape'\n          styles: {\n            header: {\n              background: \"#34495E\",\n              color: \"#FFFFFF\",\n              bold: true,\n              alignment: \"center\",\n              fillColor: \"#34495E\"\n            },\n            alternateRow: {\n              fillColor: \"#f5f5f5\"\n            }\n          },\n          defaultStyle: {\n            color: \"#000000\",\n            fontSize: 8,\n            font: \"Roboto\" // Default font is 'Roboto' which needs vfs_fonts.js to be included\n          } // To export arabic characters include mirza_fonts.js _instead_ of vfs_fonts.js\n        },\n\n        // For a chinese font include either gbsn00lp_fonts.js or ZCOOLXiaoWei_fonts.js _instead_ of vfs_fonts.js\n        fonts: {}\n      },\n      preserve: {\n        leadingWS: false,\n        // preserve leading white spaces\n        trailingWS: false // preserve trailing white spaces\n      },\n\n      preventInjection: true,\n      // Prepend a single quote to cell strings that start with =,+,- or @ to prevent formula injection\n      sql: {\n        tableEnclosure: \"`\",\n        // If table name or column names contain any characters except letters, numbers, and\n        columnEnclosure: \"`\" // underscores, usually the name must be delimited by enclosing it in back quotes (`)\n      },\n\n      tbodySelector: \"tr\",\n      tfootSelector: \"tr\",\n      // Set empty ('') to prevent export of tfoot rows\n      theadSelector: \"tr\",\n      tableName: \"Table\",\n      type: \"csv\" // Export format: 'csv', 'tsv', 'txt', 'sql', 'json', 'xml', 'excel', 'doc', 'png' or 'pdf'\n    };\n\n    var pageFormats = {\n      // Size in pt of various paper formats. Adopted from jsPDF.\n      a0: [2383.94, 3370.39],\n      a1: [1683.78, 2383.94],\n      a2: [1190.55, 1683.78],\n      a3: [841.89, 1190.55],\n      a4: [595.28, 841.89],\n      a5: [419.53, 595.28],\n      a6: [297.64, 419.53],\n      a7: [209.76, 297.64],\n      a8: [147.4, 209.76],\n      a9: [104.88, 147.4],\n      a10: [73.7, 104.88],\n      b0: [2834.65, 4008.19],\n      b1: [2004.09, 2834.65],\n      b2: [1417.32, 2004.09],\n      b3: [1000.63, 1417.32],\n      b4: [708.66, 1000.63],\n      b5: [498.9, 708.66],\n      b6: [354.33, 498.9],\n      b7: [249.45, 354.33],\n      b8: [175.75, 249.45],\n      b9: [124.72, 175.75],\n      b10: [87.87, 124.72],\n      c0: [2599.37, 3676.54],\n      c1: [1836.85, 2599.37],\n      c2: [1298.27, 1836.85],\n      c3: [918.43, 1298.27],\n      c4: [649.13, 918.43],\n      c5: [459.21, 649.13],\n      c6: [323.15, 459.21],\n      c7: [229.61, 323.15],\n      c8: [161.57, 229.61],\n      c9: [113.39, 161.57],\n      c10: [79.37, 113.39],\n      dl: [311.81, 623.62],\n      letter: [612, 792],\n      \"government-letter\": [576, 756],\n      legal: [612, 1008],\n      \"junior-legal\": [576, 360],\n      ledger: [1224, 792],\n      tabloid: [792, 1224],\n      \"credit-card\": [153, 243]\n    };\n    var jsPdfThemes = {\n      // Styles for the themes\n      striped: {\n        table: {\n          fillColor: 255,\n          textColor: 80,\n          fontStyle: \"normal\",\n          fillStyle: \"F\"\n        },\n        header: {\n          textColor: 255,\n          fillColor: [41, 128, 185],\n          rowHeight: 23,\n          fontStyle: \"bold\"\n        },\n        body: {},\n        alternateRow: {\n          fillColor: 245\n        }\n      },\n      grid: {\n        table: {\n          fillColor: 255,\n          textColor: 80,\n          fontStyle: \"normal\",\n          lineWidth: 0.1,\n          fillStyle: \"DF\"\n        },\n        header: {\n          textColor: 255,\n          fillColor: [26, 188, 156],\n          rowHeight: 23,\n          fillStyle: \"F\",\n          fontStyle: \"bold\"\n        },\n        body: {},\n        alternateRow: {}\n      },\n      plain: {\n        header: {\n          fontStyle: \"bold\"\n        }\n      }\n    };\n    var jsPdfDefaultStyles = {\n      // Base style for all themes\n      cellPadding: 5,\n      fontSize: 10,\n      fontName: \"helvetica\",\n      // helvetica, times, courier, malgun\n      lineColor: 200,\n      lineWidth: 0.1,\n      fontStyle: \"normal\",\n      // normal, bold, italic, bolditalic\n      overflow: \"ellipsize\",\n      // visible, hidden, ellipsize or linebreak\n      fillColor: 255,\n      textColor: 20,\n      halign: \"left\",\n      // left, center, right\n      valign: \"top\",\n      // top, middle, bottom\n      fillStyle: \"F\",\n      // 'S', 'F' or 'DF' (stroke, fill or fill then stroke)\n      rowHeight: 20,\n      columnWidth: \"auto\"\n    };\n    var FONT_ROW_RATIO = 1.15;\n    var el = this;\n    var DownloadEvt = null;\n    var $head_rows = [];\n    var $rows = [];\n    var rowIndex = 0;\n    var trData = \"\";\n    var colNames = [];\n    var ranges = [];\n    var blob;\n    var $hiddenTableElements = [];\n    var checkCellVisibility = false;\n    $.extend(true, defaults, options);\n\n    // Adopt deprecated options\n    if (defaults.type === \"xlsx\") {\n      defaults.mso.fileFormat = defaults.type;\n      defaults.type = \"excel\";\n    }\n    if (typeof defaults.excelFileFormat !== \"undefined\" && typeof defaults.mso.fileFormat === \"undefined\") defaults.mso.fileFormat = defaults.excelFileFormat;\n    if (typeof defaults.excelPageFormat !== \"undefined\" && typeof defaults.mso.pageFormat === \"undefined\") defaults.mso.pageFormat = defaults.excelPageFormat;\n    if (typeof defaults.excelPageOrientation !== \"undefined\" && typeof defaults.mso.pageOrientation === \"undefined\") defaults.mso.pageOrientation = defaults.excelPageOrientation;\n    if (typeof defaults.excelRTL !== \"undefined\" && typeof defaults.mso.rtl === \"undefined\") defaults.mso.rtl = defaults.excelRTL;\n    if (typeof defaults.excelstyles !== \"undefined\" && typeof defaults.mso.styles === \"undefined\") defaults.mso.styles = defaults.excelstyles;\n    if (typeof defaults.onMsoNumberFormat !== \"undefined\" && typeof defaults.mso.onMsoNumberFormat === \"undefined\") defaults.mso.onMsoNumberFormat = defaults.onMsoNumberFormat;\n    if (typeof defaults.worksheetName !== \"undefined\" && typeof defaults.mso.worksheetName === \"undefined\") defaults.mso.worksheetName = defaults.worksheetName;\n    if (typeof defaults.mso.xslx !== \"undefined\" && typeof defaults.mso.xlsx === \"undefined\") defaults.mso.xlsx = defaults.mso.xslx;\n\n    // Check values of some options\n    defaults.mso.pageOrientation = defaults.mso.pageOrientation.substr(0, 1) === \"l\" ? \"landscape\" : \"portrait\";\n    defaults.date.html = defaults.date.html || \"\";\n    if (defaults.date.html.length) {\n      var patt = [];\n      patt[\"dd\"] = \"(3[01]|[12][0-9]|0?[1-9])\";\n      patt[\"mm\"] = \"(1[012]|0?[1-9])\";\n      patt[\"yyyy\"] = \"((?:1[6-9]|2[0-2])\\\\d{2})\";\n      patt[\"yy\"] = \"(\\\\d{2})\";\n      var separator = defaults.date.html.match(/[^a-zA-Z0-9]/)[0];\n      var formatItems = defaults.date.html.toLowerCase().split(separator);\n      defaults.date.regex = \"^\\\\s*\";\n      defaults.date.regex += patt[formatItems[0]];\n      defaults.date.regex += \"(.)\"; // separator group\n      defaults.date.regex += patt[formatItems[1]];\n      defaults.date.regex += \"\\\\2\"; // identical separator group\n      defaults.date.regex += patt[formatItems[2]];\n      defaults.date.regex += \"\\\\s*$\";\n      // e.g. '^\\\\s*(3[01]|[12][0-9]|0?[1-9])(.)(1[012]|0?[1-9])\\\\2((?:1[6-9]|2[0-2])\\\\d{2})\\\\s*$'\n\n      defaults.date.pattern = new RegExp(defaults.date.regex, \"g\");\n      var f = formatItems.indexOf(\"dd\") + 1;\n      defaults.date.match_d = f + (f > 1 ? 1 : 0);\n      f = formatItems.indexOf(\"mm\") + 1;\n      defaults.date.match_m = f + (f > 1 ? 1 : 0);\n      f = (formatItems.indexOf(\"yyyy\") >= 0 ? formatItems.indexOf(\"yyyy\") : formatItems.indexOf(\"yy\")) + 1;\n      defaults.date.match_y = f + (f > 1 ? 1 : 0);\n    }\n    colNames = GetColumnNames(el);\n    if (typeof defaults.onTableExportBegin === \"function\") defaults.onTableExportBegin();\n    if (defaults.type === \"csv\" || defaults.type === \"tsv\" || defaults.type === \"txt\") {\n      var csvData = \"\";\n      var rowLength = 0;\n      ranges = [];\n      rowIndex = 0;\n      var csvString = function csvString(cell, rowIndex, colIndex) {\n        var result = \"\";\n        if (cell !== null) {\n          var dataString = parseString(cell, rowIndex, colIndex);\n          var csvValue = dataString === null || dataString === \"\" ? \"\" : dataString.toString();\n          if (defaults.type === \"tsv\") {\n            if (dataString instanceof Date) dataString.toLocaleString();\n\n            // According to http://www.iana.org/assignments/media-types/text/tab-separated-values\n            // are fields that contain tabs not allowable in tsv encoding\n            result = replaceAll(csvValue, \"\\t\", \" \");\n          } else {\n            // Takes a string and encapsulates it (by default in double-quotes) if it\n            // contains the csv field separator, spaces, or linebreaks.\n            if (dataString instanceof Date) result = defaults.csvEnclosure + dataString.toLocaleString() + defaults.csvEnclosure;else {\n              result = preventInjection(csvValue);\n              result = replaceAll(result, defaults.csvEnclosure, defaults.csvEnclosure + defaults.csvEnclosure);\n              if (result.indexOf(defaults.csvSeparator) >= 0 || /[\\r\\n ]/g.test(result)) result = defaults.csvEnclosure + result + defaults.csvEnclosure;\n            }\n          }\n        }\n        return result;\n      };\n      var CollectCsvData = function CollectCsvData($rows, rowselector, length) {\n        $rows.each(function () {\n          trData = \"\";\n          ForEachVisibleCell(this, rowselector, rowIndex, length + $rows.length, function (cell, row, col) {\n            trData += csvString(cell, row, col) + (defaults.type === \"tsv\" ? \"\\t\" : defaults.csvSeparator);\n          });\n          trData = $.trim(trData).substring(0, trData.length - 1);\n          if (trData.length > 0) {\n            if (csvData.length > 0) csvData += \"\\n\";\n            csvData += trData;\n          }\n          rowIndex++;\n        });\n        return $rows.length;\n      };\n      rowLength += CollectCsvData($(el).find(\"thead\").first().find(defaults.theadSelector), \"th,td\", rowLength);\n      findTableElements($(el), \"tbody\").each(function () {\n        rowLength += CollectCsvData(findTableElements($(this), defaults.tbodySelector), \"td,th\", rowLength);\n      });\n      if (defaults.tfootSelector.length) CollectCsvData($(el).find(\"tfoot\").first().find(defaults.tfootSelector), \"td,th\", rowLength);\n      csvData += \"\\n\";\n\n      //output\n      if (defaults.outputMode === \"string\") return csvData;\n      if (defaults.outputMode === \"base64\") return base64encode(csvData);\n      if (defaults.outputMode === \"window\") {\n        downloadFile(false, \"data:text/\" + (defaults.type === \"csv\" ? \"csv\" : \"plain\") + \";charset=utf-8,\", csvData);\n        return;\n      }\n      saveToFile(csvData, defaults.fileName + \".\" + defaults.type, \"text/\" + (defaults.type === \"csv\" ? \"csv\" : \"plain\"), \"utf-8\", \"\", defaults.type === \"csv\" && defaults.csvUseBOM);\n    } else if (defaults.type === \"sql\") {\n      // Header\n      rowIndex = 0;\n      ranges = [];\n      var tdData = \"INSERT INTO \" + defaults.sql.tableEnclosure + defaults.tableName + defaults.sql.tableEnclosure + \" (\";\n      $head_rows = collectHeadRows($(el));\n      $($head_rows).each(function () {\n        ForEachVisibleCell(this, \"th,td\", rowIndex, $head_rows.length, function (cell, row, col) {\n          var colName = parseString(cell, row, col) || \"\";\n          if (colName.indexOf(defaults.sql.columnEnclosure) > -1) colName = replaceAll(colName.toString(), defaults.sql.columnEnclosure, defaults.sql.columnEnclosure + defaults.sql.columnEnclosure);\n          tdData += defaults.sql.columnEnclosure + colName + defaults.sql.columnEnclosure + \",\";\n        });\n        rowIndex++;\n        tdData = $.trim(tdData).substring(0, tdData.length - 1);\n      });\n      tdData += \") VALUES \";\n\n      // Data\n      $rows = collectRows($(el));\n      $($rows).each(function () {\n        trData = \"\";\n        ForEachVisibleCell(this, \"td,th\", rowIndex, $head_rows.length + $rows.length, function (cell, row, col) {\n          var dataString = parseString(cell, row, col) || \"\";\n          if (dataString.indexOf(\"'\") > -1) dataString = replaceAll(dataString.toString(), \"'\", \"''\");\n          trData += \"'\" + dataString + \"',\";\n        });\n        if (trData.length > 3) {\n          tdData += \"(\" + trData;\n          tdData = $.trim(tdData).substring(0, tdData.length - 1);\n          tdData += \"),\";\n        }\n        rowIndex++;\n      });\n      tdData = $.trim(tdData).substring(0, tdData.length - 1);\n      tdData += \";\";\n\n      // Output\n      if (defaults.outputMode === \"string\") return tdData;\n      if (defaults.outputMode === \"base64\") return base64encode(tdData);\n      saveToFile(tdData, defaults.fileName + \".sql\", \"application/sql\", \"utf-8\", \"\", false);\n    } else if (defaults.type === \"json\") {\n      var jsonHeaderArray = [];\n      ranges = [];\n      $head_rows = collectHeadRows($(el));\n      $($head_rows).each(function () {\n        var jsonArrayTd = [];\n        ForEachVisibleCell(this, \"th,td\", rowIndex, $head_rows.length, function (cell, row, col) {\n          jsonArrayTd.push(parseString(cell, row, col));\n        });\n        jsonHeaderArray.push(jsonArrayTd);\n      });\n\n      // Data\n      var jsonArray = [];\n      $rows = collectRows($(el));\n      $($rows).each(function () {\n        var jsonObjectTd = {};\n        var colIndex = 0;\n        ForEachVisibleCell(this, \"td,th\", rowIndex, $head_rows.length + $rows.length, function (cell, row, col) {\n          if (jsonHeaderArray.length) {\n            jsonObjectTd[jsonHeaderArray[jsonHeaderArray.length - 1][colIndex]] = parseString(cell, row, col);\n          } else {\n            jsonObjectTd[colIndex] = parseString(cell, row, col);\n          }\n          colIndex++;\n        });\n        if ($.isEmptyObject(jsonObjectTd) === false) jsonArray.push(jsonObjectTd);\n        rowIndex++;\n      });\n      var save_data;\n      if (defaults.jsonScope === \"head\") save_data = JSON.stringify(jsonHeaderArray);else if (defaults.jsonScope === \"data\") save_data = JSON.stringify(jsonArray);\n      // all\n      else save_data = JSON.stringify({\n        header: jsonHeaderArray,\n        data: jsonArray\n      });\n      if (defaults.outputMode === \"string\") return save_data;\n      if (defaults.outputMode === \"base64\") return base64encode(save_data);\n      saveToFile(save_data, defaults.fileName + \".json\", \"application/json\", \"utf-8\", \"base64\", false);\n    } else if (defaults.type === \"xml\") {\n      rowIndex = 0;\n      ranges = [];\n      var xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n      xml += \"<tabledata><fields>\";\n\n      // Header\n      $head_rows = collectHeadRows($(el));\n      $($head_rows).each(function () {\n        ForEachVisibleCell(this, \"th,td\", rowIndex, $head_rows.length, function (cell, row, col) {\n          xml += \"<field>\" + parseString(cell, row, col) + \"</field>\";\n        });\n        rowIndex++;\n      });\n      xml += \"</fields><data>\";\n\n      // Data\n      var rowCount = 1;\n      $rows = collectRows($(el));\n      $($rows).each(function () {\n        var colCount = 1;\n        trData = \"\";\n        ForEachVisibleCell(this, \"td,th\", rowIndex, $head_rows.length + $rows.length, function (cell, row, col) {\n          trData += \"<column-\" + colCount + \">\" + parseString(cell, row, col) + \"</column-\" + colCount + \">\";\n          colCount++;\n        });\n        if (trData.length > 0 && trData !== \"<column-1></column-1>\") {\n          xml += '<row id=\"' + rowCount + '\">' + trData + \"</row>\";\n          rowCount++;\n        }\n        rowIndex++;\n      });\n      xml += \"</data></tabledata>\";\n\n      // Output\n      if (defaults.outputMode === \"string\") return xml;\n      if (defaults.outputMode === \"base64\") return base64encode(xml);\n      saveToFile(xml, defaults.fileName + \".xml\", \"application/xml\", \"utf-8\", \"base64\", false);\n    } else if (defaults.type === \"excel\" && defaults.mso.fileFormat === \"xmlss\") {\n      var sheetData = [];\n      var docNames = [];\n      $(el).filter(function () {\n        return isVisible($(this));\n      }).each(function () {\n        var $table = $(this);\n        var ssName = \"\";\n        if (typeof defaults.mso.worksheetName === \"string\" && defaults.mso.worksheetName.length) ssName = defaults.mso.worksheetName + \" \" + (docNames.length + 1);else if (typeof defaults.mso.worksheetName[docNames.length] !== \"undefined\") ssName = defaults.mso.worksheetName[docNames.length];\n        if (!ssName.length) ssName = $table.find(\"caption\").text() || \"\";\n        if (!ssName.length) ssName = \"Table \" + (docNames.length + 1);\n        ssName = ssName.trim(ssName.replace(/[\\\\\\/[\\]*:?'\"]/g, \"\").substring(0, 31));\n        docNames.push($(\"<div />\").text(ssName).html());\n        if (defaults.exportHiddenCells === false) {\n          $hiddenTableElements = $table.find(\"tr, th, td\").filter(\":hidden\");\n          checkCellVisibility = $hiddenTableElements.length > 0;\n        }\n        rowIndex = 0;\n        colNames = GetColumnNames(this);\n        docData = \"<Table>\\r\";\n        function CollectXmlssData($rows, rowselector, length) {\n          var spans = [];\n          $($rows).each(function () {\n            var ssIndex = 0;\n            var nCols = 0;\n            trData = \"\";\n            ForEachVisibleCell(this, \"td,th\", rowIndex, length + $rows.length, function (cell, row, col) {\n              if (cell !== null) {\n                var style = \"\";\n                var data = parseString(cell, row, col);\n                var type = \"String\";\n                if (jquery__WEBPACK_IMPORTED_MODULE_0__.isNumeric(data) !== false) {\n                  type = \"Number\";\n                } else {\n                  var number = parsePercent(data);\n                  if (number !== false) {\n                    data = number;\n                    type = \"Number\";\n                    style += ' ss:StyleID=\"pct1\"';\n                  }\n                }\n                if (type !== \"Number\") data = data.replace(/\\n/g, \"<br>\");\n                var colspan = getColspan(cell);\n                var rowspan = getRowspan(cell);\n\n                // Skip spans\n                $.each(spans, function () {\n                  var range = this;\n                  if (rowIndex >= range.s.r && rowIndex <= range.e.r && nCols >= range.s.c && nCols <= range.e.c) {\n                    for (var i = 0; i <= range.e.c - range.s.c; ++i) {\n                      nCols++;\n                      ssIndex++;\n                    }\n                  }\n                });\n\n                // Handle Row Span\n                if (rowspan || colspan) {\n                  rowspan = rowspan || 1;\n                  colspan = colspan || 1;\n                  spans.push({\n                    s: {\n                      r: rowIndex,\n                      c: nCols\n                    },\n                    e: {\n                      r: rowIndex + rowspan - 1,\n                      c: nCols + colspan - 1\n                    }\n                  });\n                }\n\n                // Handle Colspan\n                if (colspan > 1) {\n                  style += ' ss:MergeAcross=\"' + (colspan - 1) + '\"';\n                  nCols += colspan - 1;\n                }\n                if (rowspan > 1) {\n                  style += ' ss:MergeDown=\"' + (rowspan - 1) + '\" ss:StyleID=\"rsp1\"';\n                }\n                if (ssIndex > 0) {\n                  style += ' ss:Index=\"' + (nCols + 1) + '\"';\n                  ssIndex = 0;\n                }\n                trData += \"<Cell\" + style + '><Data ss:Type=\"' + type + '\">' + $(\"<div />\").text(data).html() + \"</Data></Cell>\\r\";\n                nCols++;\n              }\n            });\n            if (trData.length > 0) docData += '<Row ss:AutoFitHeight=\"0\">\\r' + trData + \"</Row>\\r\";\n            rowIndex++;\n          });\n          return $rows.length;\n        }\n        var rowLength = CollectXmlssData(collectHeadRows($table), \"th,td\", 0);\n        CollectXmlssData(collectRows($table), \"td,th\", rowLength);\n        docData += \"</Table>\\r\";\n        sheetData.push(docData);\n      });\n      var count = {};\n      var firstOccurrences = {};\n      var item, itemCount;\n      for (var n = 0, c = docNames.length; n < c; n++) {\n        item = docNames[n];\n        itemCount = count[item];\n        itemCount = count[item] = itemCount == null ? 1 : itemCount + 1;\n        if (itemCount === 2) docNames[firstOccurrences[item]] = docNames[firstOccurrences[item]].substring(0, 29) + \"-1\";\n        if (count[item] > 1) docNames[n] = docNames[n].substring(0, 29) + \"-\" + count[item];else firstOccurrences[item] = n;\n      }\n      var CreationDate = new Date().toISOString();\n      var xmlssDocFile = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\r' + '<?mso-application progid=\"Excel.Sheet\"?>\\r' + '<Workbook xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\"\\r' + ' xmlns:o=\"urn:schemas-microsoft-com:office:office\"\\r' + ' xmlns:x=\"urn:schemas-microsoft-com:office:excel\"\\r' + ' xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\"\\r' + ' xmlns:html=\"http://www.w3.org/TR/REC-html40\">\\r' + '<DocumentProperties xmlns=\"urn:schemas-microsoft-com:office:office\">\\r' + \"  <Created>\" + CreationDate + \"</Created>\\r\" + \"</DocumentProperties>\\r\" + '<OfficeDocumentSettings xmlns=\"urn:schemas-microsoft-com:office:office\">\\r' + \"  <AllowPNG/>\\r\" + \"</OfficeDocumentSettings>\\r\" + '<ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\">\\r' + \"  <WindowHeight>9000</WindowHeight>\\r\" + \"  <WindowWidth>13860</WindowWidth>\\r\" + \"  <WindowTopX>0</WindowTopX>\\r\" + \"  <WindowTopY>0</WindowTopY>\\r\" + \"  <ProtectStructure>False</ProtectStructure>\\r\" + \"  <ProtectWindows>False</ProtectWindows>\\r\" + \"</ExcelWorkbook>\\r\" + \"<Styles>\\r\" + '  <Style ss:ID=\"Default\" ss:Name=\"Normal\">\\r' + '    <Alignment ss:Vertical=\"Bottom\"/>\\r' + \"    <Borders/>\\r\" + \"    <Font/>\\r\" + \"    <Interior/>\\r\" + \"    <NumberFormat/>\\r\" + \"    <Protection/>\\r\" + \"  </Style>\\r\" + '  <Style ss:ID=\"rsp1\">\\r' + '    <Alignment ss:Vertical=\"Center\"/>\\r' + \"  </Style>\\r\" + '  <Style ss:ID=\"pct1\">\\r' + '    <NumberFormat ss:Format=\"Percent\"/>\\r' + \"  </Style>\\r\" + \"</Styles>\\r\";\n      for (var j = 0; j < sheetData.length; j++) {\n        xmlssDocFile += '<Worksheet ss:Name=\"' + docNames[j] + '\" ss:RightToLeft=\"' + (defaults.mso.rtl ? \"1\" : \"0\") + '\">\\r' + sheetData[j];\n        if (defaults.mso.rtl) {\n          xmlssDocFile += '<WorksheetOptions xmlns=\"urn:schemas-microsoft-com:office:excel\">\\r' + \"<DisplayRightToLeft/>\\r\" + \"</WorksheetOptions>\\r\";\n        } else xmlssDocFile += '<WorksheetOptions xmlns=\"urn:schemas-microsoft-com:office:excel\"/>\\r';\n        xmlssDocFile += \"</Worksheet>\\r\";\n      }\n      xmlssDocFile += \"</Workbook>\\r\";\n      if (defaults.outputMode === \"string\") return xmlssDocFile;\n      if (defaults.outputMode === \"base64\") return base64encode(xmlssDocFile);\n      saveToFile(xmlssDocFile, defaults.fileName + \".xml\", \"application/xml\", \"utf-8\", \"base64\", false);\n    } else if (defaults.type === \"excel\" && defaults.mso.fileFormat === \"xlsx\") {\n      var sheetNames = [];\n      var workbook = XLSX.utils.book_new();\n\n      // Multiple worksheets and .xlsx file extension #202\n\n      $(el).filter(function () {\n        return isVisible($(this));\n      }).each(function () {\n        var $table = $(this);\n        var ws = xlsxTableToSheet(this);\n        var sheetName = \"\";\n        if (typeof defaults.mso.worksheetName === \"string\" && defaults.mso.worksheetName.length) sheetName = defaults.mso.worksheetName + \" \" + (sheetNames.length + 1);else if (typeof defaults.mso.worksheetName[sheetNames.length] !== \"undefined\") sheetName = defaults.mso.worksheetName[sheetNames.length];\n        if (!sheetName.length) sheetName = $table.find(\"caption\").text() || \"\";\n        if (!sheetName.length) sheetName = \"Table \" + (sheetNames.length + 1);\n        sheetName = $.trim(sheetName.replace(/[\\\\\\/[\\]*:?'\"]/g, \"\").substring(0, 31));\n        sheetNames.push(sheetName);\n        XLSX.utils.book_append_sheet(workbook, ws, sheetName);\n      });\n\n      // add worksheet to workbook\n      var wbData = XLSX.write(workbook, {\n        type: \"binary\",\n        bookType: defaults.mso.fileFormat,\n        bookSST: false\n      });\n      saveToFile(xlsxWorkbookToArrayBuffer(wbData), defaults.fileName + \".\" + defaults.mso.fileFormat, \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"UTF-8\", \"\", false);\n    } else if (defaults.type === \"excel\" || defaults.type === \"xls\" || defaults.type === \"word\" || defaults.type === \"doc\") {\n      var MSDocType = defaults.type === \"excel\" || defaults.type === \"xls\" ? \"excel\" : \"word\";\n      var MSDocExt = MSDocType === \"excel\" ? \"xls\" : \"doc\";\n      var MSDocSchema = 'xmlns:x=\"urn:schemas-microsoft-com:office:' + MSDocType + '\"';\n      docData = \"\";\n      var docName = \"\";\n      $(el).filter(function () {\n        return isVisible($(this));\n      }).each(function () {\n        var $table = $(this);\n        if (docName === \"\") {\n          docName = defaults.mso.worksheetName || $table.find(\"caption\").text() || \"Table\";\n          docName = $.trim(docName.replace(/[\\\\\\/[\\]*:?'\"]/g, \"\").substring(0, 31));\n        }\n        if (defaults.exportHiddenCells === false) {\n          $hiddenTableElements = $table.find(\"tr, th, td\").filter(\":hidden\");\n          checkCellVisibility = $hiddenTableElements.length > 0;\n        }\n        rowIndex = 0;\n        ranges = [];\n        colNames = GetColumnNames(this);\n\n        // Header\n        docData += \"<table><thead>\";\n        $head_rows = collectHeadRows($table);\n        $($head_rows).each(function () {\n          var $row = $(this);\n          var rowStyles = document.defaultView.getComputedStyle($row[0], null);\n          trData = \"\";\n          ForEachVisibleCell(this, \"th,td\", rowIndex, $head_rows.length, function (cell, row, col) {\n            if (cell !== null) {\n              var thStyle = \"\";\n              trData += \"<th\";\n              if (defaults.mso.styles.length) {\n                var cellStyles = document.defaultView.getComputedStyle(cell, null);\n                for (var cssStyle in defaults.mso.styles) {\n                  var stylePropertyName = defaults.mso.styles[cssStyle];\n                  var thCss = getStyle(cellStyles, stylePropertyName);\n                  if (thCss === \"\") thCss = getStyle(rowStyles, stylePropertyName);\n                  if (thCss !== \"\" && thCss !== \"0px none rgb(0, 0, 0)\" && thCss !== \"rgba(0, 0, 0, 0)\") {\n                    thStyle += thStyle === \"\" ? 'style=\"' : \";\";\n                    thStyle += stylePropertyName + \":\" + thCss;\n                  }\n                }\n              }\n              if (thStyle !== \"\") trData += \" \" + thStyle + '\"';\n              var tdColspan = getColspan(cell);\n              if (tdColspan > 0) trData += ' colspan=\"' + tdColspan + '\"';\n              var tdRowspan = getRowspan(cell);\n              if (tdRowspan > 0) trData += ' rowspan=\"' + tdRowspan + '\"';\n              trData += \">\" + parseString(cell, row, col) + \"</th>\";\n            }\n          });\n          if (trData.length > 0) docData += \"<tr>\" + trData + \"</tr>\";\n          rowIndex++;\n        });\n        docData += \"</thead><tbody>\";\n\n        // Data\n        $rows = collectRows($table);\n        $($rows).each(function () {\n          var $row = $(this);\n          var cellStyles = null;\n          var rowStyles = null;\n          trData = \"\";\n          ForEachVisibleCell(this, \"td,th\", rowIndex, $head_rows.length + $rows.length, function (cell, row, col) {\n            if (cell !== null) {\n              var tdValue = parseString(cell, row, col);\n              var tdStyle = \"\";\n              var tdCss = $(cell).attr(\"data-tableexport-msonumberformat\");\n              if (typeof tdCss === \"undefined\" && typeof defaults.mso.onMsoNumberFormat === \"function\") tdCss = defaults.mso.onMsoNumberFormat(cell, row, col);\n              if (typeof tdCss !== \"undefined\" && tdCss !== \"\") tdStyle = \"style=\\\"mso-number-format:'\" + tdCss + \"'\";\n              if (defaults.mso.styles.length) {\n                cellStyles = document.defaultView.getComputedStyle(cell, null);\n                rowStyles = null;\n                for (var cssStyle in defaults.mso.styles) {\n                  var stylePropertyName = defaults.mso.styles[cssStyle];\n                  tdCss = getStyle(cellStyles, stylePropertyName);\n                  if (tdCss === \"\") {\n                    if (rowStyles === null) rowStyles = document.defaultView.getComputedStyle($row[0], null);\n                    tdCss = getStyle(rowStyles, stylePropertyName);\n                  }\n                  if (tdCss !== \"\" && tdCss !== \"0px none rgb(0, 0, 0)\" && tdCss !== \"rgba(0, 0, 0, 0)\") {\n                    tdStyle += tdStyle === \"\" ? 'style=\"' : \";\";\n                    tdStyle += stylePropertyName + \":\" + tdCss;\n                  }\n                }\n              }\n              trData += \"<td\";\n              if (tdStyle !== \"\") trData += \" \" + tdStyle + '\"';\n              var tdColspan = getColspan(cell);\n              if (tdColspan > 0) trData += ' colspan=\"' + tdColspan + '\"';\n              var tdRowspan = getRowspan(cell);\n              if (tdRowspan > 0) trData += ' rowspan=\"' + tdRowspan + '\"';\n              if (typeof tdValue === \"string\" && tdValue !== \"\") {\n                tdValue = preventInjection(tdValue);\n                tdValue = tdValue.replace(/\\n/g, \"<br>\");\n              }\n              trData += \">\" + tdValue + \"</td>\";\n            }\n          });\n          if (trData.length > 0) docData += \"<tr>\" + trData + \"</tr>\";\n          rowIndex++;\n        });\n        if (defaults.displayTableName) docData += \"<tr><td></td></tr><tr><td></td></tr><tr><td>\" + parseString($(\"<p>\" + defaults.tableName + \"</p>\")) + \"</td></tr>\";\n        docData += \"</tbody></table>\";\n      });\n\n      //noinspection XmlUnusedNamespaceDeclaration\n      var docFile = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" ' + MSDocSchema + ' xmlns=\"http://www.w3.org/TR/REC-html40\">';\n      docFile += \"<head>\";\n      docFile += '<meta http-equiv=\"content-type\" content=\"application/vnd.ms-' + MSDocType + '; charset=UTF-8\">';\n      if (MSDocType === \"excel\") {\n        docFile += \"<!--[if gte mso 9]>\";\n        docFile += \"<xml>\";\n        docFile += \"<x:ExcelWorkbook>\";\n        docFile += \"<x:ExcelWorksheets>\";\n        docFile += \"<x:ExcelWorksheet>\";\n        docFile += \"<x:Name>\";\n        docFile += docName;\n        docFile += \"</x:Name>\";\n        docFile += \"<x:WorksheetOptions>\";\n        docFile += \"<x:DisplayGridlines/>\";\n        if (defaults.mso.rtl) docFile += \"<x:DisplayRightToLeft/>\";\n        docFile += \"</x:WorksheetOptions>\";\n        docFile += \"</x:ExcelWorksheet>\";\n        docFile += \"</x:ExcelWorksheets>\";\n        docFile += \"</x:ExcelWorkbook>\";\n        docFile += \"</xml>\";\n        docFile += \"<![endif]-->\";\n      }\n      docFile += \"<style>\";\n      docFile += \"@page { size:\" + defaults.mso.pageOrientation + \"; mso-page-orientation:\" + defaults.mso.pageOrientation + \"; }\";\n      docFile += \"@page Section1 {size:\" + pageFormats[defaults.mso.pageFormat][0] + \"pt \" + pageFormats[defaults.mso.pageFormat][1] + \"pt\";\n      docFile += \"; margin:1.0in 1.25in 1.0in 1.25in;mso-header-margin:.5in;mso-footer-margin:.5in;mso-paper-source:0;}\";\n      docFile += \"div.Section1 {page:Section1;}\";\n      docFile += \"@page Section2 {size:\" + pageFormats[defaults.mso.pageFormat][1] + \"pt \" + pageFormats[defaults.mso.pageFormat][0] + \"pt\";\n      docFile += \";mso-page-orientation:\" + defaults.mso.pageOrientation + \";margin:1.25in 1.0in 1.25in 1.0in;mso-header-margin:.5in;mso-footer-margin:.5in;mso-paper-source:0;}\";\n      docFile += \"div.Section2 {page:Section2;}\";\n      docFile += \"br {mso-data-placement:same-cell;}\";\n      docFile += \"</style>\";\n      docFile += \"</head>\";\n      docFile += \"<body>\";\n      docFile += '<div class=\"Section' + (defaults.mso.pageOrientation === \"landscape\" ? \"2\" : \"1\") + '\">';\n      docFile += docData;\n      docFile += \"</div>\";\n      docFile += \"</body>\";\n      docFile += \"</html>\";\n      if (defaults.outputMode === \"string\") return docFile;\n      if (defaults.outputMode === \"base64\") return base64encode(docFile);\n      saveToFile(docFile, defaults.fileName + \".\" + MSDocExt, \"application/vnd.ms-\" + MSDocType, \"\", \"base64\", false);\n    } else if (defaults.type === \"png\") {\n      html2canvas($(el)[0]).then(function (canvas) {\n        var image = canvas.toDataURL();\n        var byteString = atob(image.substring(22)); // remove data stuff\n        var buffer = new ArrayBuffer(byteString.length);\n        var intArray = new Uint8Array(buffer);\n        for (var i = 0; i < byteString.length; i++) intArray[i] = byteString.charCodeAt(i);\n        if (defaults.outputMode === \"string\") return byteString;\n        if (defaults.outputMode === \"base64\") return base64encode(image);\n        if (defaults.outputMode === \"window\") {\n          window.open(image);\n          return;\n        }\n        saveToFile(buffer, defaults.fileName + \".png\", \"image/png\", \"\", \"\", false);\n      });\n    } else if (defaults.type === \"pdf\") {\n      if (defaults.pdfmake.enabled === true) {\n        // pdf output using pdfmake\n        // https://github.com/bpampuch/pdfmake\n\n        var docDefinition = {\n          content: []\n        };\n        $.extend(true, docDefinition, defaults.pdfmake.docDefinition);\n        ranges = [];\n        $(el).filter(function () {\n          return isVisible($(this));\n        }).each(function () {\n          var $table = $(this);\n          var widths = [];\n          var body = [];\n          rowIndex = 0;\n\n          /**\r\n           * @return {number}\r\n           */\n          var CollectPdfmakeData = function CollectPdfmakeData($rows, colselector, length) {\n            var rLength = 0;\n            $($rows).each(function () {\n              var r = [];\n              ForEachVisibleCell(this, colselector, rowIndex, length, function (cell, row, col) {\n                var cellContent;\n                if (typeof cell !== \"undefined\" && cell !== null) {\n                  var colspan = getColspan(cell);\n                  var rowspan = getRowspan(cell);\n                  cellContent = {\n                    text: parseString(cell, row, col) || \" \"\n                  };\n                  if (colspan > 1 || rowspan > 1) {\n                    cellContent[\"colSpan\"] = colspan || 1;\n                    cellContent[\"rowSpan\"] = rowspan || 1;\n                  }\n                } else cellContent = {\n                  text: \" \"\n                };\n                if (colselector.indexOf(\"th\") >= 0) cellContent[\"style\"] = \"header\";\n                r.push(cellContent);\n              });\n              if (r.length) body.push(r);\n              if (rLength < r.length) rLength = r.length;\n              rowIndex++;\n            });\n            return rLength;\n          };\n          $head_rows = collectHeadRows($table);\n          var colcount = CollectPdfmakeData($head_rows, \"th,td\", $head_rows.length);\n          for (var i = widths.length; i < colcount; i++) widths.push(\"*\");\n\n          // Data\n          $rows = collectRows($table);\n          colcount = CollectPdfmakeData($rows, \"td\", $head_rows.length + $rows.length);\n          for (var _i = widths.length; _i < colcount; _i++) widths.push(\"*\");\n          docDefinition.content.push({\n            table: {\n              headerRows: $head_rows.length ? $head_rows.length : null,\n              widths: widths,\n              body: body\n            },\n            layout: {\n              layout: \"noBorders\",\n              hLineStyle: function hLineStyle(i, node) {\n                return 0;\n              },\n              vLineWidth: function vLineWidth(i, node) {\n                return 0;\n              },\n              hLineColor: function hLineColor(i, node) {\n                return i < node.table.headerRows ? defaults.pdfmake.docDefinition.styles.header.background : defaults.pdfmake.docDefinition.styles.alternateRow.fillColor;\n              },\n              vLineColor: function vLineColor(i, node) {\n                return i < node.table.headerRows ? defaults.pdfmake.docDefinition.styles.header.background : defaults.pdfmake.docDefinition.styles.alternateRow.fillColor;\n              },\n              fillColor: function fillColor(rowIndex, node, columnIndex) {\n                return rowIndex % 2 === 0 ? defaults.pdfmake.docDefinition.styles.alternateRow.fillColor : null;\n              }\n            },\n            pageBreak: docDefinition.content.length ? \"before\" : undefined\n          });\n        }); // ...for each table\n\n        if (typeof pdfMake !== \"undefined\" && typeof pdfMake.createPdf !== \"undefined\") {\n          pdfMake.fonts = {\n            Roboto: {\n              normal: \"Roboto-Regular.ttf\",\n              bold: \"Roboto-Medium.ttf\",\n              italics: \"Roboto-Italic.ttf\",\n              bolditalics: \"Roboto-MediumItalic.ttf\"\n            }\n          };\n\n          // pdfmake >= 0.2.0 - replace pdfMake.vfs with pdfMake.virtualfs\n\n          if (pdfMake.vfs.hasOwnProperty(\"Mirza-Regular.ttf\")) {\n            docDefinition.defaultStyle.font = \"Mirza\";\n            $.extend(true, pdfMake.fonts, {\n              Mirza: {\n                normal: \"Mirza-Regular.ttf\",\n                bold: \"Mirza-Bold.ttf\",\n                italics: \"Mirza-Medium.ttf\",\n                bolditalics: \"Mirza-SemiBold.ttf\"\n              }\n            });\n          } else if (pdfMake.vfs.hasOwnProperty(\"gbsn00lp.ttf\")) {\n            docDefinition.defaultStyle.font = \"gbsn00lp\";\n            $.extend(true, pdfMake.fonts, {\n              gbsn00lp: {\n                normal: \"gbsn00lp.ttf\",\n                bold: \"gbsn00lp.ttf\",\n                italics: \"gbsn00lp.ttf\",\n                bolditalics: \"gbsn00lp.ttf\"\n              }\n            });\n          } else if (pdfMake.vfs.hasOwnProperty(\"ZCOOLXiaoWei-Regular.ttf\")) {\n            docDefinition.defaultStyle.font = \"ZCOOLXiaoWei\";\n            $.extend(true, pdfMake.fonts, {\n              ZCOOLXiaoWei: {\n                normal: \"ZCOOLXiaoWei-Regular.ttf\",\n                bold: \"ZCOOLXiaoWei-Regular.ttf\",\n                italics: \"ZCOOLXiaoWei-Regular.ttf\",\n                bolditalics: \"ZCOOLXiaoWei-Regular.ttf\"\n              }\n            });\n          }\n          $.extend(true, pdfMake.fonts, defaults.pdfmake.fonts);\n\n          // pdfmake <= 0.1.71\n          pdfMake.createPdf(docDefinition).getBuffer(function (buffer) {\n            saveToFile(buffer, defaults.fileName + \".pdf\", \"application/pdf\", \"\", \"\", false);\n          });\n\n          // pdfmake >= 0.2.0 - replace above code with:\n          //pdfMake.createPdf(docDefinition).download(defaults.fileName);\n        }\n      } else if (defaults.jspdf.autotable === false) {\n        // pdf output using jsPDF's core html support\n\n        var doc = new jspdf.jsPDF({\n          orientation: defaults.jspdf.orientation,\n          unit: defaults.jspdf.unit,\n          format: defaults.jspdf.format\n        });\n        doc.html(el[0], {\n          callback: function callback() {\n            jsPdfOutput(doc, false);\n          },\n          html2canvas: {\n            scale: (doc.internal.pageSize.width - defaults.jspdf.margins.left * 2) / el[0].scrollWidth\n          },\n          x: defaults.jspdf.margins.left,\n          y: defaults.jspdf.margins.top\n          /*\r\n          margin: [\r\n            defaults.jspdf.margins.left,\r\n            defaults.jspdf.margins.top,\r\n            getPropertyUnitValue($(el).first().get(0), 'width', 'mm'),\r\n            getPropertyUnitValue($(el).first().get(0), 'height', 'mm')\r\n          ]\r\n          */\n        });\n      } else {\n        // pdf output using jsPDF AutoTable plugin\n        // https://github.com/simonbengtsson/jsPDF-AutoTable\n\n        var teOptions = defaults.jspdf.autotable.tableExport;\n\n        // When setting jspdf.format to 'bestfit' tableExport tries to choose\n        // the minimum required paper format and orientation in which the table\n        // (or tables in multitable mode) completely fits without column adjustment\n        if (typeof defaults.jspdf.format === \"string\" && defaults.jspdf.format.toLowerCase() === \"bestfit\") {\n          var rk = \"\",\n            ro = \"\";\n          var mw = 0;\n          $(el).each(function () {\n            if (isVisible($(this))) {\n              var w = getPropertyUnitValue($(this).get(0), \"width\", \"pt\");\n              if (w > mw) {\n                if (w > pageFormats.a0[0]) {\n                  rk = \"a0\";\n                  ro = \"l\";\n                }\n                for (var key in pageFormats) {\n                  if (pageFormats.hasOwnProperty(key)) {\n                    if (pageFormats[key][1] > w) {\n                      rk = key;\n                      ro = \"l\";\n                      if (pageFormats[key][0] > w) ro = \"p\";\n                    }\n                  }\n                }\n                mw = w;\n              }\n            }\n          });\n          defaults.jspdf.format = rk === \"\" ? \"a4\" : rk;\n          defaults.jspdf.orientation = ro === \"\" ? \"w\" : ro;\n        }\n\n        // The jsPDF doc object is stored in defaults.jspdf.autotable.tableExport,\n        // thus it can be accessed from any callback function\n        if (teOptions.doc == null) {\n          teOptions.doc = new jspdf.jsPDF(defaults.jspdf.orientation, defaults.jspdf.unit, defaults.jspdf.format);\n          teOptions.wScaleFactor = 1;\n          teOptions.hScaleFactor = 1;\n          if (typeof defaults.jspdf.onDocCreated === \"function\") defaults.jspdf.onDocCreated(teOptions.doc);\n        }\n        jsPdfDefaultStyles.fontName = teOptions.doc.getFont().fontName;\n        if (teOptions.outputImages === true) teOptions.images = {};\n        if (typeof teOptions.images !== \"undefined\") {\n          $(el).filter(function () {\n            return isVisible($(this));\n          }).each(function () {\n            var rowCount = 0;\n            ranges = [];\n            if (defaults.exportHiddenCells === false) {\n              $hiddenTableElements = $(this).find(\"tr, th, td\").filter(\":hidden\");\n              checkCellVisibility = $hiddenTableElements.length > 0;\n            }\n            $head_rows = collectHeadRows($(this));\n            $rows = collectRows($(this));\n            $($rows).each(function () {\n              ForEachVisibleCell(this, \"td,th\", $head_rows.length + rowCount, $head_rows.length + $rows.length, function (cell) {\n                collectImages(cell, $(cell).children(), teOptions);\n              });\n              rowCount++;\n            });\n          });\n          $head_rows = [];\n          $rows = [];\n        }\n        loadImages(teOptions, function () {\n          $(el).filter(function () {\n            return isVisible($(this));\n          }).each(function () {\n            var colKey;\n            rowIndex = 0;\n            ranges = [];\n            if (defaults.exportHiddenCells === false) {\n              $hiddenTableElements = $(this).find(\"tr, th, td\").filter(\":hidden\");\n              checkCellVisibility = $hiddenTableElements.length > 0;\n            }\n            colNames = GetColumnNames(this);\n            teOptions.columns = [];\n            teOptions.rows = [];\n            teOptions.teCells = {};\n\n            // onTable: optional callback function for every matching table that can be used\n            // to modify the tableExport options or to skip the output of a particular table\n            // if the table selector targets multiple tables\n            if (typeof teOptions.onTable === \"function\") if (teOptions.onTable($(this), defaults) === false) return true; // continue to next iteration step (table)\n\n            // each table works with an own copy of AutoTable options\n            defaults.jspdf.autotable.tableExport = null; // avoid deep recursion error\n            var atOptions = $.extend(true, {}, defaults.jspdf.autotable);\n            defaults.jspdf.autotable.tableExport = teOptions;\n            atOptions.margin = {};\n            $.extend(true, atOptions.margin, defaults.jspdf.margins);\n            atOptions.tableExport = teOptions;\n            if (typeof atOptions.createdHeaderCell !== \"function\") {\n              // apply some original css styles to pdf header cells\n              atOptions.createdHeaderCell = function (cell, data) {\n                if (typeof teOptions.columns[data.column.dataKey] !== \"undefined\") {\n                  var col = teOptions.columns[data.column.dataKey];\n                  if (typeof col.rect !== \"undefined\") {\n                    var rh;\n                    cell.contentWidth = col.rect.width;\n                    if (typeof teOptions.heightRatio === \"undefined\" || teOptions.heightRatio === 0) {\n                      if (data.row.raw[data.column.dataKey].rowspan) rh = data.row.raw[data.column.dataKey].rect.height / data.row.raw[data.column.dataKey].rowspan;else rh = data.row.raw[data.column.dataKey].rect.height;\n                      teOptions.heightRatio = cell.styles.rowHeight / rh;\n                    }\n                    rh = data.row.raw[data.column.dataKey].rect.height * teOptions.heightRatio;\n                    if (rh > cell.styles.rowHeight) cell.styles.rowHeight = rh;\n                  }\n                  cell.styles.halign = atOptions.headerStyles.halign === \"inherit\" ? \"center\" : atOptions.headerStyles.halign;\n                  cell.styles.valign = atOptions.headerStyles.valign;\n                  if (typeof col.style !== \"undefined\" && col.style.hidden !== true) {\n                    if (atOptions.headerStyles.halign === \"inherit\") cell.styles.halign = col.style.align;\n                    if (atOptions.styles.fillColor === \"inherit\") cell.styles.fillColor = col.style.bcolor;\n                    if (atOptions.styles.textColor === \"inherit\") cell.styles.textColor = col.style.color;\n                    if (atOptions.styles.fontStyle === \"inherit\") cell.styles.fontStyle = col.style.fstyle;\n                  }\n                }\n              };\n            }\n            if (typeof atOptions.createdCell !== \"function\") {\n              // apply some original css styles to pdf table cells\n              atOptions.createdCell = function (cell, data) {\n                var tecell = teOptions.teCells[data.row.index + \":\" + data.column.dataKey];\n                cell.styles.halign = atOptions.styles.halign === \"inherit\" ? \"center\" : atOptions.styles.halign;\n                cell.styles.valign = atOptions.styles.valign;\n                if (typeof tecell !== \"undefined\" && typeof tecell.style !== \"undefined\" && tecell.style.hidden !== true) {\n                  if (atOptions.styles.halign === \"inherit\") cell.styles.halign = tecell.style.align;\n                  if (atOptions.styles.fillColor === \"inherit\") cell.styles.fillColor = tecell.style.bcolor;\n                  if (atOptions.styles.textColor === \"inherit\") cell.styles.textColor = tecell.style.color;\n                  if (atOptions.styles.fontStyle === \"inherit\") cell.styles.fontStyle = tecell.style.fstyle;\n                }\n              };\n            }\n            if (typeof atOptions.drawHeaderCell !== \"function\") {\n              atOptions.drawHeaderCell = function (cell, data) {\n                var colopt = teOptions.columns[data.column.dataKey];\n                if ((colopt.style.hasOwnProperty(\"hidden\") !== true || colopt.style.hidden !== true) && colopt.rowIndex >= 0) return prepareAutoTableText(cell, data, colopt);else return false; // cell is hidden\n              };\n            }\n\n            if (typeof atOptions.drawCell !== \"function\") {\n              atOptions.drawCell = function (cell, data) {\n                var teCell = teOptions.teCells[data.row.index + \":\" + data.column.dataKey];\n                var draw2canvas = typeof teCell !== \"undefined\" && teCell.isCanvas;\n                if (draw2canvas !== true) {\n                  if (prepareAutoTableText(cell, data, teCell)) {\n                    teOptions.doc.rect(cell.x, cell.y, cell.width, cell.height, cell.styles.fillStyle);\n                    if (typeof teCell !== \"undefined\" && (typeof teCell.hasUserDefText === \"undefined\" || teCell.hasUserDefText !== true) && typeof teCell.elements !== \"undefined\" && teCell.elements.length) {\n                      var hScale = cell.height / teCell.rect.height;\n                      if (hScale > teOptions.hScaleFactor) teOptions.hScaleFactor = hScale;\n                      teOptions.wScaleFactor = cell.width / teCell.rect.width;\n                      var ySave = cell.textPos.y;\n                      drawAutotableElements(cell, teCell.elements, teOptions);\n                      cell.textPos.y = ySave;\n                      drawAutotableText(cell, teCell.elements, teOptions);\n                    } else drawAutotableText(cell, {}, teOptions);\n                  }\n                } else {\n                  var container = teCell.elements[0];\n                  var imgId = $(container).attr(\"data-tableexport-canvas\");\n                  var r = container.getBoundingClientRect();\n                  cell.width = r.width * teOptions.wScaleFactor;\n                  cell.height = r.height * teOptions.hScaleFactor;\n                  data.row.height = cell.height;\n                  jsPdfDrawImage(cell, container, imgId, teOptions);\n                }\n                return false;\n              };\n            }\n\n            // collect header and data rows\n            teOptions.headerrows = [];\n            $head_rows = collectHeadRows($(this));\n            $($head_rows).each(function () {\n              colKey = 0;\n              teOptions.headerrows[rowIndex] = [];\n              ForEachVisibleCell(this, \"th,td\", rowIndex, $head_rows.length, function (cell, row, col) {\n                var obj = getCellStyles(cell);\n                obj.title = parseString(cell, row, col);\n                obj.key = colKey++;\n                obj.rowIndex = rowIndex;\n                teOptions.headerrows[rowIndex].push(obj);\n              });\n              rowIndex++;\n            });\n            if (rowIndex > 0) {\n              // iterate through last row\n              var lastrow = rowIndex - 1;\n              while (lastrow >= 0) {\n                $.each(teOptions.headerrows[lastrow], function () {\n                  var obj = this;\n                  if (lastrow > 0 && this.rect === null) obj = teOptions.headerrows[lastrow - 1][this.key];\n                  if (obj !== null && obj.rowIndex >= 0 && (obj.style.hasOwnProperty(\"hidden\") !== true || obj.style.hidden !== true)) teOptions.columns.push(obj);\n                });\n                lastrow = teOptions.columns.length > 0 ? -1 : lastrow - 1;\n              }\n            }\n            var rowCount = 0;\n            $rows = [];\n            $rows = collectRows($(this));\n            $($rows).each(function () {\n              var rowData = [];\n              colKey = 0;\n              ForEachVisibleCell(this, \"td,th\", rowIndex, $head_rows.length + $rows.length, function (cell, row, col) {\n                var obj;\n                if (typeof teOptions.columns[colKey] === \"undefined\") {\n                  // jsPDF-Autotable needs columns. Thus define hidden ones for tables without thead\n                  obj = {\n                    title: \"\",\n                    key: colKey,\n                    style: {\n                      hidden: true\n                    }\n                  };\n                  teOptions.columns.push(obj);\n                }\n                rowData.push(parseString(cell, row, col));\n                if (typeof cell !== \"undefined\" && cell !== null) {\n                  obj = getCellStyles(cell);\n                  obj.isCanvas = cell.hasAttribute(\"data-tableexport-canvas\");\n                  obj.elements = obj.isCanvas ? $(cell) : $(cell).children();\n                  if (typeof $(cell).data(\"teUserDefText\") !== \"undefined\") obj.hasUserDefText = true;\n                  teOptions.teCells[rowCount + \":\" + colKey++] = obj;\n                } else {\n                  obj = $.extend(true, {}, teOptions.teCells[rowCount + \":\" + (colKey - 1)]);\n                  obj.colspan = -1;\n                  teOptions.teCells[rowCount + \":\" + colKey++] = obj;\n                }\n              });\n              if (rowData.length) {\n                teOptions.rows.push(rowData);\n                rowCount++;\n              }\n              rowIndex++;\n            });\n\n            // onBeforeAutotable: optional callback function before calling\n            // jsPDF AutoTable that can be used to modify the AutoTable options\n            if (typeof teOptions.onBeforeAutotable === \"function\") teOptions.onBeforeAutotable($(this), teOptions.columns, teOptions.rows, atOptions);\n            jsPdfAutoTable(atOptions.tableExport.doc, teOptions.columns, teOptions.rows, atOptions);\n\n            // onAfterAutotable: optional callback function after returning\n            // from jsPDF AutoTable that can be used to modify the AutoTable options\n            if (typeof teOptions.onAfterAutotable === \"function\") teOptions.onAfterAutotable($(this), atOptions);\n\n            // set the start position for the next table (in case there is one)\n            defaults.jspdf.autotable.startY = jsPdfAutoTableEndPosY() + atOptions.margin.top;\n          });\n          jsPdfOutput(teOptions.doc, typeof teOptions.images !== \"undefined\" && jquery__WEBPACK_IMPORTED_MODULE_0__.isEmptyObject(teOptions.images) === false);\n          if (typeof teOptions.headerrows !== \"undefined\") teOptions.headerrows.length = 0;\n          if (typeof teOptions.columns !== \"undefined\") teOptions.columns.length = 0;\n          if (typeof teOptions.rows !== \"undefined\") teOptions.rows.length = 0;\n          delete teOptions.doc;\n          teOptions.doc = null;\n        });\n      }\n    }\n    function collectHeadRows($table) {\n      var result = [];\n      findTableElements($table, \"thead\").each(function () {\n        result.push.apply(result, findTableElements($(this), defaults.theadSelector).toArray());\n      });\n      return result;\n    }\n    function collectRows($table) {\n      var result = [];\n      findTableElements($table, \"tbody\").each(function () {\n        result.push.apply(result, findTableElements($(this), defaults.tbodySelector).toArray());\n      });\n      if (defaults.tfootSelector.length) {\n        findTableElements($table, \"tfoot\").each(function () {\n          result.push.apply(result, findTableElements($(this), defaults.tfootSelector).toArray());\n        });\n      }\n      return result;\n    }\n    function findTableElements($parent, selector) {\n      var parentSelector = $parent[0].tagName;\n      var parentLevel = $parent.parents(parentSelector).length;\n      return $parent.find(selector).filter(function () {\n        return parentLevel === $(this).closest(parentSelector).parents(parentSelector).length;\n      });\n    }\n    function GetColumnNames(table) {\n      var result = [];\n      var maxCols = 0;\n      var row = 0;\n      var col = 0;\n      $(table).find(\"thead\").first().find(\"th\").each(function (index, el) {\n        var hasDataField = $(el).attr(\"data-field\") !== undefined;\n        if (typeof el.parentNode.rowIndex !== \"undefined\" && row !== el.parentNode.rowIndex) {\n          row = el.parentNode.rowIndex;\n          col = 0;\n          maxCols = 0;\n        }\n        var colSpan = getColspan(el);\n        maxCols += colSpan ? colSpan : 1;\n        while (col < maxCols) {\n          result[col] = hasDataField ? $(el).attr(\"data-field\") : col.toString();\n          col++;\n        }\n      });\n      return result;\n    }\n    function isVisible($element) {\n      var isRow = typeof $element[0].rowIndex !== \"undefined\";\n      var isCell = isRow === false && typeof $element[0].cellIndex !== \"undefined\";\n      var isElementVisible = isCell || isRow ? isTableElementVisible($element) : $element.is(\":visible\");\n      var tableexportDisplay = $element.attr(\"data-tableexport-display\");\n      if (isCell && tableexportDisplay !== \"none\" && tableexportDisplay !== \"always\") {\n        $element = $($element[0].parentNode);\n        isRow = typeof $element[0].rowIndex !== \"undefined\";\n        tableexportDisplay = $element.attr(\"data-tableexport-display\");\n      }\n      if (isRow && tableexportDisplay !== \"none\" && tableexportDisplay !== \"always\") {\n        tableexportDisplay = $element.closest(\"table\").attr(\"data-tableexport-display\");\n      }\n      return tableexportDisplay !== \"none\" && (isElementVisible === true || tableexportDisplay === \"always\");\n    }\n    function isTableElementVisible($element) {\n      var hiddenEls = [];\n      if (checkCellVisibility) {\n        hiddenEls = $hiddenTableElements.filter(function () {\n          var found = false;\n          if (this.nodeType === $element[0].nodeType) {\n            if (typeof this.rowIndex !== \"undefined\" && this.rowIndex === $element[0].rowIndex) found = true;else if (typeof this.cellIndex !== \"undefined\" && this.cellIndex === $element[0].cellIndex && typeof this.parentNode.rowIndex !== \"undefined\" && typeof $element[0].parentNode.rowIndex !== \"undefined\" && this.parentNode.rowIndex === $element[0].parentNode.rowIndex) found = true;\n          }\n          return found;\n        });\n      }\n      return checkCellVisibility === false || hiddenEls.length === 0;\n    }\n    function isColumnIgnored($cell, rowLength, colIndex) {\n      var result = false;\n      if (isVisible($cell)) {\n        if (defaults.ignoreColumn.length > 0) {\n          if ($.inArray(colIndex, defaults.ignoreColumn) !== -1 || $.inArray(colIndex - rowLength, defaults.ignoreColumn) !== -1 || colNames.length > colIndex && typeof colNames[colIndex] !== \"undefined\" && $.inArray(colNames[colIndex], defaults.ignoreColumn) !== -1) result = true;\n        }\n      } else result = true;\n      return result;\n    }\n    function ForEachVisibleCell(tableRow, selector, rowIndex, rowCount, cellcallback) {\n      if (typeof cellcallback === \"function\") {\n        var ignoreRow = false;\n        if (typeof defaults.onIgnoreRow === \"function\") ignoreRow = defaults.onIgnoreRow($(tableRow), rowIndex);\n        if (ignoreRow === false && (defaults.ignoreRow.length === 0 || $.inArray(rowIndex, defaults.ignoreRow) === -1 && $.inArray(rowIndex - rowCount, defaults.ignoreRow) === -1) && isVisible($(tableRow))) {\n          var $cells = findTableElements($(tableRow), selector);\n          var cellsCount = $cells.length;\n          var colCount = 0;\n          var colIndex = 0;\n          $cells.each(function () {\n            var $cell = $(this);\n            var colspan = getColspan(this);\n            var rowspan = getRowspan(this);\n            var c;\n\n            // Skip ranges\n            $.each(ranges, function () {\n              var range = this;\n              if (rowIndex > range.s.r && rowIndex <= range.e.r && colCount >= range.s.c && colCount <= range.e.c) {\n                for (c = 0; c <= range.e.c - range.s.c; ++c) {\n                  cellsCount++;\n                  colIndex++;\n                  cellcallback(null, rowIndex, colCount++);\n                }\n              }\n            });\n\n            // Handle span's\n            if (rowspan || colspan) {\n              rowspan = rowspan || 1;\n              colspan = colspan || 1;\n              ranges.push({\n                s: {\n                  r: rowIndex,\n                  c: colCount\n                },\n                e: {\n                  r: rowIndex + rowspan - 1,\n                  c: colCount + colspan - 1\n                }\n              });\n            }\n            if (isColumnIgnored($cell, cellsCount, colIndex++) === false) {\n              // Handle value\n              cellcallback(this, rowIndex, colCount++);\n            }\n\n            // Handle colspan\n            if (colspan > 1) {\n              for (c = 0; c < colspan - 1; ++c) {\n                colIndex++;\n                cellcallback(null, rowIndex, colCount++);\n              }\n            }\n          });\n\n          // Skip ranges\n          $.each(ranges, function () {\n            var range = this;\n            if (rowIndex >= range.s.r && rowIndex <= range.e.r && colCount >= range.s.c && colCount <= range.e.c) {\n              for (var _c = 0; _c <= range.e.c - range.s.c; ++_c) {\n                cellcallback(null, rowIndex, colCount++);\n              }\n            }\n          });\n        }\n      }\n    }\n    function jsPdfDrawImage(cell, container, imgId, teOptions) {\n      if (typeof teOptions.images !== \"undefined\") {\n        var image = teOptions.images[imgId];\n        if (typeof image !== \"undefined\") {\n          var r = container.getBoundingClientRect();\n          var arCell = cell.width / cell.height;\n          var arImg = r.width / r.height;\n          var imgWidth = cell.width;\n          var imgHeight = cell.height;\n          var px2pt = 0.264583 * 72 / 25.4;\n          var uy = 0;\n          if (arImg <= arCell) {\n            imgHeight = Math.min(cell.height, r.height);\n            imgWidth = r.width * imgHeight / r.height;\n          } else if (arImg > arCell) {\n            imgWidth = Math.min(cell.width, r.width);\n            imgHeight = r.height * imgWidth / r.width;\n          }\n          imgWidth *= px2pt;\n          imgHeight *= px2pt;\n          if (imgHeight < cell.height) uy = (cell.height - imgHeight) / 2;\n          try {\n            teOptions.doc.addImage(image.src, cell.textPos.x, cell.y + uy, imgWidth, imgHeight);\n          } catch (e) {\n            // TODO: IE -> convert png to jpeg\n          }\n          cell.textPos.x += imgWidth;\n        }\n      }\n    }\n    function jsPdfOutput(doc, hasimages) {\n      if (defaults.outputMode === \"string\") return doc.output();\n      if (defaults.outputMode === \"base64\") return base64encode(doc.output());\n      if (defaults.outputMode === \"window\") {\n        window.URL = window.URL || window.webkitURL;\n        window.open(window.URL.createObjectURL(doc.output(\"blob\")));\n        return;\n      }\n      var fileName = defaults.fileName + \".pdf\";\n      try {\n        var _blob = doc.output(\"blob\");\n        saveAs(_blob, fileName);\n        if (typeof defaults.onAfterSaveToFile === \"function\") defaults.onAfterSaveToFile(_blob, fileName);\n      } catch (e) {\n        downloadFile(fileName, \"data:application/pdf\" + (hasimages ? \"\" : \";base64\") + \",\", hasimages ? doc.output(\"blob\") : doc.output());\n      }\n    }\n    function prepareAutoTableText(cell, data, cellopt) {\n      var cs = 0;\n      if (typeof cellopt !== \"undefined\") cs = cellopt.colspan;\n      if (cs >= 0) {\n        // colspan handling\n        var cellWidth = cell.width;\n        var textPosX = cell.textPos.x;\n        var i = data.table.columns.indexOf(data.column);\n        for (var _c2 = 1; _c2 < cs; _c2++) {\n          var column = data.table.columns[i + _c2];\n          cellWidth += column.width;\n        }\n        if (cs > 1) {\n          if (cell.styles.halign === \"right\") textPosX = cell.textPos.x + cellWidth - cell.width;else if (cell.styles.halign === \"center\") textPosX = cell.textPos.x + (cellWidth - cell.width) / 2;\n        }\n        cell.width = cellWidth;\n        cell.textPos.x = textPosX;\n        if (typeof cellopt !== \"undefined\" && cellopt.rowspan > 1) cell.height = cell.height * cellopt.rowspan;\n\n        // fix jsPDF's calculation of text position\n        if (cell.styles.valign === \"middle\" || cell.styles.valign === \"bottom\") {\n          var splittedText = typeof cell.text === \"string\" ? cell.text.split(/\\r\\n|\\r|\\n/g) : cell.text;\n          var lineCount = splittedText.length || 1;\n          if (lineCount > 2) cell.textPos.y -= (2 - FONT_ROW_RATIO) / 2 * data.row.styles.fontSize * (lineCount - 2) / 3;\n        }\n        return true;\n      } else return false; // cell is hidden (colspan = -1), don't draw it\n    }\n\n    function collectImages(cell, elements, teOptions) {\n      if (typeof cell !== \"undefined\" && cell !== null) {\n        if (cell.hasAttribute(\"data-tableexport-canvas\")) {\n          var imgId = new Date().getTime();\n          $(cell).attr(\"data-tableexport-canvas\", imgId);\n          teOptions.images[imgId] = {\n            url: '[data-tableexport-canvas=\"' + imgId + '\"]',\n            src: null\n          };\n        } else if (elements !== \"undefined\" && elements != null) {\n          elements.each(function () {\n            if ($(this).is(\"img\")) {\n              var _imgId = strHashCode(this.src);\n              teOptions.images[_imgId] = {\n                url: this.src,\n                src: this.src\n              };\n            }\n            collectImages(cell, $(this).children(), teOptions);\n          });\n        }\n      }\n    }\n    function loadImages(teOptions, callback) {\n      var imageCount = 0;\n      var pendingCount = 0;\n      function done() {\n        callback(imageCount);\n      }\n      function loadImage(image) {\n        if (image.url) {\n          if (!image.src) {\n            var $imgContainer = $(image.url);\n            if ($imgContainer.length) {\n              imageCount = ++pendingCount;\n              html2canvas($imgContainer[0]).then(function (canvas) {\n                image.src = canvas.toDataURL(\"image/png\");\n                if (! --pendingCount) done();\n              });\n            }\n          } else {\n            var img = new Image();\n            imageCount = ++pendingCount;\n            img.crossOrigin = \"Anonymous\";\n            img.onerror = img.onload = function () {\n              if (img.complete) {\n                if (img.src.indexOf(\"data:image/\") === 0) {\n                  img.width = image.width || img.width || 0;\n                  img.height = image.height || img.height || 0;\n                }\n                if (img.width + img.height) {\n                  var canvas = document.createElement(\"canvas\");\n                  var ctx = canvas.getContext(\"2d\");\n                  canvas.width = img.width;\n                  canvas.height = img.height;\n                  ctx.drawImage(img, 0, 0);\n                  image.src = canvas.toDataURL(\"image/png\");\n                }\n              }\n              if (! --pendingCount) done();\n            };\n            img.src = image.url;\n          }\n        }\n      }\n      if (typeof teOptions.images !== \"undefined\") {\n        for (var i in teOptions.images) if (teOptions.images.hasOwnProperty(i)) loadImage(teOptions.images[i]);\n      }\n      return pendingCount || done();\n    }\n    function drawAutotableElements(cell, elements, teOptions) {\n      elements.each(function () {\n        if ($(this).is(\"div\")) {\n          var bColor = rgb2array(getStyle(this, \"background-color\"), [255, 255, 255]);\n          var lColor = rgb2array(getStyle(this, \"border-top-color\"), [0, 0, 0]);\n          var lWidth = getPropertyUnitValue(this, \"border-top-width\", defaults.jspdf.unit);\n          var r = this.getBoundingClientRect();\n          var ux = this.offsetLeft * teOptions.wScaleFactor;\n          var uy = this.offsetTop * teOptions.hScaleFactor;\n          var uw = r.width * teOptions.wScaleFactor;\n          var uh = r.height * teOptions.hScaleFactor;\n          teOptions.doc.setDrawColor.apply(undefined, lColor);\n          teOptions.doc.setFillColor.apply(undefined, bColor);\n          teOptions.doc.setLineWidth(lWidth);\n          teOptions.doc.rect(cell.x + ux, cell.y + uy, uw, uh, lWidth ? \"FD\" : \"F\");\n        } else if ($(this).is(\"img\")) {\n          var imgId = strHashCode(this.src);\n          jsPdfDrawImage(cell, this, imgId, teOptions);\n        }\n        drawAutotableElements(cell, $(this).children(), teOptions);\n      });\n    }\n    function drawAutotableText(cell, texttags, teOptions) {\n      if (typeof teOptions.onAutotableText === \"function\") {\n        teOptions.onAutotableText(teOptions.doc, cell, texttags);\n      } else {\n        var x = cell.textPos.x;\n        var y = cell.textPos.y;\n        var style = {\n          halign: cell.styles.halign,\n          valign: cell.styles.valign\n        };\n        if (texttags.length) {\n          var tag = texttags[0];\n          while (tag.previousSibling) tag = tag.previousSibling;\n          var b = false,\n            i = false;\n          while (tag) {\n            var txt = tag.innerText || tag.textContent || \"\";\n            var leadingSpace = txt.length && txt[0] === \" \" ? \" \" : \"\";\n            var trailingSpace = txt.length > 1 && txt[txt.length - 1] === \" \" ? \" \" : \"\";\n            if (defaults.preserve.leadingWS !== true) txt = leadingSpace + trimLeft(txt);\n            if (defaults.preserve.trailingWS !== true) txt = trimRight(txt) + trailingSpace;\n            if ($(tag).is(\"br\")) {\n              x = cell.textPos.x;\n              y += teOptions.doc.internal.getFontSize();\n            }\n            if ($(tag).is(\"b\")) b = true;else if ($(tag).is(\"i\")) i = true;\n            if (b || i) teOptions.doc.setFont(\"undefined \", b && i ? \"bolditalic\" : b ? \"bold\" : \"italic\");\n            var w = teOptions.doc.getStringUnitWidth(txt) * teOptions.doc.internal.getFontSize();\n            if (w) {\n              if (cell.styles.overflow === \"linebreak\" && x > cell.textPos.x && x + w > cell.textPos.x + cell.width) {\n                var chars = \".,!%*;:=-\";\n                if (chars.indexOf(txt.charAt(0)) >= 0) {\n                  var s = txt.charAt(0);\n                  w = teOptions.doc.getStringUnitWidth(s) * teOptions.doc.internal.getFontSize();\n                  if (x + w <= cell.textPos.x + cell.width) {\n                    jsPdfAutoTableText(s, x, y, style);\n                    txt = txt.substring(1, txt.length);\n                  }\n                  w = teOptions.doc.getStringUnitWidth(txt) * teOptions.doc.internal.getFontSize();\n                }\n                x = cell.textPos.x;\n                y += teOptions.doc.internal.getFontSize();\n              }\n              if (cell.styles.overflow !== \"visible\") {\n                while (txt.length && x + w > cell.textPos.x + cell.width) {\n                  txt = txt.substring(0, txt.length - 1);\n                  w = teOptions.doc.getStringUnitWidth(txt) * teOptions.doc.internal.getFontSize();\n                }\n              }\n              jsPdfAutoTableText(txt, x, y, style);\n              x += w;\n            }\n            if (b || i) {\n              if ($(tag).is(\"b\")) b = false;else if ($(tag).is(\"i\")) i = false;\n              teOptions.doc.setFont(\"undefined \", !b && !i ? \"normal\" : b ? \"bold\" : \"italic\");\n            }\n            tag = tag.nextSibling;\n          }\n          cell.textPos.x = x;\n          cell.textPos.y = y;\n        } else {\n          jsPdfAutoTableText(cell.text, cell.textPos.x, cell.textPos.y, style);\n        }\n      }\n    }\n    function escapeRegExp(string) {\n      return string == null ? \"\" : string.toString().replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n    }\n    function replaceAll(string, find, replace) {\n      return string == null ? \"\" : string.toString().replace(new RegExp(escapeRegExp(find), \"g\"), replace);\n    }\n    function trimLeft(string) {\n      return string == null ? \"\" : string.toString().replace(/^\\s+/, \"\");\n    }\n    function trimRight(string) {\n      return string == null ? \"\" : string.toString().replace(/\\s+$/, \"\");\n    }\n    function parseDateUTC(s) {\n      if (defaults.date.html.length === 0) return false;\n      defaults.date.pattern.lastIndex = 0;\n      var match = defaults.date.pattern.exec(s);\n      if (match == null) return false;\n      var y = +match[defaults.date.match_y];\n      if (y < 0 || y > 8099) return false;\n      var m = match[defaults.date.match_m] * 1;\n      var d = match[defaults.date.match_d] * 1;\n      if (!isFinite(d)) return false;\n      var o = new Date(y, m - 1, d, 0, 0, 0);\n      if (o.getFullYear() === y && o.getMonth() === m - 1 && o.getDate() === d) return new Date(Date.UTC(y, m - 1, d, 0, 0, 0));else return false;\n    }\n    function parseNumber(value) {\n      value = value || \"0\";\n      if (\"\" !== defaults.numbers.html.thousandsSeparator) value = replaceAll(value, defaults.numbers.html.thousandsSeparator, \"\");\n      if (\".\" !== defaults.numbers.html.decimalMark) value = replaceAll(value, defaults.numbers.html.decimalMark, \".\");\n      return typeof value === \"number\" || jquery__WEBPACK_IMPORTED_MODULE_0__.isNumeric(value) !== false ? value : false;\n    }\n    function parsePercent(value) {\n      if (value.indexOf(\"%\") > -1) {\n        value = parseNumber(value.replace(/%/g, \"\"));\n        if (value !== false) value = value / 100;\n      } else value = false;\n      return value;\n    }\n    function parseString(cell, rowIndex, colIndex, cellInfo) {\n      var result = \"\";\n      var cellType = \"text\";\n      if (cell !== null) {\n        var $cell = $(cell);\n        var htmlData;\n        $cell.removeData(\"teUserDefText\");\n        if ($cell[0].hasAttribute(\"data-tableexport-canvas\")) {\n          htmlData = \"\";\n        } else if ($cell[0].hasAttribute(\"data-tableexport-value\")) {\n          htmlData = $cell.attr(\"data-tableexport-value\");\n          htmlData = htmlData ? htmlData + \"\" : \"\";\n          $cell.data(\"teUserDefText\", 1);\n        } else {\n          htmlData = $cell.html();\n          if (typeof defaults.onCellHtmlData === \"function\") {\n            htmlData = defaults.onCellHtmlData($cell, rowIndex, colIndex, htmlData);\n            $cell.data(\"teUserDefText\", 1);\n          } else if (htmlData !== \"\") {\n            var html = $.parseHTML(\"<div>\" + htmlData + \"</div>\", null, false);\n            var inputIndex = 0;\n            var selectIndex = 0;\n            htmlData = \"\";\n            $.each(html, function () {\n              if ($(this).is(\"input\")) {\n                htmlData += $cell.find(\"input\").eq(inputIndex++).val();\n              } else if ($(this).is(\"select\")) {\n                htmlData += $cell.find(\"select option:selected\").eq(selectIndex++).text();\n              } else if ($(this).is(\"br\")) {\n                htmlData += \"<br>\";\n              } else {\n                if (typeof $(this).html() === \"undefined\") htmlData += $(this).text();else if (jquery__WEBPACK_IMPORTED_MODULE_0__().bootstrapTable === undefined || $(this).hasClass(\"fht-cell\") === false &&\n                // BT 4\n                $(this).hasClass(\"filterControl\") === false && $cell.parents(\".detail-view\").length === 0) htmlData += $(this).html();\n                if ($(this).is(\"a\")) {\n                  var href = $cell.find(\"a\").attr(\"href\") || \"\";\n                  if (typeof defaults.onCellHtmlHyperlink === \"function\") {\n                    result += defaults.onCellHtmlHyperlink($cell, rowIndex, colIndex, href, htmlData);\n                  } else if (defaults.htmlHyperlink === \"href\") {\n                    result += href;\n                  } else {\n                    // 'content'\n                    result += htmlData;\n                  }\n                  htmlData = \"\";\n                }\n              }\n            });\n          }\n        }\n        if (htmlData && htmlData !== \"\" && defaults.htmlContent === true) {\n          result = $.trim(htmlData);\n        } else if (htmlData && htmlData !== \"\") {\n          var cellFormat = $cell.attr(\"data-tableexport-cellformat\");\n          if (cellFormat !== \"\") {\n            var text = htmlData.replace(/\\n/g, \"\\u2028\").replace(/(<\\s*br([^>]*)>)/gi, \"\\u2060\");\n            var obj = $(\"<div/>\").html(text).contents();\n            var number = false;\n            text = \"\";\n            $.each(obj.text().split(\"\\u2028\"), function (i, v) {\n              if (i > 0) text += \" \";\n              if (defaults.preserve.leadingWS !== true) v = trimLeft(v);\n              text += defaults.preserve.trailingWS !== true ? trimRight(v) : v;\n            });\n            $.each(text.split(\"\\u2060\"), function (i, v) {\n              if (i > 0) result += \"\\n\";\n              if (defaults.preserve.leadingWS !== true) v = trimLeft(v);\n              if (defaults.preserve.trailingWS !== true) v = trimRight(v);\n              result += v.replace(/\\u00AD/g, \"\"); // remove soft hyphens\n            });\n\n            result = result.replace(/\\u00A0/g, \" \"); // replace nbsp's with spaces\n\n            if (defaults.type === \"json\" || defaults.type === \"excel\" && defaults.mso.fileFormat === \"xmlss\" || defaults.numbers.output === false) {\n              number = parseNumber(result);\n              if (number !== false) {\n                cellType = \"number\";\n                result = Number(number);\n              }\n            } else if (defaults.numbers.html.decimalMark !== defaults.numbers.output.decimalMark || defaults.numbers.html.thousandsSeparator !== defaults.numbers.output.thousandsSeparator) {\n              number = parseNumber(result);\n              if (number !== false) {\n                var frac = (\"\" + number.substr(number < 0 ? 1 : 0)).split(\".\");\n                if (frac.length === 1) frac[1] = \"\";\n                var mod = frac[0].length > 3 ? frac[0].length % 3 : 0;\n                cellType = \"number\";\n                result = (number < 0 ? \"-\" : \"\") + (defaults.numbers.output.thousandsSeparator ? (mod ? frac[0].substr(0, mod) + defaults.numbers.output.thousandsSeparator : \"\") + frac[0].substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + defaults.numbers.output.thousandsSeparator) : frac[0]) + (frac[1].length ? defaults.numbers.output.decimalMark + frac[1] : \"\");\n              }\n            }\n          } else result = htmlData;\n        }\n        if (defaults.escape === true) {\n          //noinspection JSDeprecatedSymbols\n          result = escape(result);\n        }\n        if (typeof defaults.onCellData === \"function\") {\n          result = defaults.onCellData($cell, rowIndex, colIndex, result, cellType);\n          $cell.data(\"teUserDefText\", 1);\n        }\n      }\n      if (cellInfo !== undefined) cellInfo.type = cellType;\n      return result;\n    }\n    function preventInjection(str) {\n      if (str.length > 0 && defaults.preventInjection === true) {\n        var chars = \"=+-@\";\n        if (chars.indexOf(str.charAt(0)) >= 0) return \"'\" + str;\n      }\n      return str;\n    }\n\n    //noinspection JSUnusedLocalSymbols\n    function hyphenate(a, b, c) {\n      return b + \"-\" + c.toLowerCase();\n    }\n    function rgb2array(rgb_string, default_result) {\n      var re = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\n      var bits = re.exec(rgb_string);\n      var result = default_result;\n      if (bits) result = [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3])];\n      return result;\n    }\n    function getCellStyles(cell) {\n      var a = getStyle(cell, \"text-align\");\n      var fw = getStyle(cell, \"font-weight\");\n      var fs = getStyle(cell, \"font-style\");\n      var f = \"\";\n      if (a === \"start\") a = getStyle(cell, \"direction\") === \"rtl\" ? \"right\" : \"left\";\n      if (fw >= 700) f = \"bold\";\n      if (fs === \"italic\") f += fs;\n      if (f === \"\") f = \"normal\";\n      var result = {\n        style: {\n          align: a,\n          bcolor: rgb2array(getStyle(cell, \"background-color\"), [255, 255, 255]),\n          color: rgb2array(getStyle(cell, \"color\"), [0, 0, 0]),\n          fstyle: f\n        },\n        colspan: getColspan(cell),\n        rowspan: getRowspan(cell)\n      };\n      if (cell !== null) {\n        var r = cell.getBoundingClientRect();\n        result.rect = {\n          width: r.width,\n          height: r.height\n        };\n      }\n      return result;\n    }\n    function getColspan(cell) {\n      var result = $(cell).attr(\"data-tableexport-colspan\");\n      if (typeof result === \"undefined\" && $(cell).is(\"[colspan]\")) result = $(cell).attr(\"colspan\");\n      return parseInt(result) || 0;\n    }\n    function getRowspan(cell) {\n      var result = $(cell).attr(\"data-tableexport-rowspan\");\n      if (typeof result === \"undefined\" && $(cell).is(\"[rowspan]\")) result = $(cell).attr(\"rowspan\");\n      return parseInt(result) || 0;\n    }\n\n    // get computed style property\n    function getStyle(target, prop) {\n      try {\n        if (window.getComputedStyle) {\n          // gecko and webkit\n          prop = prop.replace(/([a-z])([A-Z])/, hyphenate); // requires hyphenated, not camel\n\n          if (_typeof(target) === \"object\" && target.nodeType !== undefined) return window.getComputedStyle(target, null).getPropertyValue(prop);\n          if (_typeof(target) === \"object\" && target.length) return target.getPropertyValue(prop);\n          return \"\";\n        }\n        if (target.currentStyle) {\n          // ie\n          return target.currentStyle[prop];\n        }\n        return target.style[prop];\n      } catch (e) {}\n      return \"\";\n    }\n    function getUnitValue(parent, value, unit) {\n      var baseline = 100; // any number serves\n\n      var temp = document.createElement(\"div\"); // create temporary element\n      temp.style.overflow = \"hidden\"; // in case baseline is set too low\n      temp.style.visibility = \"hidden\"; // no need to show it\n\n      parent.appendChild(temp); // insert it into the parent for em, ex and %\n\n      temp.style.width = baseline + unit;\n      var factor = baseline / temp.offsetWidth;\n      parent.removeChild(temp); // clean up\n\n      return value * factor;\n    }\n    function getPropertyUnitValue(target, prop, unit) {\n      var value = getStyle(target, prop); // get the computed style value\n\n      var numeric = value.match(/\\d+/); // get the numeric component\n      if (numeric !== null) {\n        numeric = numeric[0]; // get the string\n\n        return getUnitValue(target.parentElement, numeric, unit);\n      }\n      return 0;\n    }\n    function xlsxWorkbookToArrayBuffer(s) {\n      var buf = new ArrayBuffer(s.length);\n      var view = new Uint8Array(buf);\n      for (var i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xff;\n      return buf;\n    }\n    function xlsxTableToSheet(table) {\n      var ssfId;\n      var ws = {};\n      var rows = table.getElementsByTagName(\"tr\");\n      var sheetRows = Math.min(10000000, rows.length);\n      var range = {\n        s: {\n          r: 0,\n          c: 0\n        },\n        e: {\n          r: 0,\n          c: 0\n        }\n      };\n      var merges = [],\n        midx = 0;\n      var _R = 0,\n        R = 0,\n        _C = 0,\n        C = 0,\n        RS = 0,\n        CS = 0;\n      var elt;\n      var ssfTable = XLSX.SSF.get_table();\n      for (; _R < rows.length && R < sheetRows; ++_R) {\n        var row = rows[_R];\n        var ignoreRow = false;\n        if (typeof defaults.onIgnoreRow === \"function\") ignoreRow = defaults.onIgnoreRow($(row), _R);\n        if (ignoreRow === true || defaults.ignoreRow.length !== 0 && ($.inArray(_R, defaults.ignoreRow) !== -1 || $.inArray(_R - rows.length, defaults.ignoreRow) !== -1) || isVisible($(row)) === false) {\n          continue;\n        }\n        var elts = row.children;\n        var _CLength = 0;\n        for (_C = 0; _C < elts.length; ++_C) {\n          elt = elts[_C];\n          CS = +getColspan(elt) || 1;\n          _CLength += CS;\n        }\n        var CSOffset = 0;\n        for (_C = C = 0; _C < elts.length; ++_C) {\n          elt = elts[_C];\n          CS = +getColspan(elt) || 1;\n          var col = _C + CSOffset;\n          if (isColumnIgnored($(elt), _CLength, col + (col < C ? C - col : 0))) continue;\n          CSOffset += CS - 1;\n          for (midx = 0; midx < merges.length; ++midx) {\n            var m = merges[midx];\n            if (m.s.c == C && m.s.r <= R && R <= m.e.r) {\n              C = m.e.c + 1;\n              midx = -1;\n            }\n          }\n          if ((RS = +getRowspan(elt)) > 0 || CS > 1) merges.push({\n            s: {\n              r: R,\n              c: C\n            },\n            e: {\n              r: R + (RS || 1) - 1,\n              c: C + CS - 1\n            }\n          });\n          var cellInfo = {\n            type: \"\"\n          };\n          var v = parseString(elt, _R, _C + CSOffset, cellInfo);\n          var o = {\n            t: \"s\",\n            v: v\n          };\n          var _t = \"\";\n          var cellFormat = $(elt).attr(\"data-tableexport-cellformat\") || undefined;\n          if (cellFormat !== \"\") {\n            ssfId = parseInt($(elt).attr(\"data-tableexport-xlsxformatid\") || 0);\n            if (ssfId === 0 && typeof defaults.mso.xlsx.formatId.numbers === \"function\") ssfId = defaults.mso.xlsx.formatId.numbers($(elt), _R, _C + CSOffset);\n            if (ssfId === 0 && typeof defaults.mso.xlsx.formatId.date === \"function\") ssfId = defaults.mso.xlsx.formatId.date($(elt), _R, _C + CSOffset);\n            if (ssfId === 49 || ssfId === \"@\") _t = \"s\";else if (cellInfo.type === \"number\" || ssfId > 0 && ssfId < 14 || ssfId > 36 && ssfId < 41 || ssfId === 48) _t = \"n\";else if (cellInfo.type === \"date\" || ssfId > 13 && ssfId < 37 || ssfId > 44 && ssfId < 48 || ssfId === 56) _t = \"d\";\n          } else _t = \"s\";\n          if (v != null) {\n            var vd = void 0;\n            if (v.length === 0) {\n              o.t = \"z\";\n            } else if (v.trim().length === 0) {} else if (_t === \"s\") {} else if (cellInfo.type === \"function\") {\n              o = {\n                f: v\n              };\n            } else if (v === \"TRUE\") {\n              o = {\n                t: \"b\",\n                v: true\n              };\n            } else if (v === \"FALSE\") {\n              o = {\n                t: \"b\",\n                v: false\n              };\n            } else if (_t === \"n\" || isFinite(xlsxToNumber(v, defaults.numbers.output))) {\n              // yes, defaults.numbers.output is right\n              var vn = xlsxToNumber(v, defaults.numbers.output);\n              if (ssfId === 0 && typeof defaults.mso.xlsx.formatId.numbers !== \"function\") {\n                ssfId = defaults.mso.xlsx.formatId.numbers;\n              }\n              if (isFinite(vn) || isFinite(v)) o = {\n                t: \"n\",\n                v: isFinite(vn) ? vn : v,\n                z: typeof ssfId === \"string\" ? ssfId : ssfId in ssfTable ? ssfTable[ssfId] : ssfId === defaults.mso.xlsx.formatId.currency ? defaults.mso.xlsx.format.currency : \"0.00\"\n              };\n            } else if ((vd = parseDateUTC(v)) !== false || _t === \"d\") {\n              if (ssfId === 0 && typeof defaults.mso.xlsx.formatId.date !== \"function\") {\n                ssfId = defaults.mso.xlsx.formatId.date;\n              }\n              o = {\n                t: \"d\",\n                v: vd !== false ? vd : v,\n                z: typeof ssfId === \"string\" ? ssfId : ssfId in ssfTable ? ssfTable[ssfId] : \"m/d/yy\"\n              };\n            }\n            var $aTag = $(elt).find(\"a\");\n            if ($aTag && $aTag.length) {\n              var href = $aTag[0].hasAttribute(\"href\") ? $aTag.attr(\"href\") : \"\";\n              var content = defaults.htmlHyperlink !== \"href\" || href === \"\" ? v : \"\";\n              var hyperlink = href !== \"\" ? '=HYPERLINK(\"' + href + (content.length ? '\",\"' + content : \"\") + '\")' : \"\";\n              if (hyperlink !== \"\") {\n                if (typeof defaults.mso.xlsx.onHyperlink === \"function\") {\n                  v = defaults.mso.xlsx.onHyperlink($(elt), _R, _C, href, content, hyperlink);\n                  if (v.indexOf(\"=HYPERLINK\") !== 0) {\n                    o = {\n                      t: \"s\",\n                      v: v\n                    };\n                  } else {\n                    o = {\n                      f: v\n                    };\n                  }\n                } else {\n                  o = {\n                    f: hyperlink\n                  };\n                }\n              }\n            }\n          }\n          ws[xlsxEncodeCell({\n            c: C,\n            r: R\n          })] = o;\n          if (range.e.c < C) {\n            range.e.c = C;\n          }\n          C += CS;\n        }\n        ++R;\n      }\n      if (merges.length) {\n        ws[\"!merges\"] = (ws[\"!merges\"] || []).concat(merges);\n      }\n      range.e.r = Math.max(range.e.r, R - 1);\n      ws[\"!ref\"] = xlsxEncodeRange(range);\n      if (R >= sheetRows) {\n        ws[\"!fullref\"] = xlsxEncodeRange((range.e.r = rows.length - _R + R - 1, range));\n      }\n      return ws;\n    }\n    function xlsxEncodeRow(row) {\n      return \"\" + (row + 1);\n    }\n    function xlsxEncodeCol(col) {\n      var s = \"\";\n      for (++col; col; col = Math.floor((col - 1) / 26)) {\n        s = String.fromCharCode((col - 1) % 26 + 65) + s;\n      }\n      return s;\n    }\n    function xlsxEncodeCell(cell) {\n      return xlsxEncodeCol(cell.c) + xlsxEncodeRow(cell.r);\n    }\n    function xlsxEncodeRange(cs, ce) {\n      if (typeof ce === \"undefined\" || typeof ce === \"number\") {\n        return xlsxEncodeRange(cs.s, cs.e);\n      }\n      if (typeof cs !== \"string\") {\n        cs = xlsxEncodeCell(cs);\n      }\n      if (typeof ce !== \"string\") {\n        ce = xlsxEncodeCell(ce);\n      }\n      return cs === ce ? cs : cs + \":\" + ce;\n    }\n    function xlsxToNumber(s, numbersFormat) {\n      var v = Number(s);\n      if (isFinite(v)) return v;\n      var wt = 1;\n      var ss = s;\n      if (\"\" !== numbersFormat.thousandsSeparator) ss = ss.replace(new RegExp(\"([\\\\d])\" + numbersFormat.thousandsSeparator + \"([\\\\d])\", \"g\"), \"$1$2\");\n      if (\".\" !== numbersFormat.decimalMark) ss = ss.replace(new RegExp(\"([\\\\d])\" + numbersFormat.decimalMark + \"([\\\\d])\", \"g\"), \"$1.$2\");\n      ss = ss.replace(/[$]/g, \"\").replace(/[%]/g, function () {\n        wt *= 100;\n        return \"\";\n      });\n      if (isFinite(v = Number(ss))) return v / wt;\n      ss = ss.replace(/[(](.*)[)]/, function ($$, $1) {\n        wt = -wt;\n        return $1;\n      });\n      if (isFinite(v = Number(ss))) return v / wt;\n      return v;\n    }\n    function strHashCode(str) {\n      var hash = 0,\n        i,\n        chr,\n        len;\n      if (str.length === 0) return hash;\n      for (i = 0, len = str.length; i < len; i++) {\n        chr = str.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n      }\n\n      return hash;\n    }\n    function saveToFile(data, fileName, type, charset, encoding, bom) {\n      var saveIt = true;\n      if (typeof defaults.onBeforeSaveToFile === \"function\") {\n        saveIt = defaults.onBeforeSaveToFile(data, fileName, type, charset, encoding);\n        if (typeof saveIt !== \"boolean\") saveIt = true;\n      }\n      if (saveIt) {\n        try {\n          if (bom) blob = new Blob([String.fromCharCode(0xfeff), [data]], {\n            type: type + \";charset=\" + charset\n          });else blob = new Blob([data], {\n            type: type + \";charset=\" + charset\n          });\n          saveAs(blob, fileName, {\n            autoBom: false\n          });\n          if (typeof defaults.onAfterSaveToFile === \"function\") defaults.onAfterSaveToFile(data, fileName);\n        } catch (e) {\n          downloadFile(fileName, \"data:\" + type + (charset.length ? \";charset=\" + charset : \"\") + (encoding.length ? \";\" + encoding : \"\") + \",\", bom ? \"\\uFEFF\" + data : data);\n        }\n      }\n    }\n    function downloadFile(filename, header, data) {\n      var ua = window.navigator.userAgent;\n      if (filename !== false && window.navigator.msSaveOrOpenBlob) {\n        //noinspection JSUnresolvedFunction\n        window.navigator.msSaveOrOpenBlob(new Blob([data]), filename);\n      } else if (filename !== false && (ua.indexOf(\"MSIE \") > 0 || !!ua.match(/Trident.*rv\\:11\\./))) {\n        // Internet Explorer (<= 9) workaround by Darryl (https://github.com/dawiong/tableExport.jquery.plugin)\n        // based on sampopes answer on http://stackoverflow.com/questions/22317951\n        // ! Not working for json and pdf format !\n        var frame = document.createElement(\"iframe\");\n        if (frame) {\n          document.body.appendChild(frame);\n          frame.setAttribute(\"style\", \"display:none\");\n          frame.contentDocument.open(\"txt/plain\", \"replace\");\n          frame.contentDocument.write(data);\n          frame.contentDocument.close();\n          frame.contentWindow.focus();\n          var extension = filename.substr(filename.lastIndexOf(\".\") + 1);\n          switch (extension) {\n            case \"doc\":\n            case \"json\":\n            case \"png\":\n            case \"pdf\":\n            case \"xls\":\n            case \"xlsx\":\n              filename += \".txt\";\n              break;\n          }\n          frame.contentDocument.execCommand(\"SaveAs\", true, filename);\n          document.body.removeChild(frame);\n        }\n      } else {\n        var DownloadLink = document.createElement(\"a\");\n        if (DownloadLink) {\n          var blobUrl = null;\n          DownloadLink.style.display = \"none\";\n          if (filename !== false) DownloadLink.download = filename;else DownloadLink.target = \"_blank\";\n          if (_typeof(data) === \"object\") {\n            window.URL = window.URL || window.webkitURL;\n            var binaryData = [];\n            binaryData.push(data);\n            blobUrl = window.URL.createObjectURL(new Blob(binaryData, {\n              type: header\n            }));\n            DownloadLink.href = blobUrl;\n          } else if (header.toLowerCase().indexOf(\"base64,\") >= 0) {\n            DownloadLink.href = header + base64encode(data);\n          } else {\n            DownloadLink.href = header + encodeURIComponent(data);\n          }\n          document.body.appendChild(DownloadLink);\n          if (document.createEvent) {\n            if (DownloadEvt === null) DownloadEvt = document.createEvent(\"MouseEvents\");\n            DownloadEvt.initEvent(\"click\", true, false);\n            DownloadLink.dispatchEvent(DownloadEvt);\n          } else if (document.createEventObject) DownloadLink.fireEvent(\"onclick\");else if (typeof DownloadLink.onclick === \"function\") DownloadLink.onclick();\n          setTimeout(function () {\n            if (blobUrl) window.URL.revokeObjectURL(blobUrl);\n            document.body.removeChild(DownloadLink);\n            if (typeof defaults.onAfterSaveToFile === \"function\") defaults.onAfterSaveToFile(data, filename);\n          }, 100);\n        }\n      }\n    }\n    function utf8Encode(text) {\n      if (typeof text === \"string\") {\n        text = text.replace(/\\x0d\\x0a/g, \"\\x0a\");\n        var utfText = \"\";\n        for (var _n = 0; _n < text.length; _n++) {\n          var _c3 = text.charCodeAt(_n);\n          if (_c3 < 128) {\n            utfText += String.fromCharCode(_c3);\n          } else if (_c3 > 127 && _c3 < 2048) {\n            utfText += String.fromCharCode(_c3 >> 6 | 192);\n            utfText += String.fromCharCode(_c3 & 63 | 128);\n          } else {\n            utfText += String.fromCharCode(_c3 >> 12 | 224);\n            utfText += String.fromCharCode(_c3 >> 6 & 63 | 128);\n            utfText += String.fromCharCode(_c3 & 63 | 128);\n          }\n        }\n        return utfText;\n      }\n      return text;\n    }\n    function base64encode(input) {\n      var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n      var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var output = \"\";\n      var i = 0;\n      input = utf8Encode(input);\n      while (i < input.length) {\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n        output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n      }\n      return output;\n    }\n\n    // ----------------------------------------------------------------------------------------------------\n    // jsPDF-AutoTable 2.0.17 - BEGIN\n    // Adopted and adapted source code from https://github.com/simonbengtsson/jsPDF-AutoTable\n    // ----------------------------------------------------------------------------------------------------\n\n    var jsPdfDoc,\n      // The current jspdf instance\n      jsPdfCursor,\n      // An object keeping track of the x and y position of the next table cell to draw\n      jsPdfSettings,\n      // Default options merged with user options\n      jsPdfPageCount,\n      // The  page count the current table spans\n      jsPdfTable; // The current Table instance\n\n    function jsPdfAutoTable(doc, headers, data, options) {\n      jsPdfValidateInput(headers, data, options);\n      jsPdfDoc = doc;\n      jsPdfSettings = jsPdfInitOptions(options || {});\n      jsPdfPageCount = 1;\n\n      // Need a cursor y as it needs to be reset after each page (row.y can't do that)\n      jsPdfCursor = {\n        y: jsPdfSettings.startY === false ? jsPdfSettings.margin.top : jsPdfSettings.startY\n      };\n      var userStyles = {\n        textColor: 30,\n        // Setting text color to dark gray as it can't be obtained from jsPDF\n        fontSize: jsPdfDoc.internal.getFontSize(),\n        fontStyle: jsPdfDoc.internal.getFont().fontStyle,\n        fontName: jsPdfDoc.internal.getFont().fontName\n      };\n\n      // Create the table model with its columns, rows and cells\n      jsPdfCreateModels(headers, data);\n      jsPdfCalculateWidths();\n\n      // Page break if there is room for only the first data row\n      var firstRowHeight = jsPdfTable.rows[0] && jsPdfSettings.pageBreak === \"auto\" ? jsPdfTable.rows[0].height : 0;\n      var minTableBottomPos = jsPdfSettings.startY + jsPdfSettings.margin.bottom + jsPdfTable.headerRow.height + firstRowHeight;\n      if (jsPdfSettings.pageBreak === \"avoid\") {\n        minTableBottomPos += jsPdfTable.height;\n      }\n      if (jsPdfSettings.pageBreak === \"always\" && jsPdfSettings.startY !== false || jsPdfSettings.startY !== false && minTableBottomPos > jsPdfDoc.internal.pageSize.height) {\n        jsPdfDoc.addPage();\n        jsPdfCursor.y = jsPdfSettings.margin.top;\n      }\n      jsPdfApplyStyles(userStyles);\n      jsPdfSettings.beforePageContent(jsPdfHooksData());\n      if (jsPdfSettings.drawHeaderRow(jsPdfTable.headerRow, jsPdfHooksData({\n        row: jsPdfTable.headerRow\n      })) !== false) {\n        jsPdfPrintRow(jsPdfTable.headerRow, jsPdfSettings.drawHeaderCell);\n      }\n      jsPdfApplyStyles(userStyles);\n      jsPdfPrintRows();\n      jsPdfSettings.afterPageContent(jsPdfHooksData());\n      jsPdfApplyStyles(userStyles);\n      return jsPdfDoc;\n    }\n\n    /**\r\n     * Returns the Y position of the last drawn cell\r\n     * @returns int\r\n     */\n    function jsPdfAutoTableEndPosY() {\n      if (typeof jsPdfCursor === \"undefined\" || typeof jsPdfCursor.y === \"undefined\") {\n        return 0;\n      }\n      return jsPdfCursor.y;\n    }\n\n    /**\r\n     * Improved text function with halign and valign support\r\n     * Inspiration from:\r\n     * http://stackoverflow.com/questions/28327510/align-text-right-using-jspdf/28433113#28433113\r\n     */\n    function jsPdfAutoTableText(text, x, y, styles) {\n      if (typeof x !== \"number\" || typeof y !== \"number\") {\n        console.error(\"The x and y parameters are required. Missing for the text: \", text);\n      }\n      var fontSize = jsPdfDoc.internal.getFontSize() / jsPdfDoc.internal.scaleFactor;\n\n      // As defined in jsPDF source code\n      var lineHeightProportion = FONT_ROW_RATIO;\n      var splitRegex = /\\r\\n|\\r|\\n/g;\n      var splittedText = null;\n      var lineCount = 1;\n      if (styles.valign === \"middle\" || styles.valign === \"bottom\" || styles.halign === \"center\" || styles.halign === \"right\") {\n        splittedText = typeof text === \"string\" ? text.split(splitRegex) : text;\n        lineCount = splittedText.length || 1;\n      }\n\n      // Align the top\n      y += fontSize * (2 - lineHeightProportion);\n      if (styles.valign === \"middle\") y -= lineCount / 2 * fontSize;else if (styles.valign === \"bottom\") y -= lineCount * fontSize;\n      if (styles.halign === \"center\" || styles.halign === \"right\") {\n        var alignSize = fontSize;\n        if (styles.halign === \"center\") alignSize *= 0.5;\n        if (splittedText && lineCount >= 1) {\n          for (var iLine = 0; iLine < splittedText.length; iLine++) {\n            jsPdfDoc.text(splittedText[iLine], x - jsPdfDoc.getStringUnitWidth(splittedText[iLine]) * alignSize, y);\n            y += fontSize;\n          }\n          return jsPdfDoc;\n        }\n        x -= jsPdfDoc.getStringUnitWidth(text) * alignSize;\n      }\n      jsPdfDoc.text(text, x, y);\n      return jsPdfDoc;\n    }\n    function jsPdfValidateInput(headers, data, options) {\n      if (!headers || _typeof(headers) !== \"object\") {\n        console.error(\"The headers should be an object or array, is: \" + _typeof(headers));\n      }\n      if (!data || _typeof(data) !== \"object\") {\n        console.error(\"The data should be an object or array, is: \" + _typeof(data));\n      }\n      if (!!options && _typeof(options) !== \"object\") {\n        console.error(\"The data should be an object or array, is: \" + _typeof(data));\n      }\n      if (!Array.prototype.forEach) {\n        console.error(\"The current browser does not support Array.prototype.forEach which is required for jsPDF-AutoTable\");\n      }\n    }\n    function jsPdfInitOptions(userOptions) {\n      var settings = jsPdfExtend(jsPdfDefaultOptions(), userOptions);\n\n      // Options\n      if (typeof settings.extendWidth !== \"undefined\") {\n        settings.tableWidth = settings.extendWidth ? \"auto\" : \"wrap\";\n        console.error(\"Use of deprecated option: extendWidth, use tableWidth instead.\");\n      }\n      if (typeof settings.margins !== \"undefined\") {\n        if (typeof settings.margin === \"undefined\") settings.margin = settings.margins;\n        console.error(\"Use of deprecated option: margins, use margin instead.\");\n      }\n      [[\"padding\", \"cellPadding\"], [\"lineHeight\", \"rowHeight\"], \"fontSize\", \"overflow\"].forEach(function (o) {\n        var deprecatedOption = typeof o === \"string\" ? o : o[0];\n        var style = typeof o === \"string\" ? o : o[1];\n        if (typeof settings[deprecatedOption] !== \"undefined\") {\n          if (typeof settings.styles[style] === \"undefined\") {\n            settings.styles[style] = settings[deprecatedOption];\n          }\n          console.error(\"Use of deprecated option: \" + deprecatedOption + \", use the style \" + style + \" instead.\");\n        }\n      });\n\n      // Unifying\n      var marginSetting = settings.margin;\n      settings.margin = {};\n      if (typeof marginSetting.horizontal === \"number\") {\n        marginSetting.right = marginSetting.horizontal;\n        marginSetting.left = marginSetting.horizontal;\n      }\n      if (typeof marginSetting.vertical === \"number\") {\n        marginSetting.top = marginSetting.vertical;\n        marginSetting.bottom = marginSetting.vertical;\n      }\n      [\"top\", \"right\", \"bottom\", \"left\"].forEach(function (side, i) {\n        if (typeof marginSetting === \"number\") {\n          settings.margin[side] = marginSetting;\n        } else {\n          var key = Array.isArray(marginSetting) ? i : side;\n          settings.margin[side] = typeof marginSetting[key] === \"number\" ? marginSetting[key] : 40;\n        }\n      });\n      return settings;\n    }\n\n    /**\r\n     * Create models from the user input\r\n     *\r\n     * @param inputHeaders\r\n     * @param inputData\r\n     */\n    function jsPdfCreateModels(inputHeaders, inputData) {\n      jsPdfTable = new jsPdfTableClass();\n      jsPdfTable.x = jsPdfSettings.margin.left;\n      var splitRegex = /\\r\\n|\\r|\\n/g;\n\n      // Header row and columns\n      var headerRow = new jsPdfRowClass(inputHeaders);\n      headerRow.index = -1;\n      var themeStyles = jsPdfExtend(jsPdfDefaultStyles, jsPdfThemes[jsPdfSettings.theme].table, jsPdfThemes[jsPdfSettings.theme].header);\n      headerRow.styles = jsPdfExtend(themeStyles, jsPdfSettings.styles, jsPdfSettings.headerStyles);\n\n      // Columns and header row\n      inputHeaders.forEach(function (rawColumn, dataKey) {\n        if (_typeof(rawColumn) === \"object\") {\n          dataKey = typeof rawColumn.dataKey !== \"undefined\" ? rawColumn.dataKey : rawColumn.key;\n        }\n        if (typeof rawColumn.width !== \"undefined\") {\n          console.error(\"Use of deprecated option: column.width, use column.styles.columnWidth instead.\");\n        }\n        var col = new jsPdfColumnClass(dataKey);\n        col.styles = jsPdfSettings.columnStyles[col.dataKey] || {};\n        jsPdfTable.columns.push(col);\n        var cell = new jsPdfCellClass();\n        cell.raw = _typeof(rawColumn) === \"object\" ? rawColumn.title : rawColumn;\n\n        // jsPDF AutoTable plugin v2.0.14 fix: each cell needs its own styles object\n        //cell.styles = jsPdfExtend(headerRow.styles);\n        cell.styles = $.extend({}, headerRow.styles);\n        cell.text = \"\" + cell.raw;\n        cell.contentWidth = cell.styles.cellPadding * 2 + jsPdfGetStringWidth(cell.text, cell.styles);\n        cell.text = cell.text.split(splitRegex);\n        headerRow.cells[dataKey] = cell;\n        jsPdfSettings.createdHeaderCell(cell, {\n          column: col,\n          row: headerRow,\n          settings: jsPdfSettings\n        });\n      });\n      jsPdfTable.headerRow = headerRow;\n\n      // Rows och cells\n      inputData.forEach(function (rawRow, i) {\n        var row = new jsPdfRowClass(rawRow);\n        var isAlternate = i % 2 === 0;\n        var themeStyles = jsPdfExtend(jsPdfDefaultStyles, jsPdfThemes[jsPdfSettings.theme].table, isAlternate ? jsPdfThemes[jsPdfSettings.theme].alternateRow : {});\n        var userStyles = jsPdfExtend(jsPdfSettings.styles, jsPdfSettings.bodyStyles, isAlternate ? jsPdfSettings.alternateRowStyles : {});\n        row.styles = jsPdfExtend(themeStyles, userStyles);\n        row.index = i;\n        jsPdfTable.columns.forEach(function (column) {\n          var cell = new jsPdfCellClass();\n          cell.raw = rawRow[column.dataKey];\n          cell.styles = jsPdfExtend(row.styles, column.styles);\n          cell.text = typeof cell.raw !== \"undefined\" ? \"\" + cell.raw : \"\"; // Stringify 0 and false, but not undefined\n          row.cells[column.dataKey] = cell;\n          jsPdfSettings.createdCell(cell, jsPdfHooksData({\n            column: column,\n            row: row\n          }));\n          cell.contentWidth = cell.styles.cellPadding * 2 + jsPdfGetStringWidth(cell.text, cell.styles);\n          cell.text = cell.text.split(splitRegex);\n        });\n        jsPdfTable.rows.push(row);\n      });\n    }\n\n    /**\r\n     * Calculate the column widths\r\n     */\n    function jsPdfCalculateWidths() {\n      // Column and table content width\n      var tableContentWidth = 0;\n      jsPdfTable.columns.forEach(function (column) {\n        column.contentWidth = jsPdfTable.headerRow.cells[column.dataKey].contentWidth;\n        jsPdfTable.rows.forEach(function (row) {\n          var cellWidth = row.cells[column.dataKey].contentWidth;\n          if (cellWidth > column.contentWidth) {\n            column.contentWidth = cellWidth;\n          }\n        });\n        column.width = column.contentWidth;\n        tableContentWidth += column.contentWidth;\n      });\n      jsPdfTable.contentWidth = tableContentWidth;\n      var maxTableWidth = jsPdfDoc.internal.pageSize.width - jsPdfSettings.margin.left - jsPdfSettings.margin.right;\n      var preferredTableWidth = maxTableWidth; // settings.tableWidth === 'auto'\n      if (typeof jsPdfSettings.tableWidth === \"number\") {\n        preferredTableWidth = jsPdfSettings.tableWidth;\n      } else if (jsPdfSettings.tableWidth === \"wrap\") {\n        preferredTableWidth = jsPdfTable.contentWidth;\n      }\n      jsPdfTable.width = preferredTableWidth < maxTableWidth ? preferredTableWidth : maxTableWidth;\n\n      // To avoid subjecting columns with little content with the chosen overflow method,\n      // never shrink a column more than the table divided by column count (its \"fair part\")\n      var dynamicColumns = [];\n      var dynamicColumnsContentWidth = 0;\n      var fairWidth = jsPdfTable.width / jsPdfTable.columns.length;\n      var staticWidth = 0;\n      jsPdfTable.columns.forEach(function (column) {\n        var colStyles = jsPdfExtend(jsPdfDefaultStyles, jsPdfThemes[jsPdfSettings.theme].table, jsPdfSettings.styles, column.styles);\n        if (colStyles.columnWidth === \"wrap\") {\n          column.width = column.contentWidth;\n        } else if (typeof colStyles.columnWidth === \"number\") {\n          column.width = colStyles.columnWidth;\n        } else if (colStyles.columnWidth === \"auto\" || true) {\n          if (column.contentWidth <= fairWidth && jsPdfTable.contentWidth > jsPdfTable.width) {\n            column.width = column.contentWidth;\n          } else {\n            dynamicColumns.push(column);\n            dynamicColumnsContentWidth += column.contentWidth;\n            column.width = 0;\n          }\n        }\n        staticWidth += column.width;\n      });\n\n      // Distributes extra width or trims columns down to fit\n      jsPdfDistributeWidth(dynamicColumns, staticWidth, dynamicColumnsContentWidth, fairWidth);\n\n      // Row height, table height and text overflow\n      jsPdfTable.height = 0;\n      var all = jsPdfTable.rows.concat(jsPdfTable.headerRow);\n      all.forEach(function (row, i) {\n        var lineBreakCount = 0;\n        var cursorX = jsPdfTable.x;\n        jsPdfTable.columns.forEach(function (col) {\n          var cell = row.cells[col.dataKey];\n          col.x = cursorX;\n          jsPdfApplyStyles(cell.styles);\n          var textSpace = col.width - cell.styles.cellPadding * 2;\n          if (cell.styles.overflow === \"linebreak\") {\n            // Add one pt to textSpace to fix rounding error\n            cell.text = jsPdfDoc.splitTextToSize(cell.text, textSpace + 1, {\n              fontSize: cell.styles.fontSize\n            });\n          } else if (cell.styles.overflow === \"ellipsize\") {\n            cell.text = jsPdfEllipsize(cell.text, textSpace, cell.styles);\n          } else if (cell.styles.overflow === \"visible\") {\n            // Do nothing\n          } else if (cell.styles.overflow === \"hidden\") {\n            cell.text = jsPdfEllipsize(cell.text, textSpace, cell.styles, \"\");\n          } else if (typeof cell.styles.overflow === \"function\") {\n            cell.text = cell.styles.overflow(cell.text, textSpace);\n          } else {\n            console.error(\"Unrecognized overflow type: \" + cell.styles.overflow);\n          }\n          var count = Array.isArray(cell.text) ? cell.text.length - 1 : 0;\n          if (count > lineBreakCount) {\n            lineBreakCount = count;\n          }\n          cursorX += col.width;\n        });\n        row.heightStyle = row.styles.rowHeight;\n        // TODO Pick the highest row based on font size as well\n        row.height = row.heightStyle + lineBreakCount * row.styles.fontSize * FONT_ROW_RATIO + (2 - FONT_ROW_RATIO) / 2 * row.styles.fontSize; // Fix jsPDF Autotable's row height calculation\n\n        jsPdfTable.height += row.height;\n      });\n    }\n    function jsPdfDistributeWidth(dynamicColumns, staticWidth, dynamicColumnsContentWidth, fairWidth) {\n      var extraWidth = jsPdfTable.width - staticWidth - dynamicColumnsContentWidth;\n      for (var i = 0; i < dynamicColumns.length; i++) {\n        var col = dynamicColumns[i];\n        var ratio = col.contentWidth / dynamicColumnsContentWidth;\n        // A column turned out to be none dynamic, start over recursively\n        var isNoneDynamic = col.contentWidth + extraWidth * ratio < fairWidth;\n        if (extraWidth < 0 && isNoneDynamic) {\n          dynamicColumns.splice(i, 1);\n          dynamicColumnsContentWidth -= col.contentWidth;\n          col.width = fairWidth;\n          staticWidth += col.width;\n          jsPdfDistributeWidth(dynamicColumns, staticWidth, dynamicColumnsContentWidth, fairWidth);\n          break;\n        } else {\n          col.width = col.contentWidth + extraWidth * ratio;\n        }\n      }\n    }\n    function jsPdfPrintRows() {\n      jsPdfTable.rows.forEach(function (row, i) {\n        if (jsPdfIsNewPage(row.height)) {\n          jsPdfAddPage();\n        }\n        row.y = jsPdfCursor.y;\n        if (jsPdfSettings.drawRow(row, jsPdfHooksData({\n          row: row\n        })) !== false) {\n          jsPdfPrintRow(row, jsPdfSettings.drawCell);\n        }\n      });\n    }\n    function jsPdfAddPage() {\n      jsPdfSettings.afterPageContent(jsPdfHooksData());\n      jsPdfDoc.addPage();\n      jsPdfPageCount++;\n      jsPdfCursor = {\n        x: jsPdfSettings.margin.left,\n        y: jsPdfSettings.margin.top\n      };\n      jsPdfSettings.beforePageContent(jsPdfHooksData());\n      if (jsPdfSettings.drawHeaderRow(jsPdfTable.headerRow, jsPdfHooksData({\n        row: jsPdfTable.headerRow\n      })) !== false) {\n        jsPdfPrintRow(jsPdfTable.headerRow, jsPdfSettings.drawHeaderCell);\n      }\n    }\n\n    /**\r\n     * Add a new page if cursor is at the end of page\r\n     * @param rowHeight\r\n     * @returns {boolean}\r\n     */\n    function jsPdfIsNewPage(rowHeight) {\n      var afterRowPos = jsPdfCursor.y + rowHeight + jsPdfSettings.margin.bottom;\n      return afterRowPos >= jsPdfDoc.internal.pageSize.height;\n    }\n    function jsPdfPrintRow(row, hookHandler) {\n      for (var i = 0; i < jsPdfTable.columns.length; i++) {\n        var column = jsPdfTable.columns[i];\n        var cell = row.cells[column.dataKey];\n        if (!cell) {\n          continue;\n        }\n        jsPdfApplyStyles(cell.styles);\n        cell.x = column.x;\n        cell.y = jsPdfCursor.y;\n        cell.height = row.height;\n        cell.width = column.width;\n        if (cell.styles.valign === \"top\") {\n          cell.textPos.y = jsPdfCursor.y + cell.styles.cellPadding;\n        } else if (cell.styles.valign === \"bottom\") {\n          cell.textPos.y = jsPdfCursor.y + row.height - cell.styles.cellPadding;\n        } else {\n          cell.textPos.y = jsPdfCursor.y + row.height / 2;\n        }\n        if (cell.styles.halign === \"right\") {\n          cell.textPos.x = cell.x + cell.width - cell.styles.cellPadding;\n        } else if (cell.styles.halign === \"center\") {\n          cell.textPos.x = cell.x + cell.width / 2;\n        } else {\n          cell.textPos.x = cell.x + cell.styles.cellPadding;\n        }\n        var data = jsPdfHooksData({\n          column: column,\n          row: row\n        });\n        if (hookHandler(cell, data) !== false) {\n          jsPdfDoc.rect(cell.x, cell.y, cell.width, cell.height, cell.styles.fillStyle);\n          jsPdfAutoTableText(cell.text, cell.textPos.x, cell.textPos.y, {\n            halign: cell.styles.halign,\n            valign: cell.styles.valign\n          });\n        }\n      }\n      jsPdfCursor.y += row.height;\n    }\n    function jsPdfApplyStyles(styles) {\n      var arr = [{\n        func: jsPdfDoc.setFillColor,\n        value: styles.fillColor\n      }, {\n        func: jsPdfDoc.setTextColor,\n        value: styles.textColor\n      }, {\n        func: jsPdfDoc.setFont,\n        value: styles.font,\n        style: styles.fontStyle\n      }, {\n        func: jsPdfDoc.setDrawColor,\n        value: styles.lineColor\n      }, {\n        func: jsPdfDoc.setLineWidth,\n        value: styles.lineWidth\n      }, {\n        func: jsPdfDoc.setFont,\n        value: styles.font\n      }, {\n        func: jsPdfDoc.setFontSize,\n        value: styles.fontSize\n      }];\n      arr.forEach(function (obj) {\n        if (typeof obj.value !== \"undefined\") {\n          if (obj.value.constructor === Array) {\n            obj.func.apply(jsPdfDoc, obj.value);\n          } else if (typeof obj.style !== \"undefined\") {\n            obj.func(obj.value, obj.style);\n          } else {\n            obj.func(obj.value);\n          }\n        }\n      });\n    }\n    function jsPdfHooksData(additionalData) {\n      additionalData = additionalData || {};\n      var data = {\n        pageCount: jsPdfPageCount,\n        settings: jsPdfSettings,\n        table: jsPdfTable,\n        cursor: jsPdfCursor\n      };\n      for (var prop in additionalData) {\n        if (additionalData.hasOwnProperty(prop)) {\n          data[prop] = additionalData[prop];\n        }\n      }\n      return data;\n    }\n\n    /**\r\n     * Ellipsize the text to fit in the width\r\n     */\n    function jsPdfEllipsize(text, width, styles, ellipsizeStr) {\n      ellipsizeStr = typeof ellipsizeStr !== \"undefined\" ? ellipsizeStr : \"...\";\n      if (Array.isArray(text)) {\n        text.forEach(function (str, i) {\n          text[i] = jsPdfEllipsize(str, width, styles, ellipsizeStr);\n        });\n        return text;\n      }\n      if (width >= jsPdfGetStringWidth(text, styles)) {\n        return text;\n      }\n      while (width < jsPdfGetStringWidth(text + ellipsizeStr, styles)) {\n        if (text.length < 2) {\n          break;\n        }\n        text = text.substring(0, text.length - 1);\n      }\n      return text.trim() + ellipsizeStr;\n    }\n    function jsPdfGetStringWidth(text, styles) {\n      jsPdfApplyStyles(styles);\n      var w = jsPdfDoc.getStringUnitWidth(text);\n      return w * styles.fontSize;\n    }\n    function jsPdfExtend(defaults) {\n      var extended = {};\n      var prop;\n      for (prop in defaults) {\n        if (defaults.hasOwnProperty(prop)) {\n          extended[prop] = defaults[prop];\n        }\n      }\n      for (var i = 1; i < arguments.length; i++) {\n        var _options = arguments[i];\n        for (prop in _options) {\n          if (_options.hasOwnProperty(prop)) {\n            extended[prop] = _options[prop];\n          }\n        }\n      }\n      return extended;\n    }\n\n    // ----------------------------------------------------------------------------------------------------\n    // jsPDF-AutoTable 2.0.17 - END\n    // ----------------------------------------------------------------------------------------------------\n\n    if (typeof defaults.onTableExportEnd === \"function\") defaults.onTableExportEnd();\n    return this;\n  };\n\n  // See README.md for documentation of the options\n  // See examples.js for usage examples\n  function jsPdfDefaultOptions() {\n    return {\n      // Styling\n      theme: \"striped\",\n      // 'striped', 'grid' or 'plain'\n      styles: {},\n      headerStyles: {},\n      bodyStyles: {},\n      alternateRowStyles: {},\n      columnStyles: {},\n      // Properties\n      startY: false,\n      // false indicates the margin.top value\n      margin: 40,\n      pageBreak: \"auto\",\n      // 'auto', 'avoid', 'always'\n      tableWidth: \"auto\",\n      // number, 'auto', 'wrap'\n\n      // Hooks\n      createdHeaderCell: function createdHeaderCell(cell, data) {},\n      createdCell: function createdCell(cell, data) {},\n      drawHeaderRow: function drawHeaderRow(row, data) {},\n      drawRow: function drawRow(row, data) {},\n      drawHeaderCell: function drawHeaderCell(cell, data) {},\n      drawCell: function drawCell(cell, data) {},\n      beforePageContent: function beforePageContent(data) {},\n      afterPageContent: function afterPageContent(data) {}\n    };\n  }\n  var jsPdfTableClass = /** class */function () {\n    function jsPdfTableClass() {\n      /** constructor */\n      this.height = 0;\n      this.width = 0;\n      this.x = 0;\n      this.y = 0;\n      this.contentWidth = 0;\n      this.rows = [];\n      this.columns = [];\n      this.headerRow = null;\n      this.settings = {};\n    }\n    return jsPdfTableClass;\n  }();\n  var jsPdfRowClass = /** class */function () {\n    function jsPdfRowClass(raw) {\n      /** constructor */\n      this.raw = raw || {};\n      this.index = 0;\n      this.styles = {};\n      this.cells = {};\n      this.height = 0;\n      this.y = 0;\n    }\n    return jsPdfRowClass;\n  }();\n  var jsPdfCellClass = /** class */function () {\n    function jsPdfCellClass(raw) {\n      /** constructor */\n      this.raw = raw;\n      this.styles = {};\n      this.text = \"\";\n      this.contentWidth = 0;\n      this.textPos = {};\n      this.height = 0;\n      this.width = 0;\n      this.x = 0;\n      this.y = 0;\n    }\n    return jsPdfCellClass;\n  }();\n  var jsPdfColumnClass = /** class */function () {\n    function jsPdfColumnClass(dataKey) {\n      /** constructor */\n      this.dataKey = dataKey;\n      this.options = {};\n      this.styles = {};\n      this.contentWidth = 0;\n      this.width = 0;\n      this.x = 0;\n    }\n    return jsPdfColumnClass;\n  }();\n})(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n//# sourceURL=webpack://server-client/./src/utils/tableExport-utils/tableExport.js?");

/***/ }),

/***/ "./node_modules/datatables.net-dt/js/dataTables.dataTables.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/datatables.net-dt/js/dataTables.dataTables.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var datatables_net__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! datatables.net */ \"./node_modules/datatables.net/js/jquery.dataTables.mjs\");\n/*! DataTables styling integration\r\n * ©2018 SpryMedia Ltd - datatables.net/license\r\n */\r\n\r\n\r\n\r\n\r\n// Allow reassignment of the $ variable\r\nlet $ = jquery__WEBPACK_IMPORTED_MODULE_0__;\r\n\r\n\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (datatables_net__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/datatables.net-dt/js/dataTables.dataTables.mjs?");

/***/ }),

/***/ "./node_modules/datatables.net/js/jquery.dataTables.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/datatables.net/js/jquery.dataTables.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/*! DataTables 1.13.7\r\n * ©2008-2023 SpryMedia Ltd - datatables.net/license\r\n */\r\n\r\n\r\n\r\n// DataTables code uses $ internally, but we want to be able to\r\n// reassign $ with the `use` method, so it is a regular var.\r\nvar $ = jquery__WEBPACK_IMPORTED_MODULE_0__;\r\n\r\n\r\nvar DataTable = function ( selector, options )\r\n{\r\n\t// Check if called with a window or jQuery object for DOM less applications\r\n\t// This is for backwards compatibility\r\n\tif (DataTable.factory(selector, options)) {\r\n\t\treturn DataTable;\r\n\t}\r\n\r\n\t// When creating with `new`, create a new DataTable, returning the API instance\r\n\tif (this instanceof DataTable) {\r\n\t\treturn $(selector).DataTable(options);\r\n\t}\r\n\telse {\r\n\t\t// Argument switching\r\n\t\toptions = selector;\r\n\t}\r\n\r\n\t/**\r\n\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\r\n\t * return the resulting jQuery object.\r\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\r\n\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\r\n\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\r\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\r\n\t *    'original' whereby the original order the data was read into the table is used.\r\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\r\n\t *  @returns {object} jQuery object, filtered by the given selector.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Highlight every second row\r\n\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\r\n\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\r\n\t *      oTable.fnFilter('Webkit');\r\n\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\r\n\t *      oTable.fnFilter('');\r\n\t *    } );\r\n\t */\r\n\tthis.$ = function ( sSelector, oOpts )\r\n\t{\r\n\t\treturn this.api(true).$( sSelector, oOpts );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Almost identical to $ in operation, but in this case returns the data for the matched\r\n\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\r\n\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\r\n\t * rows are found, the data returned is the original data array/object that was used to\r\n\t * create the row (or a generated array if from a DOM source).\r\n\t *\r\n\t * This method is often useful in-combination with $ where both functions are given the\r\n\t * same parameters and the array indexes will match identically.\r\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\r\n\t *    criterion (\"applied\") or all elements (i.e. no filter).\r\n\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\r\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\r\n\t *    'original' whereby the original order the data was read into the table is used.\r\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\r\n\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\r\n\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\r\n\t *    entry in the array.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Get the data from the first row in the table\r\n\t *      var data = oTable._('tr:first');\r\n\t *\r\n\t *      // Do something useful with the data\r\n\t *      alert( \"First cell is: \"+data[0] );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Filter to 'Webkit' and get all data for\r\n\t *      oTable.fnFilter('Webkit');\r\n\t *      var data = oTable._('tr', {\"search\": \"applied\"});\r\n\t *\r\n\t *      // Do something with the data\r\n\t *      alert( data.length+\" rows matched the search\" );\r\n\t *    } );\r\n\t */\r\n\tthis._ = function ( sSelector, oOpts )\r\n\t{\r\n\t\treturn this.api(true).rows( sSelector, oOpts ).data();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a DataTables Api instance, with the currently selected tables for\r\n\t * the Api's context.\r\n\t * @param {boolean} [traditional=false] Set the API instance's context to be\r\n\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\r\n\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\r\n\t *   or if all tables captured in the jQuery object should be used.\r\n\t * @return {DataTables.Api}\r\n\t */\r\n\tthis.api = function ( traditional )\r\n\t{\r\n\t\treturn traditional ?\r\n\t\t\tnew _Api(\r\n\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\r\n\t\t\t) :\r\n\t\t\tnew _Api( this );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Add a single new row or multiple rows of data to the table. Please note\r\n\t * that this is suitable for client-side processing only - if you are using\r\n\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\r\n\t * must add it to the data source, i.e. the server-side, through an Ajax call.\r\n\t *  @param {array|object} data The data to be added to the table. This can be:\r\n\t *    <ul>\r\n\t *      <li>1D array of data - add a single row with the data provided</li>\r\n\t *      <li>2D array of arrays - add multiple rows in a single call</li>\r\n\t *      <li>object - data object when using <i>mData</i></li>\r\n\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\r\n\t *    </ul>\r\n\t *  @param {bool} [redraw=true] redraw the table or not\r\n\t *  @returns {array} An array of integers, representing the list of indexes in\r\n\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\r\n\t *    the table.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    // Global var for counter\r\n\t *    var giCount = 2;\r\n\t *\r\n\t *    $(document).ready(function() {\r\n\t *      $('#example').dataTable();\r\n\t *    } );\r\n\t *\r\n\t *    function fnClickAddRow() {\r\n\t *      $('#example').dataTable().fnAddData( [\r\n\t *        giCount+\".1\",\r\n\t *        giCount+\".2\",\r\n\t *        giCount+\".3\",\r\n\t *        giCount+\".4\" ]\r\n\t *      );\r\n\t *\r\n\t *      giCount++;\r\n\t *    }\r\n\t */\r\n\tthis.fnAddData = function( data, redraw )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\t/* Check if we want to add multiple rows or not */\r\n\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\r\n\t\t\tapi.rows.add( data ) :\r\n\t\t\tapi.row.add( data );\r\n\t\r\n\t\tif ( redraw === undefined || redraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\r\n\t\treturn rows.flatten().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This function will make DataTables recalculate the column sizes, based on the data\r\n\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\r\n\t * through the sWidth parameter). This can be useful when the width of the table's\r\n\t * parent element changes (for example a window resize).\r\n\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable( {\r\n\t *        \"sScrollY\": \"200px\",\r\n\t *        \"bPaginate\": false\r\n\t *      } );\r\n\t *\r\n\t *      $(window).on('resize', function () {\r\n\t *        oTable.fnAdjustColumnSizing();\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\tthis.fnAdjustColumnSizing = function ( bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).columns.adjust();\r\n\t\tvar settings = api.settings()[0];\r\n\t\tvar scroll = settings.oScroll;\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw( false );\r\n\t\t}\r\n\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\r\n\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\r\n\t\t\t_fnScrollDraw( settings );\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Quickly and simply clear a table\r\n\t *  @param {bool} [bRedraw=true] redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\r\n\t *      oTable.fnClearTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnClearTable = function( bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).clear();\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * The exact opposite of 'opening' a row, this function will close any rows which\r\n\t * are currently 'open'.\r\n\t *  @param {node} nTr the table row to 'close'\r\n\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnClose = function( nTr )\r\n\t{\r\n\t\tthis.api( true ).row( nTr ).child.hide();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row for the table\r\n\t *  @param {mixed} target The index of the row from aoData to be deleted, or\r\n\t *    the TR element you want to delete\r\n\t *  @param {function|null} [callBack] Callback function\r\n\t *  @param {bool} [redraw=true] Redraw the table or not\r\n\t *  @returns {array} The row that was deleted\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Immediately remove the first row\r\n\t *      oTable.fnDeleteRow( 0 );\r\n\t *    } );\r\n\t */\r\n\tthis.fnDeleteRow = function( target, callback, redraw )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\tvar rows = api.rows( target );\r\n\t\tvar settings = rows.settings()[0];\r\n\t\tvar data = settings.aoData[ rows[0][0] ];\r\n\t\r\n\t\trows.remove();\r\n\t\r\n\t\tif ( callback ) {\r\n\t\t\tcallback.call( this, settings, data );\r\n\t\t}\r\n\t\r\n\t\tif ( redraw === undefined || redraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Restore the table to it's original state in the DOM by removing all of DataTables\r\n\t * enhancements, alterations to the DOM structure of the table and event listeners.\r\n\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnDestroy();\r\n\t *    } );\r\n\t */\r\n\tthis.fnDestroy = function ( remove )\r\n\t{\r\n\t\tthis.api( true ).destroy( remove );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Redraw the table\r\n\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\r\n\t *      oTable.fnDraw();\r\n\t *    } );\r\n\t */\r\n\tthis.fnDraw = function( complete )\r\n\t{\r\n\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\r\n\t\t// into account the new data, but can hold position.\r\n\t\tthis.api( true ).draw( complete );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Filter the input based on data\r\n\t *  @param {string} sInput String to filter the table on\r\n\t *  @param {int|null} [iColumn] Column to limit filtering to\r\n\t *  @param {bool} [bRegex=false] Treat as regular expression or not\r\n\t *  @param {bool} [bSmart=true] Perform smart filtering or not\r\n\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\r\n\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sometime later - filter...\r\n\t *      oTable.fnFilter( 'test string' );\r\n\t *    } );\r\n\t */\r\n\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( iColumn === null || iColumn === undefined ) {\r\n\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\r\n\t\t}\r\n\t\r\n\t\tapi.draw();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the data for the whole table, an individual row or an individual cell based on the\r\n\t * provided parameters.\r\n\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\r\n\t *    a TR node then the data source for the whole row will be returned. If given as a\r\n\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\r\n\t *    cell returned. If given as an integer, then this is treated as the aoData internal\r\n\t *    data index for the row (see fnGetPosition) and the data for that row used.\r\n\t *  @param {int} [col] Optional column index that you want the data of.\r\n\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\r\n\t *    returned. If mRow is defined, just data for that row, and is iCol is\r\n\t *    defined, only data for the designated cell is returned.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    // Row data\r\n\t *    $(document).ready(function() {\r\n\t *      oTable = $('#example').dataTable();\r\n\t *\r\n\t *      oTable.$('tr').click( function () {\r\n\t *        var data = oTable.fnGetData( this );\r\n\t *        // ... do something with the array / object of data for the row\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Individual cell data\r\n\t *    $(document).ready(function() {\r\n\t *      oTable = $('#example').dataTable();\r\n\t *\r\n\t *      oTable.$('td').click( function () {\r\n\t *        var sData = oTable.fnGetData( this );\r\n\t *        alert( 'The cell clicked on had the value of '+sData );\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetData = function( src, col )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( src !== undefined ) {\r\n\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\r\n\t\r\n\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\r\n\t\t\t\tapi.cell( src, col ).data() :\r\n\t\t\t\tapi.row( src ).data() || null;\r\n\t\t}\r\n\t\r\n\t\treturn api.data().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get an array of the TR nodes that are used in the table's body. Note that you will\r\n\t * typically want to use the '$' API method in preference to this as it is more\r\n\t * flexible.\r\n\t *  @param {int} [iRow] Optional row index for the TR element you want\r\n\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\r\n\t *    in the table's body, or iRow is defined, just the TR element requested.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Get the nodes from the table\r\n\t *      var nNodes = oTable.fnGetNodes( );\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetNodes = function( iRow )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\treturn iRow !== undefined ?\r\n\t\t\tapi.row( iRow ).node() :\r\n\t\t\tapi.rows().nodes().flatten().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the array indexes of a particular cell from it's DOM element\r\n\t * and column index including hidden columns\r\n\t *  @param {node} node this can either be a TR, TD or TH in the table's body\r\n\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\r\n\t *    if given as a cell, an array of [row index, column index (visible),\r\n\t *    column index (all)] is given.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      $('#example tbody td').click( function () {\r\n\t *        // Get the position of the current data from the node\r\n\t *        var aPos = oTable.fnGetPosition( this );\r\n\t *\r\n\t *        // Get the data array for this row\r\n\t *        var aData = oTable.fnGetData( aPos[0] );\r\n\t *\r\n\t *        // Update the data array and return the value\r\n\t *        aData[ aPos[1] ] = 'clicked';\r\n\t *        this.innerHTML = 'clicked';\r\n\t *      } );\r\n\t *\r\n\t *      // Init DataTables\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetPosition = function( node )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\tvar nodeName = node.nodeName.toUpperCase();\r\n\t\r\n\t\tif ( nodeName == 'TR' ) {\r\n\t\t\treturn api.row( node ).index();\r\n\t\t}\r\n\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\r\n\t\t\tvar cell = api.cell( node ).index();\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tcell.row,\r\n\t\t\t\tcell.columnVisible,\r\n\t\t\t\tcell.column\r\n\t\t\t];\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Check to see if a row is 'open' or not.\r\n\t *  @param {node} nTr the table row to check\r\n\t *  @returns {boolean} true if the row is currently open, false otherwise\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnIsOpen = function( nTr )\r\n\t{\r\n\t\treturn this.api( true ).row( nTr ).child.isShown();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This function will place a new row directly after a row which is currently\r\n\t * on display on the page, with the HTML contents that is passed into the\r\n\t * function. This can be used, for example, to ask for confirmation that a\r\n\t * particular record should be deleted.\r\n\t *  @param {node} nTr The table row to 'open'\r\n\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\r\n\t *  @param {string} sClass Class to give the new TD cell\r\n\t *  @returns {node} The row opened. Note that if the table row passed in as the\r\n\t *    first parameter, is not found in the table, this method will silently\r\n\t *    return.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnOpen = function( nTr, mHtml, sClass )\r\n\t{\r\n\t\treturn this.api( true )\r\n\t\t\t.row( nTr )\r\n\t\t\t.child( mHtml, sClass )\r\n\t\t\t.show()\r\n\t\t\t.child()[0];\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Change the pagination - provides the internal logic for pagination in a simple API\r\n\t * function. With this function you can have a DataTables table go to the next,\r\n\t * previous, first or last pages.\r\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\r\n\t *    or page number to jump to (integer), note that page 0 is the first page.\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnPageChange( 'next' );\r\n\t *    } );\r\n\t */\r\n\tthis.fnPageChange = function ( mAction, bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).page( mAction );\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw(false);\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Show a particular column\r\n\t *  @param {int} iCol The column whose display should be changed\r\n\t *  @param {bool} bShow Show (true) or hide (false) the column\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Hide the second column after initialisation\r\n\t *      oTable.fnSetColumnVis( 1, false );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.columns.adjust().draw();\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the settings for a particular table for external manipulation\r\n\t *  @returns {object} DataTables settings object. See\r\n\t *    {@link DataTable.models.oSettings}\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      var oSettings = oTable.fnSettings();\r\n\t *\r\n\t *      // Show an example parameter from the settings\r\n\t *      alert( oSettings._iDisplayStart );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSettings = function()\r\n\t{\r\n\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sort the table by a particular column\r\n\t *  @param {int} iCol the data index to sort on. Note that this will not match the\r\n\t *    'display index' if you have hidden data entries\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sort immediately with columns 0 and 1\r\n\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSort = function( aaSort )\r\n\t{\r\n\t\tthis.api( true ).order( aaSort ).draw();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Attach a sort listener to an element for a given column\r\n\t *  @param {node} nNode the element to attach the sort listener to\r\n\t *  @param {int} iColumn the column that a click on this node will sort on\r\n\t *  @param {function} [fnCallback] callback function when sort is run\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sort on column 1, when 'sorter' is clicked on\r\n\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\r\n\t{\r\n\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Update a table cell or row - this method will accept either a single value to\r\n\t * update the cell with, an array of values with one element for each column or\r\n\t * an object in the same format as the original data source. The function is\r\n\t * self-referencing in order to make the multi column updates easier.\r\n\t *  @param {object|array|string} mData Data to update the cell/row with\r\n\t *  @param {node|int} mRow TR element you want to update or the aoData index\r\n\t *  @param {int} [iColumn] The column to update, give as null or undefined to\r\n\t *    update a whole row.\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\r\n\t *  @returns {int} 0 on success, 1 on error\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\r\n\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\r\n\t *    } );\r\n\t */\r\n\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( iColumn === undefined || iColumn === null ) {\r\n\t\t\tapi.row( mRow ).data( mData );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tapi.cell( mRow, iColumn ).data( mData );\r\n\t\t}\r\n\t\r\n\t\tif ( bAction === undefined || bAction ) {\r\n\t\t\tapi.columns.adjust();\r\n\t\t}\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\r\n\t * to ensure compatibility.\r\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\r\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\r\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\r\n\t *    version, or false if this version of DataTales is not suitable\r\n\t *  @method\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\r\n\t *    } );\r\n\t */\r\n\tthis.fnVersionCheck = _ext.fnVersionCheck;\r\n\t\r\n\r\n\tvar _that = this;\r\n\tvar emptyInit = options === undefined;\r\n\tvar len = this.length;\r\n\r\n\tif ( emptyInit ) {\r\n\t\toptions = {};\r\n\t}\r\n\r\n\tthis.oApi = this.internal = _ext.internal;\r\n\r\n\t// Extend with old style plug-in API methods\r\n\tfor ( var fn in DataTable.ext.internal ) {\r\n\t\tif ( fn ) {\r\n\t\t\tthis[fn] = _fnExternApiFunc(fn);\r\n\t\t}\r\n\t}\r\n\r\n\tthis.each(function() {\r\n\t\t// For each initialisation we want to give it a clean initialisation\r\n\t\t// object that can be bashed around\r\n\t\tvar o = {};\r\n\t\tvar oInit = len > 1 ? // optimisation for single table case\r\n\t\t\t_fnExtend( o, options, true ) :\r\n\t\t\toptions;\r\n\r\n\t\t/*global oInit,_that,emptyInit*/\r\n\t\tvar i=0, iLen, j, jLen, k, kLen;\r\n\t\tvar sId = this.getAttribute( 'id' );\r\n\t\tvar bInitHandedOff = false;\r\n\t\tvar defaults = DataTable.defaults;\r\n\t\tvar $this = $(this);\r\n\t\t\r\n\t\t\r\n\t\t/* Sanity check */\r\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\r\n\t\t{\r\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/* Backwards compatibility for the defaults */\r\n\t\t_fnCompatOpts( defaults );\r\n\t\t_fnCompatCols( defaults.column );\r\n\t\t\r\n\t\t/* Convert the camel-case defaults to Hungarian */\r\n\t\t_fnCamelToHungarian( defaults, defaults, true );\r\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\r\n\t\t\r\n\t\t/* Setting up the initialisation object */\r\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/* Check to see if we are re-initialising a table */\r\n\t\tvar allSettings = DataTable.settings;\r\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tvar s = allSettings[i];\r\n\t\t\r\n\t\t\t/* Base check on table node */\r\n\t\t\tif (\r\n\t\t\t\ts.nTable == this ||\r\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\r\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\r\n\t\t\t) {\r\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\r\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\r\n\t\t\r\n\t\t\t\tif ( emptyInit || bRetrieve )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn s.oInstance;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( bDestroy )\r\n\t\t\t\t{\r\n\t\t\t\t\ts.oInstance.fnDestroy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\r\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\r\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\r\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\r\n\t\t\t */\r\n\t\t\tif ( s.sTableId == this.id )\r\n\t\t\t{\r\n\t\t\t\tallSettings.splice( i, 1 );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/* Ensure the table has an ID - required for accessibility */\r\n\t\tif ( sId === null || sId === \"\" )\r\n\t\t{\r\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\r\n\t\t\tthis.id = sId;\r\n\t\t}\r\n\t\t\r\n\t\t/* Create the settings object for this table and set some of the default parameters */\r\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\r\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\r\n\t\t\t\"sInstance\":     sId,\r\n\t\t\t\"sTableId\":      sId\r\n\t\t} );\r\n\t\toSettings.nTable = this;\r\n\t\toSettings.oApi   = _that.internal;\r\n\t\toSettings.oInit  = oInit;\r\n\t\t\r\n\t\tallSettings.push( oSettings );\r\n\t\t\r\n\t\t// Need to add the instance after the instance after the settings object has been added\r\n\t\t// to the settings array, so we can self reference the table instance if more than one\r\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\r\n\t\t\r\n\t\t// Backwards compatibility, before we apply all the defaults\r\n\t\t_fnCompatOpts( oInit );\r\n\t\t_fnLanguageCompat( oInit.oLanguage );\r\n\t\t\r\n\t\t// If the length menu is given, but the init display length is not, use the length menu\r\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\r\n\t\t{\r\n\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\r\n\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\r\n\t\t}\r\n\t\t\r\n\t\t// Apply the defaults and init options to make a single init object will all\r\n\t\t// options defined from defaults and instance options.\r\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\r\n\t\t\r\n\t\t\r\n\t\t// Map the initialisation options onto the settings object\r\n\t\t_fnMap( oSettings.oFeatures, oInit, [\r\n\t\t\t\"bPaginate\",\r\n\t\t\t\"bLengthChange\",\r\n\t\t\t\"bFilter\",\r\n\t\t\t\"bSort\",\r\n\t\t\t\"bSortMulti\",\r\n\t\t\t\"bInfo\",\r\n\t\t\t\"bProcessing\",\r\n\t\t\t\"bAutoWidth\",\r\n\t\t\t\"bSortClasses\",\r\n\t\t\t\"bServerSide\",\r\n\t\t\t\"bDeferRender\"\r\n\t\t] );\r\n\t\t_fnMap( oSettings, oInit, [\r\n\t\t\t\"asStripeClasses\",\r\n\t\t\t\"ajax\",\r\n\t\t\t\"fnServerData\",\r\n\t\t\t\"fnFormatNumber\",\r\n\t\t\t\"sServerMethod\",\r\n\t\t\t\"aaSorting\",\r\n\t\t\t\"aaSortingFixed\",\r\n\t\t\t\"aLengthMenu\",\r\n\t\t\t\"sPaginationType\",\r\n\t\t\t\"sAjaxSource\",\r\n\t\t\t\"sAjaxDataProp\",\r\n\t\t\t\"iStateDuration\",\r\n\t\t\t\"sDom\",\r\n\t\t\t\"bSortCellsTop\",\r\n\t\t\t\"iTabIndex\",\r\n\t\t\t\"fnStateLoadCallback\",\r\n\t\t\t\"fnStateSaveCallback\",\r\n\t\t\t\"renderer\",\r\n\t\t\t\"searchDelay\",\r\n\t\t\t\"rowId\",\r\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\r\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\r\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\r\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\r\n\t\t] );\r\n\t\t_fnMap( oSettings.oScroll, oInit, [\r\n\t\t\t[ \"sScrollX\", \"sX\" ],\r\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\r\n\t\t\t[ \"sScrollY\", \"sY\" ],\r\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\r\n\t\t] );\r\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\r\n\t\t\r\n\t\t/* Callback functions which are array driven */\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\r\n\t\t\r\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\r\n\t\t\r\n\t\t/* Browser support detection */\r\n\t\t_fnBrowserDetect( oSettings );\r\n\t\t\r\n\t\tvar oClasses = oSettings.oClasses;\r\n\t\t\r\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\r\n\t\t$this.addClass( oClasses.sTable );\r\n\t\t\r\n\t\t\r\n\t\tif ( oSettings.iInitDisplayStart === undefined )\r\n\t\t{\r\n\t\t\t/* Display start point, taking into account the save saving */\r\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\r\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\r\n\t\t}\r\n\t\t\r\n\t\tif ( oInit.iDeferLoading !== null )\r\n\t\t{\r\n\t\t\toSettings.bDeferLoading = true;\r\n\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\r\n\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\r\n\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\r\n\t\t}\r\n\t\t\r\n\t\t/* Language definitions */\r\n\t\tvar oLanguage = oSettings.oLanguage;\r\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\r\n\t\t\r\n\t\tif ( oLanguage.sUrl )\r\n\t\t{\r\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\r\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\r\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\r\n\t\t\t */\r\n\t\t\t$.ajax( {\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\turl: oLanguage.sUrl,\r\n\t\t\t\tsuccess: function ( json ) {\r\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\r\n\t\t\t\t\t_fnLanguageCompat( json );\r\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\r\n\t\t\r\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\r\n\t\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t\t},\r\n\t\t\t\terror: function () {\r\n\t\t\t\t\t// Error occurred loading language file, continue on as best we can\r\n\t\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\tbInitHandedOff = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * Stripes\r\n\t\t */\r\n\t\tif ( oInit.asStripeClasses === null )\r\n\t\t{\r\n\t\t\toSettings.asStripeClasses =[\r\n\t\t\t\toClasses.sStripeOdd,\r\n\t\t\t\toClasses.sStripeEven\r\n\t\t\t];\r\n\t\t}\r\n\t\t\r\n\t\t/* Remove row stripe classes if they are already on the table row */\r\n\t\tvar stripeClasses = oSettings.asStripeClasses;\r\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\r\n\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\r\n\t\t\treturn rowOne.hasClass(el);\r\n\t\t} ) ) !== -1 ) {\r\n\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\r\n\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * Columns\r\n\t\t * See if we should load columns automatically or use defined ones\r\n\t\t */\r\n\t\tvar anThs = [];\r\n\t\tvar aoColumnsInit;\r\n\t\tvar nThead = this.getElementsByTagName('thead');\r\n\t\tif ( nThead.length !== 0 )\r\n\t\t{\r\n\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\r\n\t\t\tanThs = _fnGetUniqueThs( oSettings );\r\n\t\t}\r\n\t\t\r\n\t\t/* If not given a column array, generate one with nulls */\r\n\t\tif ( oInit.aoColumns === null )\r\n\t\t{\r\n\t\t\taoColumnsInit = [];\r\n\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\r\n\t\t\t{\r\n\t\t\t\taoColumnsInit.push( null );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\taoColumnsInit = oInit.aoColumns;\r\n\t\t}\r\n\t\t\r\n\t\t/* Add the columns */\r\n\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\r\n\t\t}\r\n\t\t\r\n\t\t/* Apply the column definitions */\r\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\r\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\r\n\t\t} );\r\n\t\t\r\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\r\n\t\t * attributes are found\r\n\t\t */\r\n\t\tif ( rowOne.length ) {\r\n\t\t\tvar a = function ( cell, name ) {\r\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\r\n\t\t\t};\r\n\t\t\r\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\r\n\t\t\t\tvar col = oSettings.aoColumns[i];\r\n\t\t\r\n\t\t\t\tif (! col) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tif ( col.mData === i ) {\r\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\r\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\r\n\t\t\r\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\r\n\t\t\t\t\t\tcol.mData = {\r\n\t\t\t\t\t\t\t_:      i+'.display',\r\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcol._isArrayHost = true;\r\n\t\t\r\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t\t\r\n\t\tvar features = oSettings.oFeatures;\r\n\t\tvar loadedInit = function () {\r\n\t\t\t/*\r\n\t\t\t * Sorting\r\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\r\n\t\t\t */\r\n\t\t\r\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\r\n\t\t\t// in case that has been altered, so the default sort reflects that option\r\n\t\t\tif ( oInit.aaSorting === undefined ) {\r\n\t\t\t\tvar sorting = oSettings.aaSorting;\r\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\r\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\r\n\t\t\t * account, and also will apply sorting disabled classes if disabled\r\n\t\t\t */\r\n\t\t\t_fnSortingClasses( oSettings );\r\n\t\t\r\n\t\t\tif ( features.bSort ) {\r\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n\t\t\t\t\tif ( oSettings.bSorted ) {\r\n\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\r\n\t\t\t\t\t\tvar sortedColumns = {};\r\n\t\t\r\n\t\t\t\t\t\t$.each( aSort, function (i, val) {\r\n\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\r\n\t\t\t\t\t\t} );\r\n\t\t\r\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\r\n\t\t\t\t\t\t_fnSortAria( oSettings );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\r\n\t\t\t\t\t_fnSortingClasses( oSettings );\r\n\t\t\t\t}\r\n\t\t\t}, 'sc' );\r\n\t\t\r\n\t\t\r\n\t\t\t/*\r\n\t\t\t * Final init\r\n\t\t\t * Cache the header, body and footer as required, creating them if needed\r\n\t\t\t */\r\n\t\t\r\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\r\n\t\t\tvar captions = $this.children('caption').each( function () {\r\n\t\t\t\tthis._captionSide = $(this).css('caption-side');\r\n\t\t\t} );\r\n\t\t\r\n\t\t\tvar thead = $this.children('thead');\r\n\t\t\tif ( thead.length === 0 ) {\r\n\t\t\t\tthead = $('<thead/>').appendTo($this);\r\n\t\t\t}\r\n\t\t\toSettings.nTHead = thead[0];\r\n\t\t\r\n\t\t\tvar tbody = $this.children('tbody');\r\n\t\t\tif ( tbody.length === 0 ) {\r\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\r\n\t\t\t}\r\n\t\t\toSettings.nTBody = tbody[0];\r\n\t\t\r\n\t\t\tvar tfoot = $this.children('tfoot');\r\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\r\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\r\n\t\t\t\t// a tfoot element for the caption element to be appended to\r\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\r\n\t\t\t\t$this.addClass( oClasses.sNoFooter );\r\n\t\t\t}\r\n\t\t\telse if ( tfoot.length > 0 ) {\r\n\t\t\t\toSettings.nTFoot = tfoot[0];\r\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Check if there is data passing into the constructor */\r\n\t\t\tif ( oInit.aaData ) {\r\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\r\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\r\n\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\r\n\t\t\t\t * source since there is no point in reading the DOM data if we are then going\r\n\t\t\t\t * to replace it with Ajax data\r\n\t\t\t\t */\r\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Copy the data index array */\r\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\r\n\t\t\r\n\t\t\t/* Initialisation complete - table can be drawn */\r\n\t\t\toSettings.bInitialised = true;\r\n\t\t\r\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\r\n\t\t\t * language processor)\r\n\t\t\t */\r\n\t\t\tif ( bInitHandedOff === false ) {\r\n\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/* Must be done after everything which can be overridden by the state saving! */\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\r\n\t\t\r\n\t\tif ( oInit.bStateSave )\r\n\t\t{\r\n\t\t\tfeatures.bStateSave = true;\r\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tloadedInit();\r\n\t\t}\r\n\t\t\r\n\t} );\r\n\t_that = null;\r\n\treturn this;\r\n};\r\n\r\n\r\n/*\r\n * It is useful to have variables which are scoped locally so only the\r\n * DataTables functions can access them and they don't leak into global space.\r\n * At the same time these functions are often useful over multiple files in the\r\n * core and API, so we list, or at least document, all variables which are used\r\n * by DataTables as private variables here. This also ensures that there is no\r\n * clashing of variable names and that they can easily referenced for reuse.\r\n */\r\n\r\n\r\n// Defined else where\r\n//  _selector_run\r\n//  _selector_opts\r\n//  _selector_first\r\n//  _selector_row_indexes\r\n\r\nvar _ext; // DataTable.ext\r\nvar _Api; // DataTable.Api\r\nvar _api_register; // DataTable.Api.register\r\nvar _api_registerPlural; // DataTable.Api.registerPlural\r\n\r\nvar _re_dic = {};\r\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\r\nvar _re_html = /<.*?>/g;\r\n\r\n// This is not strict ISO8601 - Date.parse() is quite lax, although\r\n// implementations differ between browsers.\r\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\r\n\r\n// Escape regular expression special characters\r\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\r\n\r\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\r\n// - \\u20BD - Russian ruble.\r\n// - \\u20a9 - South Korean Won\r\n// - \\u20BA - Turkish Lira\r\n// - \\u20B9 - Indian Rupee\r\n// - R - Brazil (R$) and South Africa\r\n// - fr - Swiss Franc\r\n// - kr - Swedish krona, Norwegian krone and Danish krone\r\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\r\n// - Ƀ - Bitcoin\r\n// - Ξ - Ethereum\r\n//   standards as thousands separators.\r\nvar _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\r\n\r\n\r\nvar _empty = function ( d ) {\r\n\treturn !d || d === true || d === '-' ? true : false;\r\n};\r\n\r\n\r\nvar _intVal = function ( s ) {\r\n\tvar integer = parseInt( s, 10 );\r\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\r\n};\r\n\r\n// Convert from a formatted number with characters other than `.` as the\r\n// decimal place, to a Javascript number\r\nvar _numToDecimal = function ( num, decimalPoint ) {\r\n\t// Cache created regular expressions for speed as this function is called often\r\n\tif ( ! _re_dic[ decimalPoint ] ) {\r\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\r\n\t}\r\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\r\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\r\n\t\tnum;\r\n};\r\n\r\n\r\nvar _isNumber = function ( d, decimalPoint, formatted ) {\r\n\tvar type = typeof d;\r\n\tvar strType = type === 'string';\r\n\r\n\tif ( type === 'number' || type === 'bigint') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// If empty return immediately so there must be a number if it is a\r\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\r\n\t// as a formatted number for currency\r\n\tif ( _empty( d ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( decimalPoint && strType ) {\r\n\t\td = _numToDecimal( d, decimalPoint );\r\n\t}\r\n\r\n\tif ( formatted && strType ) {\r\n\t\td = d.replace( _re_formatted_numeric, '' );\r\n\t}\r\n\r\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\r\n};\r\n\r\n\r\n// A string without HTML in it can be considered to be HTML still\r\nvar _isHtml = function ( d ) {\r\n\treturn _empty( d ) || typeof d === 'string';\r\n};\r\n\r\n\r\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\r\n\tif ( _empty( d ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar html = _isHtml( d );\r\n\treturn ! html ?\r\n\t\tnull :\r\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\r\n\t\t\ttrue :\r\n\t\t\tnull;\r\n};\r\n\r\n\r\nvar _pluck = function ( a, prop, prop2 ) {\r\n\tvar out = [];\r\n\tvar i=0, ien=a.length;\r\n\r\n\t// Could have the test in the loop for slightly smaller code, but speed\r\n\t// is essential here\r\n\tif ( prop2 !== undefined ) {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[i] && a[i][ prop ] ) {\r\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[i] ) {\r\n\t\t\t\tout.push( a[i][ prop ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\r\n// as the indexes to pick from `a`\r\nvar _pluck_order = function ( a, order, prop, prop2 )\r\n{\r\n\tvar out = [];\r\n\tvar i=0, ien=order.length;\r\n\r\n\t// Could have the test in the loop for slightly smaller code, but speed\r\n\t// is essential here\r\n\tif ( prop2 !== undefined ) {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[ order[i] ][ prop ] ) {\r\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tout.push( a[ order[i] ][ prop ] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _range = function ( len, start )\r\n{\r\n\tvar out = [];\r\n\tvar end;\r\n\r\n\tif ( start === undefined ) {\r\n\t\tstart = 0;\r\n\t\tend = len;\r\n\t}\r\n\telse {\r\n\t\tend = start;\r\n\t\tstart = len;\r\n\t}\r\n\r\n\tfor ( var i=start ; i<end ; i++ ) {\r\n\t\tout.push( i );\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _removeEmpty = function ( a )\r\n{\r\n\tvar out = [];\r\n\r\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\r\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\r\n\t\t\tout.push( a[i] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _stripHtml = function ( d ) {\r\n\treturn d\r\n\t\t.replace( _re_html, '' ) // Complete tags\r\n\t\t.replace(/<script/i, ''); // Safety for incomplete script tag\r\n};\r\n\r\n\r\n/**\r\n * Determine if all values in the array are unique. This means we can short\r\n * cut the _unique method at the cost of a single loop. A sorted array is used\r\n * to easily check the values.\r\n *\r\n * @param  {array} src Source array\r\n * @return {boolean} true if all unique, false otherwise\r\n * @ignore\r\n */\r\nvar _areAllUnique = function ( src ) {\r\n\tif ( src.length < 2 ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar sorted = src.slice().sort();\r\n\tvar last = sorted[0];\r\n\r\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\r\n\t\tif ( sorted[i] === last ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlast = sorted[i];\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Find the unique elements in a source array.\r\n *\r\n * @param  {array} src Source array\r\n * @return {array} Array of unique items\r\n * @ignore\r\n */\r\nvar _unique = function ( src )\r\n{\r\n\tif ( _areAllUnique( src ) ) {\r\n\t\treturn src.slice();\r\n\t}\r\n\r\n\t// A faster unique method is to use object keys to identify used values,\r\n\t// but this doesn't work with arrays or objects, which we must also\r\n\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\r\n\t// information.\r\n\tvar\r\n\t\tout = [],\r\n\t\tval,\r\n\t\ti, ien=src.length,\r\n\t\tj, k=0;\r\n\r\n\tagain: for ( i=0 ; i<ien ; i++ ) {\r\n\t\tval = src[i];\r\n\r\n\t\tfor ( j=0 ; j<k ; j++ ) {\r\n\t\t\tif ( out[j] === val ) {\r\n\t\t\t\tcontinue again;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tout.push( val );\r\n\t\tk++;\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n// Surprisingly this is faster than [].concat.apply\r\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\r\nvar _flatten = function (out, val) {\r\n\tif (Array.isArray(val)) {\r\n\t\tfor (var i=0 ; i<val.length ; i++) {\r\n\t\t\t_flatten(out, val[i]);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tout.push(val);\r\n\t}\r\n  \r\n\treturn out;\r\n}\r\n\r\nvar _includes = function (search, start) {\r\n\tif (start === undefined) {\r\n\t\tstart = 0;\r\n\t}\r\n\r\n\treturn this.indexOf(search, start) !== -1;\t\r\n};\r\n\r\n// Array.isArray polyfill.\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\r\nif (! Array.isArray) {\r\n    Array.isArray = function(arg) {\r\n        return Object.prototype.toString.call(arg) === '[object Array]';\r\n    };\r\n}\r\n\r\nif (! Array.prototype.includes) {\r\n\tArray.prototype.includes = _includes;\r\n}\r\n\r\n// .trim() polyfill\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\r\nif (!String.prototype.trim) {\r\n  String.prototype.trim = function () {\r\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n  };\r\n}\r\n\r\nif (! String.prototype.includes) {\r\n\tString.prototype.includes = _includes;\r\n}\r\n\r\n/**\r\n * DataTables utility methods\r\n * \r\n * This namespace provides helper methods that DataTables uses internally to\r\n * create a DataTable, but which are not exclusively used only for DataTables.\r\n * These methods can be used by extension authors to save the duplication of\r\n * code.\r\n *\r\n *  @namespace\r\n */\r\nDataTable.util = {\r\n\t/**\r\n\t * Throttle the calls to a function. Arguments and context are maintained\r\n\t * for the throttled function.\r\n\t *\r\n\t * @param {function} fn Function to be called\r\n\t * @param {integer} freq Call frequency in mS\r\n\t * @return {function} Wrapped function\r\n\t */\r\n\tthrottle: function ( fn, freq ) {\r\n\t\tvar\r\n\t\t\tfrequency = freq !== undefined ? freq : 200,\r\n\t\t\tlast,\r\n\t\t\ttimer;\r\n\r\n\t\treturn function () {\r\n\t\t\tvar\r\n\t\t\t\tthat = this,\r\n\t\t\t\tnow  = +new Date(),\r\n\t\t\t\targs = arguments;\r\n\r\n\t\t\tif ( last && now < last + frequency ) {\r\n\t\t\t\tclearTimeout( timer );\r\n\r\n\t\t\t\ttimer = setTimeout( function () {\r\n\t\t\t\t\tlast = undefined;\r\n\t\t\t\t\tfn.apply( that, args );\r\n\t\t\t\t}, frequency );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlast = now;\r\n\t\t\t\tfn.apply( that, args );\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Escape a string such that it can be used in a regular expression\r\n\t *\r\n\t *  @param {string} val string to escape\r\n\t *  @returns {string} escaped string\r\n\t */\r\n\tescapeRegex: function ( val ) {\r\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\r\n\t},\r\n\r\n\t/**\r\n\t * Create a function that will write to a nested object or array\r\n\t * @param {*} source JSON notation string\r\n\t * @returns Write function\r\n\t */\r\n\tset: function ( source ) {\r\n\t\tif ( $.isPlainObject( source ) ) {\r\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\r\n\t\t\t * setting data since we don't know the type here. This is why an object\r\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\r\n\t\t\t * for `mRender` which is read only.\r\n\t\t\t */\r\n\t\t\treturn DataTable.util.set( source._ );\r\n\t\t}\r\n\t\telse if ( source === null ) {\r\n\t\t\t// Nothing to do when the data source is null\r\n\t\t\treturn function () {};\r\n\t\t}\r\n\t\telse if ( typeof source === 'function' ) {\r\n\t\t\treturn function (data, val, meta) {\r\n\t\t\t\tsource( data, 'set', val, meta );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\r\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\r\n\t\t{\r\n\t\t\t// Like the get, we need to get data from a nested object\r\n\t\t\tvar setData = function (data, val, src) {\r\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\r\n\t\t\t\tvar aLast = a[a.length-1];\r\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\r\n\t\r\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\r\n\t\t\t\t\t// Protect against prototype pollution\r\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\r\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if we are dealing with an array notation request\r\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\r\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\r\n\t\r\n\t\t\t\t\tif ( arrayNotation ) {\r\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\r\n\t\t\t\t\t\tdata[ a[i] ] = [];\r\n\t\r\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\r\n\t\t\t\t\t\tb = a.slice();\r\n\t\t\t\t\t\tb.splice( 0, i+1 );\r\n\t\t\t\t\t\tinnerSrc = b.join('.');\r\n\t\r\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\r\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\r\n\t\t\t\t\t\t\t\to = {};\r\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\r\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\r\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\r\n\t\t\t\t\t\t\t// is to just save the value.\r\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\r\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( funcNotation ) {\r\n\t\t\t\t\t\t// Function call\r\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\r\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\r\n\t\t\t\t\t// trying to set the value - create it\r\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\r\n\t\t\t\t\t\tdata[ a[i] ] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Last item in the input - i.e, the actual set\r\n\t\t\t\tif ( aLast.match(__reFn ) ) {\r\n\t\t\t\t\t// Function call\r\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\r\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\r\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\r\n\t\t\t\treturn setData( data, val, source );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Array or flat object mapping\r\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\r\n\t\t\t\tdata[source] = val;\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Create a function that will read nested objects from arrays, based on JSON notation\r\n\t * @param {*} source JSON notation string\r\n\t * @returns Value read\r\n\t */\r\n\tget: function ( source ) {\r\n\t\tif ( $.isPlainObject( source ) ) {\r\n\t\t\t// Build an object of get functions, and wrap them in a single call\r\n\t\t\tvar o = {};\r\n\t\t\t$.each( source, function (key, val) {\r\n\t\t\t\tif ( val ) {\r\n\t\t\t\t\to[key] = DataTable.util.get( val );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t\treturn function (data, type, row, meta) {\r\n\t\t\t\tvar t = o[type] || o._;\r\n\t\t\t\treturn t !== undefined ?\r\n\t\t\t\t\tt(data, type, row, meta) :\r\n\t\t\t\t\tdata;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( source === null ) {\r\n\t\t\t// Give an empty string for rendering / sorting etc\r\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'function' ) {\r\n\t\t\treturn function (data, type, row, meta) {\r\n\t\t\t\treturn source( data, type, row, meta );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\r\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\r\n\t\t{\r\n\t\t\t/* If there is a . in the source string then the data source is in a\r\n\t\t\t * nested object so we loop over the data for each level to get the next\r\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\r\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\r\n\t\t\t * be used if defined, rather than throwing an error\r\n\t\t\t */\r\n\t\t\tvar fetchData = function (data, type, src) {\r\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\r\n\t\r\n\t\t\t\tif ( src !== \"\" ) {\r\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\r\n\t\r\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\r\n\t\t\t\t\t\t// Check if we are dealing with special notation\r\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\r\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\r\n\t\r\n\t\t\t\t\t\tif ( arrayNotation ) {\r\n\t\t\t\t\t\t\t// Array notation\r\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\r\n\t\r\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\r\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\r\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tout = [];\r\n\t\r\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\r\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\r\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\r\n\t\r\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\r\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\r\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\r\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\r\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\r\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\r\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\r\n\t\r\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\r\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ( funcNotation ) {\r\n\t\t\t\t\t\t\t// Function call\r\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\r\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\r\n\t\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\r\n\t\t\t\treturn fetchData( data, type, source );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Array or flat object mapping\r\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\r\n\t\t\t\treturn data[source];\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n\r\n/**\r\n * Create a mapping object that allows camel case parameters to be looked up\r\n * for their Hungarian counterparts. The mapping is stored in a private\r\n * parameter called `_hungarianMap` which can be accessed on the source object.\r\n *  @param {object} o\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnHungarianMap ( o )\r\n{\r\n\tvar\r\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\r\n\t\tmatch,\r\n\t\tnewKey,\r\n\t\tmap = {};\r\n\r\n\t$.each( o, function (key, val) {\r\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\r\n\r\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\r\n\t\t{\r\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\r\n\t\t\tmap[ newKey ] = key;\r\n\r\n\t\t\tif ( match[1] === 'o' )\r\n\t\t\t{\r\n\t\t\t\t_fnHungarianMap( o[key] );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\to._hungarianMap = map;\r\n}\r\n\r\n\r\n/**\r\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\r\n * created by _fnHungarianMap.\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCamelToHungarian ( src, user, force )\r\n{\r\n\tif ( ! src._hungarianMap ) {\r\n\t\t_fnHungarianMap( src );\r\n\t}\r\n\r\n\tvar hungarianKey;\r\n\r\n\t$.each( user, function (key, val) {\r\n\t\thungarianKey = src._hungarianMap[ key ];\r\n\r\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\r\n\t\t{\r\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\r\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\r\n\t\t\t{\r\n\t\t\t\t// Copy the camelCase options over to the hungarian\r\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\r\n\t\t\t\t\tuser[ hungarianKey ] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\r\n\r\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tuser[hungarianKey] = user[ key ];\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Language compatibility - when certain options are given, and others aren't, we\r\n * need to duplicate the values over, in order to provide backwards compatibility\r\n * with older language files.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLanguageCompat( lang )\r\n{\r\n\t// Note the use of the Hungarian notation for the parameters in this method as\r\n\t// this is called after the mapping of camelCase to Hungarian\r\n\tvar defaults = DataTable.defaults.oLanguage;\r\n\r\n\t// Default mapping\r\n\tvar defaultDecimal = defaults.sDecimal;\r\n\tif ( defaultDecimal ) {\r\n\t\t_addNumericSort( defaultDecimal );\r\n\t}\r\n\r\n\tif ( lang ) {\r\n\t\tvar zeroRecords = lang.sZeroRecords;\r\n\r\n\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\r\n\t\t// sZeroRecords - assuming that is given.\r\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\r\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\r\n\t\t{\r\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\r\n\t\t}\r\n\r\n\t\t// Likewise with loading records\r\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\r\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\r\n\t\t{\r\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\r\n\t\t}\r\n\r\n\t\t// Old parameter name of the thousands separator mapped onto the new\r\n\t\tif ( lang.sInfoThousands ) {\r\n\t\t\tlang.sThousands = lang.sInfoThousands;\r\n\t\t}\r\n\r\n\t\tvar decimal = lang.sDecimal;\r\n\t\tif ( decimal && defaultDecimal !== decimal ) {\r\n\t\t\t_addNumericSort( decimal );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Map one parameter onto another\r\n *  @param {object} o Object to map\r\n *  @param {*} knew The new parameter name\r\n *  @param {*} old The old parameter name\r\n */\r\nvar _fnCompatMap = function ( o, knew, old ) {\r\n\tif ( o[ knew ] !== undefined ) {\r\n\t\to[ old ] = o[ knew ];\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Provide backwards compatibility for the main DT options. Note that the new\r\n * options are mapped onto the old parameters, so this is an external interface\r\n * change only.\r\n *  @param {object} init Object to map\r\n */\r\nfunction _fnCompatOpts ( init )\r\n{\r\n\t_fnCompatMap( init, 'ordering',      'bSort' );\r\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\r\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\r\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\r\n\t_fnCompatMap( init, 'order',         'aaSorting' );\r\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\r\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\r\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\r\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\r\n\t_fnCompatMap( init, 'searching',     'bFilter' );\r\n\r\n\t// Boolean initialisation of x-scrolling\r\n\tif ( typeof init.sScrollX === 'boolean' ) {\r\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\r\n\t}\r\n\tif ( typeof init.scrollX === 'boolean' ) {\r\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\r\n\t}\r\n\r\n\t// Column search objects are in an array, so it needs to be converted\r\n\t// element by element\r\n\tvar searchCols = init.aoSearchCols;\r\n\r\n\tif ( searchCols ) {\r\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\r\n\t\t\tif ( searchCols[i] ) {\r\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Provide backwards compatibility for column options. Note that the new options\r\n * are mapped onto the old parameters, so this is an external interface change\r\n * only.\r\n *  @param {object} init Object to map\r\n */\r\nfunction _fnCompatCols ( init )\r\n{\r\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\r\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\r\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\r\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\r\n\r\n\t// orderData can be given as an integer\r\n\tvar dataSort = init.aDataSort;\r\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\r\n\t\tinit.aDataSort = [ dataSort ];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Browser feature detection for capabilities, quirks\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBrowserDetect( settings )\r\n{\r\n\t// We don't need to do this every time DataTables is constructed, the values\r\n\t// calculated are specific to the browser and OS configuration which we\r\n\t// don't expect to change between initialisations\r\n\tif ( ! DataTable.__browser ) {\r\n\t\tvar browser = {};\r\n\t\tDataTable.__browser = browser;\r\n\r\n\t\t// Scrolling feature / quirks detection\r\n\t\tvar n = $('<div/>')\r\n\t\t\t.css( {\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\r\n\t\t\t\theight: 1,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\toverflow: 'hidden'\r\n\t\t\t} )\r\n\t\t\t.append(\r\n\t\t\t\t$('<div/>')\r\n\t\t\t\t\t.css( {\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\ttop: 1,\r\n\t\t\t\t\t\tleft: 1,\r\n\t\t\t\t\t\twidth: 100,\r\n\t\t\t\t\t\toverflow: 'scroll'\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.append(\r\n\t\t\t\t\t\t$('<div/>')\r\n\t\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\theight: 10\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.appendTo( 'body' );\r\n\r\n\t\tvar outer = n.children();\r\n\t\tvar inner = outer.children();\r\n\r\n\t\t// Numbers below, in order, are:\r\n\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\r\n\t\t//\r\n\t\t// IE6 XP:                           100 100 100  83\r\n\t\t// IE7 Vista:                        100 100 100  83\r\n\t\t// IE 8+ Windows:                     83  83 100  83\r\n\t\t// Evergreen Windows:                 83  83 100  83\r\n\t\t// Evergreen Mac with scrollbars:     85  85 100  85\r\n\t\t// Evergreen Mac without scrollbars: 100 100 100 100\r\n\r\n\t\t// Get scrollbar width\r\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\r\n\r\n\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\r\n\t\t// include the width of the scrollbar, while other browsers ensure the inner\r\n\t\t// element is contained without forcing scrolling\r\n\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\r\n\r\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\r\n\t\t// scrollbar on the left, rather than the right.\r\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\r\n\r\n\t\t// IE8- don't provide height and width for getBoundingClientRect\r\n\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\r\n\r\n\t\tn.remove();\r\n\t}\r\n\r\n\t$.extend( settings.oBrowser, DataTable.__browser );\r\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\r\n}\r\n\r\n\r\n/**\r\n * Array.prototype reduce[Right] method, used for browsers which don't support\r\n * JS 1.6. Done this way to reduce code size, since we iterate either way\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnReduce ( that, fn, init, start, end, inc )\r\n{\r\n\tvar\r\n\t\ti = start,\r\n\t\tvalue,\r\n\t\tisSet = false;\r\n\r\n\tif ( init !== undefined ) {\r\n\t\tvalue = init;\r\n\t\tisSet = true;\r\n\t}\r\n\r\n\twhile ( i !== end ) {\r\n\t\tif ( ! that.hasOwnProperty(i) ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvalue = isSet ?\r\n\t\t\tfn( value, that[i], i, that ) :\r\n\t\t\tthat[i];\r\n\r\n\t\tisSet = true;\r\n\t\ti += inc;\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Add a column to the list used for the table with default values\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} nTh The th element for this column\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddColumn( oSettings, nTh )\r\n{\r\n\t// Add column to aoColumns array\r\n\tvar oDefaults = DataTable.defaults.column;\r\n\tvar iCol = oSettings.aoColumns.length;\r\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\r\n\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\r\n\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\r\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\r\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\r\n\t\tidx: iCol\r\n\t} );\r\n\toSettings.aoColumns.push( oCol );\r\n\r\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\r\n\t// passed into extend can be undefined. This allows the user to give a default\r\n\t// with only some of the parameters defined, and also not give a default\r\n\tvar searchCols = oSettings.aoPreSearchCols;\r\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\r\n\r\n\t// Use the default column options function to initialise classes etc\r\n\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\r\n}\r\n\r\n\r\n/**\r\n * Apply options for a column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iCol column index to consider\r\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\r\n{\r\n\tvar oCol = oSettings.aoColumns[ iCol ];\r\n\tvar oClasses = oSettings.oClasses;\r\n\tvar th = $(oCol.nTh);\r\n\r\n\t// Try to get width information from the DOM. We can't get it from CSS\r\n\t// as we'd need to parse the CSS stylesheet. `width` option can override\r\n\tif ( ! oCol.sWidthOrig ) {\r\n\t\t// Width attribute\r\n\t\toCol.sWidthOrig = th.attr('width') || null;\r\n\r\n\t\t// Style attribute\r\n\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\r\n\t\tif ( t ) {\r\n\t\t\toCol.sWidthOrig = t[1];\r\n\t\t}\r\n\t}\r\n\r\n\t/* User specified column options */\r\n\tif ( oOptions !== undefined && oOptions !== null )\r\n\t{\r\n\t\t// Backwards compatibility\r\n\t\t_fnCompatCols( oOptions );\r\n\r\n\t\t// Map camel case parameters to their Hungarian counterparts\r\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\r\n\r\n\t\t/* Backwards compatibility for mDataProp */\r\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\r\n\t\t{\r\n\t\t\toOptions.mData = oOptions.mDataProp;\r\n\t\t}\r\n\r\n\t\tif ( oOptions.sType )\r\n\t\t{\r\n\t\t\toCol._sManualType = oOptions.sType;\r\n\t\t}\r\n\r\n\t\t// `class` is a reserved word in Javascript, so we need to provide\r\n\t\t// the ability to use a valid name for the camel case input\r\n\t\tif ( oOptions.className && ! oOptions.sClass )\r\n\t\t{\r\n\t\t\toOptions.sClass = oOptions.className;\r\n\t\t}\r\n\t\tif ( oOptions.sClass ) {\r\n\t\t\tth.addClass( oOptions.sClass );\r\n\t\t}\r\n\r\n\t\tvar origClass = oCol.sClass;\r\n\r\n\t\t$.extend( oCol, oOptions );\r\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\r\n\r\n\t\t// Merge class from previously defined classes with this one, rather than just\r\n\t\t// overwriting it in the extend above\r\n\t\tif (origClass !== oCol.sClass) {\r\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\r\n\t\t}\r\n\r\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\r\n\t\t * priority if defined\r\n\t\t */\r\n\t\tif ( oOptions.iDataSort !== undefined )\r\n\t\t{\r\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\r\n\t\t}\r\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\r\n\r\n\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\r\n\t\t// provided.\r\n\t\tif (! oCol.ariaTitle) {\r\n\t\t\toCol.ariaTitle = th.attr(\"aria-label\");\r\n\t\t}\r\n\t}\r\n\r\n\t/* Cache the data get and set functions for speed */\r\n\tvar mDataSrc = oCol.mData;\r\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\r\n\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\r\n\r\n\tvar attrTest = function( src ) {\r\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\r\n\t};\r\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\r\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\r\n\t);\r\n\toCol._setter = null;\r\n\r\n\toCol.fnGetData = function (rowData, type, meta) {\r\n\t\tvar innerData = mData( rowData, type, undefined, meta );\r\n\r\n\t\treturn mRender && type ?\r\n\t\t\tmRender( innerData, type, rowData, meta ) :\r\n\t\t\tinnerData;\r\n\t};\r\n\toCol.fnSetData = function ( rowData, val, meta ) {\r\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\r\n\t};\r\n\r\n\t// Indicate if DataTables should read DOM data as an object or array\r\n\t// Used in _fnGetRowElements\r\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\r\n\t\toSettings._rowReadObject = true;\r\n\t}\r\n\r\n\t/* Feature sorting overrides column specific when off */\r\n\tif ( !oSettings.oFeatures.bSort )\r\n\t{\r\n\t\toCol.bSortable = false;\r\n\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\r\n\t}\r\n\r\n\t/* Check that the class assignment is correct for sorting */\r\n\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\r\n\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\r\n\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableNone;\r\n\t\toCol.sSortingClassJUI = \"\";\r\n\t}\r\n\telse if ( bAsc && !bDesc )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableAsc;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\r\n\t}\r\n\telse if ( !bAsc && bDesc )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableDesc;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\r\n\t}\r\n\telse\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortable;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Adjust the table column widths for new data. Note: you would probably want to\r\n * do a redraw after calling this function!\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAdjustColumnSizing ( settings )\r\n{\r\n\t/* Not interested in doing column width calculation if auto-width is disabled */\r\n\tif ( settings.oFeatures.bAutoWidth !== false )\r\n\t{\r\n\t\tvar columns = settings.aoColumns;\r\n\r\n\t\t_fnCalculateColumnWidths( settings );\r\n\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tvar scroll = settings.oScroll;\r\n\tif ( scroll.sY !== '' || scroll.sX !== '')\r\n\t{\r\n\t\t_fnScrollDraw( settings );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\r\n}\r\n\r\n\r\n/**\r\n * Convert the index of a visible column to the index in the data array (take account\r\n * of hidden columns)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iMatch Visible column index to lookup\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\r\n{\r\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\r\n\treturn typeof aiVis[iMatch] === 'number' ?\r\n\t\taiVis[iMatch] :\r\n\t\tnull;\r\n}\r\n\r\n\r\n/**\r\n * Convert the index of an index in the data array and convert it to the visible\r\n *   column index (take account of hidden columns)\r\n *  @param {int} iMatch Column index to lookup\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\r\n{\r\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\tvar iPos = $.inArray( iMatch, aiVis );\r\n\r\n\treturn iPos !== -1 ? iPos : null;\r\n}\r\n\r\n\r\n/**\r\n * Get the number of visible columns\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the number of visible columns\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnVisbleColumns( oSettings )\r\n{\r\n\tvar vis = 0;\r\n\r\n\t// No reduce in IE8, use a loop for now\r\n\t$.each( oSettings.aoColumns, function ( i, col ) {\r\n\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\r\n\t\t\tvis++;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn vis;\r\n}\r\n\r\n\r\n/**\r\n * Get an array of column indexes that match a given property\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sParam Parameter in aoColumns to look for - typically\r\n *    bVisible or bSearchable\r\n *  @returns {array} Array of indexes with matched properties\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetColumns( oSettings, sParam )\r\n{\r\n\tvar a = [];\r\n\r\n\t$.map( oSettings.aoColumns, function(val, i) {\r\n\t\tif ( val[sParam] ) {\r\n\t\t\ta.push( i );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn a;\r\n}\r\n\r\n\r\n/**\r\n * Calculate the 'type' of a column\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnTypes ( settings )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar data = settings.aoData;\r\n\tvar types = DataTable.ext.type.detect;\r\n\tvar i, ien, j, jen, k, ken;\r\n\tvar col, cell, detectedType, cache;\r\n\r\n\t// For each column, spin over the \r\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\tcol = columns[i];\r\n\t\tcache = [];\r\n\r\n\t\tif ( ! col.sType && col._sManualType ) {\r\n\t\t\tcol.sType = col._sManualType;\r\n\t\t}\r\n\t\telse if ( ! col.sType ) {\r\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\r\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\r\n\t\t\t\t\t// Use a cache array so we only need to get the type data\r\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\r\n\t\t\t\t\tif ( cache[k] === undefined ) {\r\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\r\n\r\n\t\t\t\t\t// If null, then this type can't apply to this column, so\r\n\t\t\t\t\t// rather than testing all cells, break out. There is an\r\n\t\t\t\t\t// exception for the last type which is `html`. We need to\r\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\r\n\t\t\t\t\t// types\r\n\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only a single match is needed for html type since it is\r\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\r\n\t\t\t\t\t// must not be empty\r\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Type is valid for all data points in the column - use this\r\n\t\t\t\t// type\r\n\t\t\t\tif ( detectedType ) {\r\n\t\t\t\t\tcol.sType = detectedType;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Fall back - if no type was detected, always use string\r\n\t\t\tif ( ! col.sType ) {\r\n\t\t\t\tcol.sType = 'string';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Take the column definitions and static columns arrays and calculate how\r\n * they relate to column indexes. The callback function will then apply the\r\n * definition found for a column to a suitable configuration object.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\r\n *  @param {array} aoCols The aoColumns array that defines columns individually\r\n *  @param {function} fn Callback function - takes two parameters, the calculated\r\n *    column index and the definition for that column.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\r\n{\r\n\tvar i, iLen, j, jLen, k, kLen, def;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\t// Column definitions with aTargets\r\n\tif ( aoColDefs )\r\n\t{\r\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\r\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\r\n\t\t{\r\n\t\t\tdef = aoColDefs[i];\r\n\r\n\t\t\t/* Each definition can target multiple columns, as it is an array */\r\n\t\t\tvar aTargets = def.target !== undefined\r\n\t\t\t\t? def.target\r\n\t\t\t\t: def.targets !== undefined\r\n\t\t\t\t\t? def.targets\r\n\t\t\t\t\t: def.aTargets;\r\n\r\n\t\t\tif ( ! Array.isArray( aTargets ) )\r\n\t\t\t{\r\n\t\t\t\taTargets = [ aTargets ];\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Add columns that we don't yet know about */\r\n\t\t\t\t\twhile( columns.length <= aTargets[j] )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_fnAddColumn( oSettings );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* Integer, basic index */\r\n\t\t\t\t\tfn( aTargets[j], def );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Negative integer, right to left column counting */\r\n\t\t\t\t\tfn( columns.length+aTargets[j], def );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( typeof aTargets[j] === 'string' )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Class name matching on TH element */\r\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\r\n\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfn( k, def );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Statically defined columns array\r\n\tif ( aoCols )\r\n\t{\r\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tfn( i, aoCols[i] );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Add a data array to the table, creating DOM node etc. This is the parallel to\r\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\r\n * DOM source.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aData data array to be added\r\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\r\n{\r\n\t/* Create the object for storing information about this new row */\r\n\tvar iRow = oSettings.aoData.length;\r\n\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\r\n\t\tsrc: nTr ? 'dom' : 'data',\r\n\t\tidx: iRow\r\n\t} );\r\n\r\n\toData._aData = aDataIn;\r\n\toSettings.aoData.push( oData );\r\n\r\n\t/* Create the cells */\r\n\tvar nTd, sThisType;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\t// Invalidate the column types as the new data needs to be revalidated\r\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tcolumns[i].sType = null;\r\n\t}\r\n\r\n\t/* Add to the display array */\r\n\toSettings.aiDisplayMaster.push( iRow );\r\n\r\n\tvar id = oSettings.rowIdFn( aDataIn );\r\n\tif ( id !== undefined ) {\r\n\t\toSettings.aIds[ id ] = oData;\r\n\t}\r\n\r\n\t/* Create the DOM information, or register it if already present */\r\n\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\r\n\t{\r\n\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\r\n\t}\r\n\r\n\treturn iRow;\r\n}\r\n\r\n\r\n/**\r\n * Add one or more TR elements to the table. Generally we'd expect to\r\n * use this for reading data from a DOM sourced table, but it could be\r\n * used for an TR element. Note that if a TR is given, it is used (i.e.\r\n * it is not cloned).\r\n *  @param {object} settings dataTables settings object\r\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\r\n *  @returns {array} Array of indexes for the added rows\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddTr( settings, trs )\r\n{\r\n\tvar row;\r\n\r\n\t// Allow an individual node to be passed in\r\n\tif ( ! (trs instanceof $) ) {\r\n\t\ttrs = $(trs);\r\n\t}\r\n\r\n\treturn trs.map( function (i, el) {\r\n\t\trow = _fnGetRowElements( settings, el );\r\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Take a TR element and convert it to an index in aoData\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} n the TR element to find\r\n *  @returns {int} index if the node is found, null if not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnNodeToDataIndex( oSettings, n )\r\n{\r\n\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\r\n}\r\n\r\n\r\n/**\r\n * Take a TD element and convert it into a column data index (not the visible index)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow The row number the TD/TH can be found in\r\n *  @param {node} n The TD/TH element to find\r\n *  @returns {int} index if the node is found, -1 if not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnNodeToColumnIndex( oSettings, iRow, n )\r\n{\r\n\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\r\n}\r\n\r\n\r\n/**\r\n * Get the data for a given cell from the internal cache, taking into account data mapping\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\r\n *  @returns {*} Cell data\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\r\n{\r\n\tif (type === 'search') {\r\n\t\ttype = 'filter';\r\n\t}\r\n\telse if (type === 'order') {\r\n\t\ttype = 'sort';\r\n\t}\r\n\r\n\tvar draw           = settings.iDraw;\r\n\tvar col            = settings.aoColumns[colIdx];\r\n\tvar rowData        = settings.aoData[rowIdx]._aData;\r\n\tvar defaultContent = col.sDefaultContent;\r\n\tvar cellData       = col.fnGetData( rowData, type, {\r\n\t\tsettings: settings,\r\n\t\trow:      rowIdx,\r\n\t\tcol:      colIdx\r\n\t} );\r\n\r\n\tif ( cellData === undefined ) {\r\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\r\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\r\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\r\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\r\n\t\t\tsettings.iDrawError = draw;\r\n\t\t}\r\n\t\treturn defaultContent;\r\n\t}\r\n\r\n\t// When the data source is null and a specific data type is requested (i.e.\r\n\t// not the original data), we can use default column data\r\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\r\n\t\tcellData = defaultContent;\r\n\t}\r\n\telse if ( typeof cellData === 'function' ) {\r\n\t\t// If the data source is a function, then we run it and use the return,\r\n\t\t// executing in the scope of the data object (for instances)\r\n\t\treturn cellData.call( rowData );\r\n\t}\r\n\r\n\tif ( cellData === null && type === 'display' ) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tif ( type === 'filter' ) {\r\n\t\tvar fomatters = DataTable.ext.type.search;\r\n\r\n\t\tif ( fomatters[ col.sType ] ) {\r\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\r\n\t\t}\r\n\t}\r\n\r\n\treturn cellData;\r\n}\r\n\r\n\r\n/**\r\n * Set the value for a specific cell, into the internal data cache\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {*} val Value to set\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\r\n{\r\n\tvar col     = settings.aoColumns[colIdx];\r\n\tvar rowData = settings.aoData[rowIdx]._aData;\r\n\r\n\tcol.fnSetData( rowData, val, {\r\n\t\tsettings: settings,\r\n\t\trow:      rowIdx,\r\n\t\tcol:      colIdx\r\n\t}  );\r\n}\r\n\r\n\r\n// Private variable that is used to match action syntax in the data property object\r\nvar __reArray = /\\[.*?\\]$/;\r\nvar __reFn = /\\(\\)$/;\r\n\r\n/**\r\n * Split string on periods, taking into account escaped periods\r\n * @param  {string} str String to split\r\n * @return {array} Split string\r\n */\r\nfunction _fnSplitObjNotation( str )\r\n{\r\n\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\r\n\t\treturn s.replace(/\\\\\\./g, '.');\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Return a function that can be used to get data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data get function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnGetObjectDataFn = DataTable.util.get;\r\n\r\n\r\n/**\r\n * Return a function that can be used to set data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data set function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnSetObjectDataFn = DataTable.util.set;\r\n\r\n\r\n/**\r\n * Return an array with the full table data\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns array {array} aData Master data array\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetDataMaster ( settings )\r\n{\r\n\treturn _pluck( settings.aoData, '_aData' );\r\n}\r\n\r\n\r\n/**\r\n * Nuke the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnClearTable( settings )\r\n{\r\n\tsettings.aoData.length = 0;\r\n\tsettings.aiDisplayMaster.length = 0;\r\n\tsettings.aiDisplay.length = 0;\r\n\tsettings.aIds = {};\r\n}\r\n\r\n\r\n /**\r\n * Take an array of integers (index array) and remove a target integer (value - not\r\n * the key!)\r\n *  @param {array} a Index array to target\r\n *  @param {int} iTarget value to find\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDeleteIndex( a, iTarget, splice )\r\n{\r\n\tvar iTargetIndex = -1;\r\n\r\n\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tif ( a[i] == iTarget )\r\n\t\t{\r\n\t\t\tiTargetIndex = i;\r\n\t\t}\r\n\t\telse if ( a[i] > iTarget )\r\n\t\t{\r\n\t\t\ta[i]--;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( iTargetIndex != -1 && splice === undefined )\r\n\t{\r\n\t\ta.splice( iTargetIndex, 1 );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Mark cached data as invalid such that a re-read of the data will occur when\r\n * the cached data is next requested. Also update from the data source object.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {int}    rowIdx   Row index to invalidate\r\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\r\n *     or 'data'\r\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\r\n *     row will be invalidated\r\n * @memberof DataTable#oApi\r\n *\r\n * @todo For the modularisation of v1.11 this will need to become a callback, so\r\n *   the sort and filter methods can subscribe to it. That will required\r\n *   initialisation options for sorting, which is why it is not already baked in\r\n */\r\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\r\n{\r\n\tvar row = settings.aoData[ rowIdx ];\r\n\tvar i, ien;\r\n\tvar cellWrite = function ( cell, col ) {\r\n\t\t// This is very frustrating, but in IE if you just write directly\r\n\t\t// to innerHTML, and elements that are overwritten are GC'ed,\r\n\t\t// even if there is a reference to them elsewhere\r\n\t\twhile ( cell.childNodes.length ) {\r\n\t\t\tcell.removeChild( cell.firstChild );\r\n\t\t}\r\n\r\n\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\r\n\t};\r\n\r\n\t// Are we reading last data from DOM or the data object?\r\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\r\n\t\t// Read the data from the DOM\r\n\t\trow._aData = _fnGetRowElements(\r\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\r\n\t\t\t)\r\n\t\t\t.data;\r\n\t}\r\n\telse {\r\n\t\t// Reading from data object, update the DOM\r\n\t\tvar cells = row.anCells;\r\n\r\n\t\tif ( cells ) {\r\n\t\t\tif ( colIdx !== undefined ) {\r\n\t\t\t\tcellWrite( cells[colIdx], colIdx );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tcellWrite( cells[i], i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// For both row and cell invalidation, the cached data for sorting and\r\n\t// filtering is nulled out\r\n\trow._aSortData = null;\r\n\trow._aFilterData = null;\r\n\r\n\t// Invalidate the type for a specific column (if given) or all columns since\r\n\t// the data might have changed\r\n\tvar cols = settings.aoColumns;\r\n\tif ( colIdx !== undefined ) {\r\n\t\tcols[ colIdx ].sType = null;\r\n\t}\r\n\telse {\r\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\r\n\t\t\tcols[i].sType = null;\r\n\t\t}\r\n\r\n\t\t// Update DataTables special `DT_*` attributes for the row\r\n\t\t_fnRowAttributes( settings, row );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Build a data source object from an HTML row, reading the contents of the\r\n * cells that are in the row.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {node|object} TR element from which to read data or existing row\r\n *   object from which to re-read the data from the cells\r\n * @param {int} [colIdx] Optional column index\r\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\r\n *   parameter should also be given and will be used to write the data into.\r\n *   Only the column in question will be written\r\n * @returns {object} Object with two parameters: `data` the data read, in\r\n *   document order, and `cells` and array of nodes (they can be useful to the\r\n *   caller, so rather than needing a second traversal to get them, just return\r\n *   them from here).\r\n * @memberof DataTable#oApi\r\n */\r\nfunction _fnGetRowElements( settings, row, colIdx, d )\r\n{\r\n\tvar\r\n\t\ttds = [],\r\n\t\ttd = row.firstChild,\r\n\t\tname, col, o, i=0, contents,\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tobjectRead = settings._rowReadObject;\r\n\r\n\t// Allow the data object to be passed in, or construct\r\n\td = d !== undefined ?\r\n\t\td :\r\n\t\tobjectRead ?\r\n\t\t\t{} :\r\n\t\t\t[];\r\n\r\n\tvar attr = function ( str, td  ) {\r\n\t\tif ( typeof str === 'string' ) {\r\n\t\t\tvar idx = str.indexOf('@');\r\n\r\n\t\t\tif ( idx !== -1 ) {\r\n\t\t\t\tvar attr = str.substring( idx+1 );\r\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\r\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Read data from a cell and store into the data object\r\n\tvar cellProcess = function ( cell ) {\r\n\t\tif ( colIdx === undefined || colIdx === i ) {\r\n\t\t\tcol = columns[i];\r\n\t\t\tcontents = (cell.innerHTML).trim();\r\n\r\n\t\t\tif ( col && col._bAttrSrc ) {\r\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\r\n\t\t\t\tsetter( d, contents );\r\n\r\n\t\t\t\tattr( col.mData.sort, cell );\r\n\t\t\t\tattr( col.mData.type, cell );\r\n\t\t\t\tattr( col.mData.filter, cell );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Depending on the `data` option for the columns the data can\r\n\t\t\t\t// be read to either an object or an array.\r\n\t\t\t\tif ( objectRead ) {\r\n\t\t\t\t\tif ( ! col._setter ) {\r\n\t\t\t\t\t\t// Cache the setter function\r\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcol._setter( d, contents );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td[i] = contents;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ti++;\r\n\t};\r\n\r\n\tif ( td ) {\r\n\t\t// `tr` element was passed in\r\n\t\twhile ( td ) {\r\n\t\t\tname = td.nodeName.toUpperCase();\r\n\r\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\r\n\t\t\t\tcellProcess( td );\r\n\t\t\t\ttds.push( td );\r\n\t\t\t}\r\n\r\n\t\t\ttd = td.nextSibling;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Existing row object passed in\r\n\t\ttds = row.anCells;\r\n\r\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\r\n\t\t\tcellProcess( tds[j] );\r\n\t\t}\r\n\t}\r\n\r\n\t// Read the ID from the DOM if present\r\n\tvar rowNode = row.firstChild ? row : row.nTr;\r\n\r\n\tif ( rowNode ) {\r\n\t\tvar id = rowNode.getAttribute( 'id' );\r\n\r\n\t\tif ( id ) {\r\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tdata: d,\r\n\t\tcells: tds\r\n\t};\r\n}\r\n/**\r\n * Create a new TR element (and it's TD children) for a row\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow Row to consider\r\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\r\n{\r\n\tvar\r\n\t\trow = oSettings.aoData[iRow],\r\n\t\trowData = row._aData,\r\n\t\tcells = [],\r\n\t\tnTr, nTd, oCol,\r\n\t\ti, iLen, create;\r\n\r\n\tif ( row.nTr === null )\r\n\t{\r\n\t\tnTr = nTrIn || document.createElement('tr');\r\n\r\n\t\trow.nTr = nTr;\r\n\t\trow.anCells = cells;\r\n\r\n\t\t/* Use a private property on the node to allow reserve mapping from the node\r\n\t\t * to the aoData array for fast look up\r\n\t\t */\r\n\t\tnTr._DT_RowIndex = iRow;\r\n\r\n\t\t/* Special parameters can be given by the data source to be used on the row */\r\n\t\t_fnRowAttributes( oSettings, row );\r\n\r\n\t\t/* Process each column */\r\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\toCol = oSettings.aoColumns[i];\r\n\t\t\tcreate = nTrIn ? false : true;\r\n\r\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\r\n\r\n\t\t\tif (! nTd) {\r\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t}\r\n\r\n\t\t\tnTd._DT_CellIndex = {\r\n\t\t\t\trow: iRow,\r\n\t\t\t\tcolumn: i\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tcells.push( nTd );\r\n\r\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\r\n\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\r\n\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\r\n\t\t\t)) {\r\n\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\r\n\t\t\t}\r\n\r\n\t\t\t/* Add user defined class */\r\n\t\t\tif ( oCol.sClass )\r\n\t\t\t{\r\n\t\t\t\tnTd.className += ' '+oCol.sClass;\r\n\t\t\t}\r\n\r\n\t\t\t// Visibility - add or remove as required\r\n\t\t\tif ( oCol.bVisible && ! nTrIn )\r\n\t\t\t{\r\n\t\t\t\tnTr.appendChild( nTd );\r\n\t\t\t}\r\n\t\t\telse if ( ! oCol.bVisible && nTrIn )\r\n\t\t\t{\r\n\t\t\t\tnTd.parentNode.removeChild( nTd );\r\n\t\t\t}\r\n\r\n\t\t\tif ( oCol.fnCreatedCell )\r\n\t\t\t{\r\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\r\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Add attributes to a row based on the special `DT_*` parameters in a data\r\n * source object.\r\n *  @param {object} settings DataTables settings object\r\n *  @param {object} DataTables row object for the row to be modified\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnRowAttributes( settings, row )\r\n{\r\n\tvar tr = row.nTr;\r\n\tvar data = row._aData;\r\n\r\n\tif ( tr ) {\r\n\t\tvar id = settings.rowIdFn( data );\r\n\r\n\t\tif ( id ) {\r\n\t\t\ttr.id = id;\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowClass ) {\r\n\t\t\t// Remove any classes added by DT_RowClass before\r\n\t\t\tvar a = data.DT_RowClass.split(' ');\r\n\t\t\trow.__rowc = row.__rowc ?\r\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\r\n\t\t\t\ta;\r\n\r\n\t\t\t$(tr)\r\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\r\n\t\t\t\t.addClass( data.DT_RowClass );\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowAttr ) {\r\n\t\t\t$(tr).attr( data.DT_RowAttr );\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowData ) {\r\n\t\t\t$(tr).data( data.DT_RowData );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Create the HTML header for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBuildHead( oSettings )\r\n{\r\n\tvar i, ien, cell, row, column;\r\n\tvar thead = oSettings.nTHead;\r\n\tvar tfoot = oSettings.nTFoot;\r\n\tvar createHeader = $('th, td', thead).length === 0;\r\n\tvar classes = oSettings.oClasses;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\tif ( createHeader ) {\r\n\t\trow = $('<tr/>').appendTo( thead );\r\n\t}\r\n\r\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\t\tcell = $( column.nTh ).addClass( column.sClass );\r\n\r\n\t\tif ( createHeader ) {\r\n\t\t\tcell.appendTo( row );\r\n\t\t}\r\n\r\n\t\t// 1.11 move into sorting\r\n\t\tif ( oSettings.oFeatures.bSort ) {\r\n\t\t\tcell.addClass( column.sSortingClass );\r\n\r\n\t\t\tif ( column.bSortable !== false ) {\r\n\t\t\t\tcell\r\n\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\r\n\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\r\n\r\n\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( column.sTitle != cell[0].innerHTML ) {\r\n\t\t\tcell.html( column.sTitle );\r\n\t\t}\r\n\r\n\t\t_fnRenderer( oSettings, 'header' )(\r\n\t\t\toSettings, cell, column, classes\r\n\t\t);\r\n\t}\r\n\r\n\tif ( createHeader ) {\r\n\t\t_fnDetectHeader( oSettings.aoHeader, thead );\r\n\t}\r\n\r\n\t/* Deal with the footer - add classes if required */\r\n\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\r\n\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\r\n\r\n\t// Cache the footer cells. Note that we only take the cells from the first\r\n\t// row in the footer. If there is more than one row the user wants to\r\n\t// interact with, they need to use the table().foot() method. Note also this\r\n\t// allows cells to be used for multiple columns using colspan\r\n\tif ( tfoot !== null ) {\r\n\t\tvar cells = oSettings.aoFooter[0];\r\n\r\n\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n\t\t\tcolumn = columns[i];\r\n\r\n\t\t\tif (column) {\r\n\t\t\t\tcolumn.nTf = cells[i].cell;\r\n\t\r\n\t\t\t\tif ( column.sClass ) {\r\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Draw the header (or footer) element based on the column visibility states. The\r\n * methodology here is to use the layout array from _fnDetectHeader, modified for\r\n * the instantaneous column visibility, to construct the new layout. The grid is\r\n * traversed over cell at a time in a rows x columns grid fashion, although each\r\n * cell insert can cover multiple elements in the grid - which is tracks using the\r\n * aApplied array. Cell inserts in the grid will only occur where there isn't\r\n * already a cell in that position.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\r\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\r\n{\r\n\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\r\n\tvar aoLocal = [];\r\n\tvar aApplied = [];\r\n\tvar iColumns = oSettings.aoColumns.length;\r\n\tvar iRowspan, iColspan;\r\n\r\n\tif ( ! aoSource )\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (  bIncludeHidden === undefined )\r\n\t{\r\n\t\tbIncludeHidden = false;\r\n\t}\r\n\r\n\t/* Make a copy of the master layout array, but without the visible columns in it */\r\n\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\r\n\t{\r\n\t\taoLocal[i] = aoSource[i].slice();\r\n\t\taoLocal[i].nTr = aoSource[i].nTr;\r\n\r\n\t\t/* Remove any columns which are currently hidden */\r\n\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\r\n\t\t{\r\n\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\r\n\t\t\t{\r\n\t\t\t\taoLocal[i].splice( j, 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Prep the applied array - it needs an element for each row */\r\n\t\taApplied.push( [] );\r\n\t}\r\n\r\n\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tnLocalTr = aoLocal[i].nTr;\r\n\r\n\t\t/* All cells are going to be replaced, so empty out the row */\r\n\t\tif ( nLocalTr )\r\n\t\t{\r\n\t\t\twhile( (n = nLocalTr.firstChild) )\r\n\t\t\t{\r\n\t\t\t\tnLocalTr.removeChild( n );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\r\n\t\t{\r\n\t\t\tiRowspan = 1;\r\n\t\t\tiColspan = 1;\r\n\r\n\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\r\n\t\t\t * insert point. If there is, then there is nothing to do.\r\n\t\t\t */\r\n\t\t\tif ( aApplied[i][j] === undefined )\r\n\t\t\t{\r\n\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\r\n\t\t\t\taApplied[i][j] = 1;\r\n\r\n\t\t\t\t/* Expand the cell to cover as many rows as needed */\r\n\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\r\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\r\n\t\t\t\t{\r\n\t\t\t\t\taApplied[i+iRowspan][j] = 1;\r\n\t\t\t\t\tiRowspan++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Expand the cell to cover as many columns as needed */\r\n\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\r\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Must update the applied array over the rows for the columns */\r\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tiColspan++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Do the actual expansion in the DOM */\r\n\t\t\t\t$(aoLocal[i][j].cell)\r\n\t\t\t\t\t.attr('rowspan', iRowspan)\r\n\t\t\t\t\t.attr('colspan', iColspan);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Insert the required TR nodes into the table for display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param ajaxComplete true after ajax call to complete rendering\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDraw( oSettings, ajaxComplete )\r\n{\r\n\t// Allow for state saving and a custom start position\r\n\t_fnStart( oSettings );\r\n\r\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\r\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\r\n\tif ( $.inArray( false, aPreDraw ) !== -1 )\r\n\t{\r\n\t\t_fnProcessingDisplay( oSettings, false );\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar anRows = [];\r\n\tvar iRowCount = 0;\r\n\tvar asStripeClasses = oSettings.asStripeClasses;\r\n\tvar iStripes = asStripeClasses.length;\r\n\tvar oLang = oSettings.oLanguage;\r\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n\tvar aiDisplay = oSettings.aiDisplay;\r\n\tvar iDisplayStart = oSettings._iDisplayStart;\r\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\r\n\r\n\toSettings.bDrawing = true;\r\n\r\n\t/* Server-side processing draw intercept */\r\n\tif ( oSettings.bDeferLoading )\r\n\t{\r\n\t\toSettings.bDeferLoading = false;\r\n\t\toSettings.iDraw++;\r\n\t\t_fnProcessingDisplay( oSettings, false );\r\n\t}\r\n\telse if ( !bServerSide )\r\n\t{\r\n\t\toSettings.iDraw++;\r\n\t}\r\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\r\n\t{\r\n\t\t_fnAjaxUpdate( oSettings );\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( aiDisplay.length !== 0 )\r\n\t{\r\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\r\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\r\n\r\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\r\n\t\t{\r\n\t\t\tvar iDataIndex = aiDisplay[j];\r\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\r\n\t\t\tif ( aoData.nTr === null )\r\n\t\t\t{\r\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\r\n\t\t\t}\r\n\r\n\t\t\tvar nRow = aoData.nTr;\r\n\r\n\t\t\t/* Remove the old striping classes and then add the new one */\r\n\t\t\tif ( iStripes !== 0 )\r\n\t\t\t{\r\n\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\r\n\t\t\t\tif ( aoData._sRowStripe != sStripe )\r\n\t\t\t\t{\r\n\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\r\n\t\t\t\t\taoData._sRowStripe = sStripe;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Row callback functions - might want to manipulate the row\r\n\t\t\t// iRowCount and j are not currently documented. Are they at all\r\n\t\t\t// useful?\r\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\r\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\r\n\r\n\t\t\tanRows.push( nRow );\r\n\t\t\tiRowCount++;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/* Table is empty - create a row with an empty message in it */\r\n\t\tvar sZero = oLang.sZeroRecords;\r\n\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\r\n\t\t{\r\n\t\t\tsZero = oLang.sLoadingRecords;\r\n\t\t}\r\n\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\r\n\t\t{\r\n\t\t\tsZero = oLang.sEmptyTable;\r\n\t\t}\r\n\r\n\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\r\n\t\t\t.append( $('<td />', {\r\n\t\t\t\t'valign':  'top',\r\n\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\r\n\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\r\n\t\t\t} ).html( sZero ) )[0];\r\n\t}\r\n\r\n\t/* Header and footer callbacks */\r\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\r\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\r\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n\tvar body = $(oSettings.nTBody);\r\n\r\n\tbody.children().detach();\r\n\tbody.append( $(anRows) );\r\n\r\n\t/* Call all required callback functions for the end of a draw */\r\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\r\n\r\n\t/* Draw is complete, sorting and filtering must be as well */\r\n\toSettings.bSorted = false;\r\n\toSettings.bFiltered = false;\r\n\toSettings.bDrawing = false;\r\n}\r\n\r\n\r\n/**\r\n * Redraw the table - taking account of the various features which are enabled\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\r\n *    the paging is reset to the first page\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnReDraw( settings, holdPosition )\r\n{\r\n\tvar\r\n\t\tfeatures = settings.oFeatures,\r\n\t\tsort     = features.bSort,\r\n\t\tfilter   = features.bFilter;\r\n\r\n\tif ( sort ) {\r\n\t\t_fnSort( settings );\r\n\t}\r\n\r\n\tif ( filter ) {\r\n\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\r\n\t}\r\n\telse {\r\n\t\t// No filtering, so we want to just use the display master\r\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\t}\r\n\r\n\tif ( holdPosition !== true ) {\r\n\t\tsettings._iDisplayStart = 0;\r\n\t}\r\n\r\n\t// Let any modules know about the draw hold position state (used by\r\n\t// scrolling internally)\r\n\tsettings._drawHold = holdPosition;\r\n\r\n\t_fnDraw( settings );\r\n\r\n\tsettings._drawHold = false;\r\n}\r\n\r\n\r\n/**\r\n * Add the options to the page HTML for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddOptionsHtml ( oSettings )\r\n{\r\n\tvar classes = oSettings.oClasses;\r\n\tvar table = $(oSettings.nTable);\r\n\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\r\n\tvar features = oSettings.oFeatures;\r\n\r\n\t// All DataTables are wrapped in a div\r\n\tvar insert = $('<div/>', {\r\n\t\tid:      oSettings.sTableId+'_wrapper',\r\n\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\r\n\t} );\r\n\r\n\toSettings.nHolding = holding[0];\r\n\toSettings.nTableWrapper = insert[0];\r\n\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\r\n\r\n\t/* Loop over the user set positioning and place the elements as needed */\r\n\tvar aDom = oSettings.sDom.split('');\r\n\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\r\n\tfor ( var i=0 ; i<aDom.length ; i++ )\r\n\t{\r\n\t\tfeatureNode = null;\r\n\t\tcOption = aDom[i];\r\n\r\n\t\tif ( cOption == '<' )\r\n\t\t{\r\n\t\t\t/* New container div */\r\n\t\t\tnNewNode = $('<div/>')[0];\r\n\r\n\t\t\t/* Check to see if we should append an id and/or a class name to the container */\r\n\t\t\tcNext = aDom[i+1];\r\n\t\t\tif ( cNext == \"'\" || cNext == '\"' )\r\n\t\t\t{\r\n\t\t\t\tsAttr = \"\";\r\n\t\t\t\tj = 2;\r\n\t\t\t\twhile ( aDom[i+j] != cNext )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr += aDom[i+j];\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\r\n\t\t\t\tif ( sAttr == \"H\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr = classes.sJUIHeader;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( sAttr == \"F\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr = classes.sJUIFooter;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\r\n\t\t\t\t * breaks the string into parts and applies them as needed\r\n\t\t\t\t */\r\n\t\t\t\tif ( sAttr.indexOf('.') != -1 )\r\n\t\t\t\t{\r\n\t\t\t\t\tvar aSplit = sAttr.split('.');\r\n\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\r\n\t\t\t\t\tnNewNode.className = aSplit[1];\r\n\t\t\t\t}\r\n\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tnNewNode.className = sAttr;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti += j; /* Move along the position array */\r\n\t\t\t}\r\n\r\n\t\t\tinsert.append( nNewNode );\r\n\t\t\tinsert = $(nNewNode);\r\n\t\t}\r\n\t\telse if ( cOption == '>' )\r\n\t\t{\r\n\t\t\t/* End container div */\r\n\t\t\tinsert = insert.parent();\r\n\t\t}\r\n\t\t// @todo Move options into their own plugins?\r\n\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\r\n\t\t{\r\n\t\t\t/* Length */\r\n\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'f' && features.bFilter )\r\n\t\t{\r\n\t\t\t/* Filter */\r\n\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'r' && features.bProcessing )\r\n\t\t{\r\n\t\t\t/* pRocessing */\r\n\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 't' )\r\n\t\t{\r\n\t\t\t/* Table */\r\n\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption ==  'i' && features.bInfo )\r\n\t\t{\r\n\t\t\t/* Info */\r\n\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'p' && features.bPaginate )\r\n\t\t{\r\n\t\t\t/* Pagination */\r\n\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\r\n\t\t}\r\n\t\telse if ( DataTable.ext.feature.length !== 0 )\r\n\t\t{\r\n\t\t\t/* Plug-in features */\r\n\t\t\tvar aoFeatures = DataTable.ext.feature;\r\n\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\r\n\t\t\t{\r\n\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add to the 2D features array */\r\n\t\tif ( featureNode )\r\n\t\t{\r\n\t\t\tvar aanFeatures = oSettings.aanFeatures;\r\n\r\n\t\t\tif ( ! aanFeatures[cOption] )\r\n\t\t\t{\r\n\t\t\t\taanFeatures[cOption] = [];\r\n\t\t\t}\r\n\r\n\t\t\taanFeatures[cOption].push( featureNode );\r\n\t\t\tinsert.append( featureNode );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Built our DOM structure - replace the holding div with what we want */\r\n\tholding.replaceWith( insert );\r\n\toSettings.nHolding = null;\r\n}\r\n\r\n\r\n/**\r\n * Use the DOM source to create up an array of header cells. The idea here is to\r\n * create a layout grid (array) of rows x columns, which contains a reference\r\n * to the cell that that point in the grid (regardless of col/rowspan), such that\r\n * any column / row could be removed and the new grid constructed\r\n *  @param array {object} aLayout Array to store the calculated layout in\r\n *  @param {node} nThead The header/footer element for the table\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDetectHeader ( aLayout, nThead )\r\n{\r\n\tvar nTrs = $(nThead).children('tr');\r\n\tvar nTr, nCell;\r\n\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\r\n\tvar bUnique;\r\n\tvar fnShiftCol = function ( a, i, j ) {\r\n\t\tvar k = a[i];\r\n                while ( k[j] ) {\r\n\t\t\tj++;\r\n\t\t}\r\n\t\treturn j;\r\n\t};\r\n\r\n\taLayout.splice( 0, aLayout.length );\r\n\r\n\t/* We know how many rows there are in the layout - so prep it */\r\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\r\n\t{\r\n\t\taLayout.push( [] );\r\n\t}\r\n\r\n\t/* Calculate a layout array */\r\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tnTr = nTrs[i];\r\n\t\tiColumn = 0;\r\n\r\n\t\t/* For every cell in the row... */\r\n\t\tnCell = nTr.firstChild;\r\n\t\twhile ( nCell ) {\r\n\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\r\n\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\r\n\t\t\t{\r\n\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\r\n\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\r\n\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\r\n\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\r\n\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\r\n\r\n\t\t\t\t/* There might be colspan cells already in this row, so shift our target\r\n\t\t\t\t * accordingly\r\n\t\t\t\t */\r\n\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\r\n\r\n\t\t\t\t/* Cache calculation for unique columns */\r\n\t\t\t\tbUnique = iColspan === 1 ? true : false;\r\n\r\n\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\r\n\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\r\n\t\t\t\t\t\t\t\"cell\": nCell,\r\n\t\t\t\t\t\t\t\"unique\": bUnique\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\taLayout[i+k].nTr = nTr;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnCell = nCell.nextSibling;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get an array of unique th elements, one for each column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} nHeader automatically detect the layout from this node - optional\r\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\r\n *  @returns array {node} aReturn list of unique th's\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\r\n{\r\n\tvar aReturn = [];\r\n\tif ( !aLayout )\r\n\t{\r\n\t\taLayout = oSettings.aoHeader;\r\n\t\tif ( nHeader )\r\n\t\t{\r\n\t\t\taLayout = [];\r\n\t\t\t_fnDetectHeader( aLayout, nHeader );\r\n\t\t}\r\n\t}\r\n\r\n\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\r\n\t\t{\r\n\t\t\tif ( aLayout[i][j].unique &&\r\n\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\r\n\t\t\t{\r\n\t\t\t\taReturn[j] = aLayout[i][j].cell;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn aReturn;\r\n}\r\n\r\n/**\r\n * Set the start position for draw\r\n *  @param {object} oSettings dataTables settings object\r\n */\r\nfunction _fnStart( oSettings )\r\n{\r\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\r\n\r\n\t// Check and see if we have an initial draw position from state saving\r\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\r\n\t{\r\n\t\toSettings._iDisplayStart = bServerSide ?\r\n\t\t\tiInitDisplayStart :\r\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\r\n\t\t\t\t0 :\r\n\t\t\t\tiInitDisplayStart;\r\n\r\n\t\toSettings.iInitDisplayStart = -1;\r\n\t}\r\n}\r\n\r\n/**\r\n * Create an Ajax call based on the table's settings, taking into account that\r\n * parameters can have multiple forms, and backwards compatibility.\r\n *\r\n * @param {object} oSettings dataTables settings object\r\n * @param {array} data Data to send to the server, required by\r\n *     DataTables - may be augmented by developer callbacks\r\n * @param {function} fn Callback function to run when data is obtained\r\n */\r\nfunction _fnBuildAjax( oSettings, data, fn )\r\n{\r\n\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\r\n\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\r\n\r\n\t// Convert to object based for 1.10+ if using the old array scheme which can\r\n\t// come from server-side processing or serverParams\r\n\tif ( data && Array.isArray(data) ) {\r\n\t\tvar tmp = {};\r\n\t\tvar rbracket = /(.*?)\\[\\]$/;\r\n\r\n\t\t$.each( data, function (key, val) {\r\n\t\t\tvar match = val.name.match(rbracket);\r\n\r\n\t\t\tif ( match ) {\r\n\t\t\t\t// Support for arrays\r\n\t\t\t\tvar name = match[0];\r\n\r\n\t\t\t\tif ( ! tmp[ name ] ) {\r\n\t\t\t\t\ttmp[ name ] = [];\r\n\t\t\t\t}\r\n\t\t\t\ttmp[ name ].push( val.value );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp[val.name] = val.value;\r\n\t\t\t}\r\n\t\t} );\r\n\t\tdata = tmp;\r\n\t}\r\n\r\n\tvar ajaxData;\r\n\tvar ajax = oSettings.ajax;\r\n\tvar instance = oSettings.oInstance;\r\n\tvar callback = function ( json ) {\r\n\t\tvar status = oSettings.jqXHR\r\n\t\t\t? oSettings.jqXHR.status\r\n\t\t\t: null;\r\n\r\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\r\n\t\t\tjson = {};\r\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\r\n\t\t}\r\n\r\n\t\tvar error = json.error || json.sError;\r\n\t\tif ( error ) {\r\n\t\t\t_fnLog( oSettings, 0, error );\r\n\t\t}\r\n\r\n\t\toSettings.json = json;\r\n\r\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\r\n\t\tfn( json );\r\n\t};\r\n\r\n\tif ( $.isPlainObject( ajax ) && ajax.data )\r\n\t{\r\n\t\tajaxData = ajax.data;\r\n\r\n\t\tvar newData = typeof ajaxData === 'function' ?\r\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\r\n\t\t\tajaxData;                      // an object object or array to merge\r\n\r\n\t\t// If the function returned something, use that alone\r\n\t\tdata = typeof ajaxData === 'function' && newData ?\r\n\t\t\tnewData :\r\n\t\t\t$.extend( true, data, newData );\r\n\r\n\t\t// Remove the data property as we've resolved it already and don't want\r\n\t\t// jQuery to do it again (it is restored at the end of the function)\r\n\t\tdelete ajax.data;\r\n\t}\r\n\r\n\tvar baseAjax = {\r\n\t\t\"data\": data,\r\n\t\t\"success\": callback,\r\n\t\t\"dataType\": \"json\",\r\n\t\t\"cache\": false,\r\n\t\t\"type\": oSettings.sServerMethod,\r\n\t\t\"error\": function (xhr, error, thrown) {\r\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\r\n\r\n\t\t\tif ( $.inArray( true, ret ) === -1 ) {\r\n\t\t\t\tif ( error == \"parsererror\" ) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( xhr.readyState === 4 ) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_fnProcessingDisplay( oSettings, false );\r\n\t\t}\r\n\t};\r\n\r\n\t// Store the data submitted for the API\r\n\toSettings.oAjaxData = data;\r\n\r\n\t// Allow plug-ins and external processes to modify the data\r\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\r\n\r\n\tif ( oSettings.fnServerData )\r\n\t{\r\n\t\t// DataTables 1.9- compatibility\r\n\t\toSettings.fnServerData.call( instance,\r\n\t\t\toSettings.sAjaxSource,\r\n\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\r\n\t\t\t\treturn { name: key, value: val };\r\n\t\t\t} ),\r\n\t\t\tcallback,\r\n\t\t\toSettings\r\n\t\t);\r\n\t}\r\n\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\r\n\t{\r\n\t\t// DataTables 1.9- compatibility\r\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\r\n\t\t\turl: ajax || oSettings.sAjaxSource\r\n\t\t} ) );\r\n\t}\r\n\telse if ( typeof ajax === 'function' )\r\n\t{\r\n\t\t// Is a function - let the caller define what needs to be done\r\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// Object to extend the base settings\r\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\r\n\r\n\t\t// Restore for next time around\r\n\t\tajax.data = ajaxData;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Update the table using an Ajax call\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {boolean} Block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxUpdate( settings )\r\n{\r\n\tsettings.iDraw++;\r\n\t_fnProcessingDisplay( settings, true );\r\n\r\n\t// Keep track of drawHold state to handle scrolling after the Ajax call\r\n\tvar drawHold = settings._drawHold;\r\n\r\n\t_fnBuildAjax(\r\n\t\tsettings,\r\n\t\t_fnAjaxParameters( settings ),\r\n\t\tfunction(json) {\r\n\t\t\tsettings._drawHold = drawHold;\r\n\t\t\t_fnAjaxUpdateDraw( settings, json );\r\n\t\t\tsettings._drawHold = false;\r\n\t\t}\r\n\t);\r\n}\r\n\r\n\r\n/**\r\n * Build up the parameters in an object needed for a server-side processing\r\n * request. Note that this is basically done twice, is different ways - a modern\r\n * method which is used by default in DataTables 1.10 which uses objects and\r\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\r\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\r\n * option is set.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {bool} block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxParameters( settings )\r\n{\r\n\tvar\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tcolumnCount = columns.length,\r\n\t\tfeatures = settings.oFeatures,\r\n\t\tpreSearch = settings.oPreviousSearch,\r\n\t\tpreColSearch = settings.aoPreSearchCols,\r\n\t\ti, data = [], dataProp, column, columnSearch,\r\n\t\tsort = _fnSortFlatten( settings ),\r\n\t\tdisplayStart = settings._iDisplayStart,\r\n\t\tdisplayLength = features.bPaginate !== false ?\r\n\t\t\tsettings._iDisplayLength :\r\n\t\t\t-1;\r\n\r\n\tvar param = function ( name, value ) {\r\n\t\tdata.push( { 'name': name, 'value': value } );\r\n\t};\r\n\r\n\t// DataTables 1.9- compatible method\r\n\tparam( 'sEcho',          settings.iDraw );\r\n\tparam( 'iColumns',       columnCount );\r\n\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\r\n\tparam( 'iDisplayStart',  displayStart );\r\n\tparam( 'iDisplayLength', displayLength );\r\n\r\n\t// DataTables 1.10+ method\r\n\tvar d = {\r\n\t\tdraw:    settings.iDraw,\r\n\t\tcolumns: [],\r\n\t\torder:   [],\r\n\t\tstart:   displayStart,\r\n\t\tlength:  displayLength,\r\n\t\tsearch:  {\r\n\t\t\tvalue: preSearch.sSearch,\r\n\t\t\tregex: preSearch.bRegex\r\n\t\t}\r\n\t};\r\n\r\n\tfor ( i=0 ; i<columnCount ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\t\tcolumnSearch = preColSearch[i];\r\n\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\r\n\r\n\t\td.columns.push( {\r\n\t\t\tdata:       dataProp,\r\n\t\t\tname:       column.sName,\r\n\t\t\tsearchable: column.bSearchable,\r\n\t\t\torderable:  column.bSortable,\r\n\t\t\tsearch:     {\r\n\t\t\t\tvalue: columnSearch.sSearch,\r\n\t\t\t\tregex: columnSearch.bRegex\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tparam( \"mDataProp_\"+i, dataProp );\r\n\r\n\t\tif ( features.bFilter ) {\r\n\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\r\n\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\r\n\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\r\n\t\t}\r\n\r\n\t\tif ( features.bSort ) {\r\n\t\t\tparam( 'bSortable_'+i, column.bSortable );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( features.bFilter ) {\r\n\t\tparam( 'sSearch', preSearch.sSearch );\r\n\t\tparam( 'bRegex', preSearch.bRegex );\r\n\t}\r\n\r\n\tif ( features.bSort ) {\r\n\t\t$.each( sort, function ( i, val ) {\r\n\t\t\td.order.push( { column: val.col, dir: val.dir } );\r\n\r\n\t\t\tparam( 'iSortCol_'+i, val.col );\r\n\t\t\tparam( 'sSortDir_'+i, val.dir );\r\n\t\t} );\r\n\r\n\t\tparam( 'iSortingCols', sort.length );\r\n\t}\r\n\r\n\t// If the legacy.ajax parameter is null, then we automatically decide which\r\n\t// form to use, based on sAjaxSource\r\n\tvar legacy = DataTable.ext.legacy.ajax;\r\n\tif ( legacy === null ) {\r\n\t\treturn settings.sAjaxSource ? data : d;\r\n\t}\r\n\r\n\t// Otherwise, if legacy has been specified then we use that to decide on the\r\n\t// form\r\n\treturn legacy ? data : d;\r\n}\r\n\r\n\r\n/**\r\n * Data the data from the server (nuking the old) and redraw the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} json json data return from the server.\r\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\r\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\r\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\r\n *  @param {array} json.aaData The data to display on this page\r\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxUpdateDraw ( settings, json )\r\n{\r\n\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\r\n\t// Support both\r\n\tvar compat = function ( old, modern ) {\r\n\t\treturn json[old] !== undefined ? json[old] : json[modern];\r\n\t};\r\n\r\n\tvar data = _fnAjaxDataSrc( settings, json );\r\n\tvar draw            = compat( 'sEcho',                'draw' );\r\n\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\r\n\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\r\n\r\n\tif ( draw !== undefined ) {\r\n\t\t// Protect against out of sequence returns\r\n\t\tif ( draw*1 < settings.iDraw ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsettings.iDraw = draw * 1;\r\n\t}\r\n\r\n\t// No data in returned object, so rather than an array, we show an empty table\r\n\tif ( ! data ) {\r\n\t\tdata = [];\r\n\t}\r\n\r\n\t_fnClearTable( settings );\r\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\r\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\r\n\r\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t_fnAddData( settings, data[i] );\r\n\t}\r\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\r\n\t_fnDraw( settings, true );\r\n\r\n\tif ( ! settings._bInitComplete ) {\r\n\t\t_fnInitComplete( settings, json );\r\n\t}\r\n\r\n\t_fnProcessingDisplay( settings, false );\r\n}\r\n\r\n\r\n/**\r\n * Get the data from the JSON data source to use for drawing a table. Using\r\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\r\n * source object, or from a processing function.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param  {object} json Data source object / array from the server\r\n *  @return {array} Array of data to use\r\n */\r\n function _fnAjaxDataSrc ( oSettings, json, write )\r\n {\r\n\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\r\n\t\toSettings.ajax.dataSrc :\r\n\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\r\n\r\n\tif ( ! write ) {\r\n\t\tif ( dataSrc === 'data' ) {\r\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\r\n\t\t\t// it if possible\r\n\t\t\treturn json.aaData || json[dataSrc];\r\n\t\t}\r\n\r\n\t\treturn dataSrc !== \"\" ?\r\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\r\n\t\t\tjson;\r\n\t}\r\n\r\n\t// set\r\n\t_fnSetObjectDataFn( dataSrc )( json, write );\r\n}\r\n\r\n/**\r\n * Generate the node required for filtering text\r\n *  @returns {node} Filter control element\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlFilter ( settings )\r\n{\r\n\tvar classes = settings.oClasses;\r\n\tvar tableId = settings.sTableId;\r\n\tvar language = settings.oLanguage;\r\n\tvar previousSearch = settings.oPreviousSearch;\r\n\tvar features = settings.aanFeatures;\r\n\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\r\n\r\n\tvar str = language.sSearch;\r\n\tstr = str.match(/_INPUT_/) ?\r\n\t\tstr.replace('_INPUT_', input) :\r\n\t\tstr+input;\r\n\r\n\tvar filter = $('<div/>', {\r\n\t\t\t'id': ! features.f ? tableId+'_filter' : null,\r\n\t\t\t'class': classes.sFilter\r\n\t\t} )\r\n\t\t.append( $('<label/>' ).append( str ) );\r\n\r\n\tvar searchFn = function(event) {\r\n\t\t/* Update all other filter input elements for the new display */\r\n\t\tvar n = features.f;\r\n\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\r\n\t\tif(previousSearch['return'] && event.key !== \"Enter\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/* Now do the filter */\r\n\t\tif ( val != previousSearch.sSearch ) {\r\n\t\t\t_fnFilterComplete( settings, {\r\n\t\t\t\t\"sSearch\": val,\r\n\t\t\t\t\"bRegex\": previousSearch.bRegex,\r\n\t\t\t\t\"bSmart\": previousSearch.bSmart ,\r\n\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\r\n\t\t\t\t\"return\": previousSearch['return']\r\n\t\t\t} );\r\n\r\n\t\t\t// Need to redraw, without resorting\r\n\t\t\tsettings._iDisplayStart = 0;\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t};\r\n\r\n\tvar searchDelay = settings.searchDelay !== null ?\r\n\t\tsettings.searchDelay :\r\n\t\t_fnDataSource( settings ) === 'ssp' ?\r\n\t\t\t400 :\r\n\t\t\t0;\r\n\r\n\tvar jqFilter = $('input', filter)\r\n\t\t.val( previousSearch.sSearch )\r\n\t\t.attr( 'placeholder', language.sSearchPlaceholder )\r\n\t\t.on(\r\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\r\n\t\t\tsearchDelay ?\r\n\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\r\n\t\t\t\tsearchFn\r\n\t\t)\r\n\t\t.on( 'mouseup.DT', function(e) {\r\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\r\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\r\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\r\n\t\t\tsetTimeout( function () {\r\n\t\t\t\tsearchFn.call(jqFilter[0], e);\r\n\t\t\t}, 10);\r\n\t\t} )\r\n\t\t.on( 'keypress.DT', function(e) {\r\n\t\t\t/* Prevent form submission */\r\n\t\t\tif ( e.keyCode == 13 ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} )\r\n\t\t.attr('aria-controls', tableId);\r\n\r\n\t// Update the input elements whenever the table is filtered\r\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\r\n\t\tif ( settings === s ) {\r\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\r\n\t\t\t// inside an iframe or frame...\r\n\t\t\ttry {\r\n\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\r\n\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch ( e ) {}\r\n\t\t}\r\n\t} );\r\n\r\n\treturn filter[0];\r\n}\r\n\r\n\r\n/**\r\n * Filter the table using both the global filter and column based filtering\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oSearch search information\r\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterComplete ( oSettings, oInput, iForce )\r\n{\r\n\tvar oPrevSearch = oSettings.oPreviousSearch;\r\n\tvar aoPrevSearch = oSettings.aoPreSearchCols;\r\n\tvar fnSaveFilter = function ( oFilter ) {\r\n\t\t/* Save the filtering values */\r\n\t\toPrevSearch.sSearch = oFilter.sSearch;\r\n\t\toPrevSearch.bRegex = oFilter.bRegex;\r\n\t\toPrevSearch.bSmart = oFilter.bSmart;\r\n\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\r\n\t\toPrevSearch['return'] = oFilter['return'];\r\n\t};\r\n\tvar fnRegex = function ( o ) {\r\n\t\t// Backwards compatibility with the bEscapeRegex option\r\n\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\r\n\t};\r\n\r\n\t// Resolve any column types that are unknown due to addition or invalidation\r\n\t// @todo As per sort - can this be moved into an event handler?\r\n\t_fnColumnTypes( oSettings );\r\n\r\n\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\r\n\tif ( _fnDataSource( oSettings ) != 'ssp' )\r\n\t{\r\n\t\t/* Global filter */\r\n\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\r\n\t\tfnSaveFilter( oInput );\r\n\r\n\t\t/* Now do the individual column filter */\r\n\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\r\n\t\t{\r\n\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\r\n\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\r\n\t\t}\r\n\r\n\t\t/* Custom filtering */\r\n\t\t_fnFilterCustom( oSettings );\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfnSaveFilter( oInput );\r\n\t}\r\n\r\n\t/* Tell the draw function we have been filtering */\r\n\toSettings.bFiltered = true;\r\n\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\r\n}\r\n\r\n\r\n/**\r\n * Apply custom filtering functions\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterCustom( settings )\r\n{\r\n\tvar filters = DataTable.ext.search;\r\n\tvar displayRows = settings.aiDisplay;\r\n\tvar row, rowIdx;\r\n\r\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\r\n\t\tvar rows = [];\r\n\r\n\t\t// Loop over each row and see if it should be included\r\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\r\n\t\t\trowIdx = displayRows[ j ];\r\n\t\t\trow = settings.aoData[ rowIdx ];\r\n\r\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\r\n\t\t\t\trows.push( rowIdx );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// So the array reference doesn't break set the results into the\r\n\t\t// existing array\r\n\t\tdisplayRows.length = 0;\r\n\t\t$.merge( displayRows, rows );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Filter the table on a per-column basis\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sInput string to filter on\r\n *  @param {int} iColumn column to filter\r\n *  @param {bool} bRegex treat search string as a regular expression or not\r\n *  @param {bool} bSmart use smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\r\n{\r\n\tif ( searchStr === '' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar data;\r\n\tvar out = [];\r\n\tvar display = settings.aiDisplay;\r\n\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\r\n\r\n\tfor ( var i=0 ; i<display.length ; i++ ) {\r\n\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\r\n\r\n\t\tif ( rpSearch.test( data ) ) {\r\n\t\t\tout.push( display[i] );\r\n\t\t}\r\n\t}\r\n\r\n\tsettings.aiDisplay = out;\r\n}\r\n\r\n\r\n/**\r\n * Filter the data table based on user input and draw the table\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} input string to filter on\r\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\r\n *  @param {bool} regex treat as a regular expression or not\r\n *  @param {bool} smart perform smart filtering or not\r\n *  @param {bool} caseInsensitive Do case insensitive matching or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\r\n{\r\n\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\r\n\tvar prevSearch = settings.oPreviousSearch.sSearch;\r\n\tvar displayMaster = settings.aiDisplayMaster;\r\n\tvar display, invalidated, i;\r\n\tvar filtered = [];\r\n\r\n\t// Need to take account of custom filtering functions - always filter\r\n\tif ( DataTable.ext.search.length !== 0 ) {\r\n\t\tforce = true;\r\n\t}\r\n\r\n\t// Check if any of the rows were invalidated\r\n\tinvalidated = _fnFilterData( settings );\r\n\r\n\t// If the input is blank - we just want the full data set\r\n\tif ( input.length <= 0 ) {\r\n\t\tsettings.aiDisplay = displayMaster.slice();\r\n\t}\r\n\telse {\r\n\t\t// New search - start from the master array\r\n\t\tif ( invalidated ||\r\n\t\t\t force ||\r\n\t\t\t regex ||\r\n\t\t\t prevSearch.length > input.length ||\r\n\t\t\t input.indexOf(prevSearch) !== 0 ||\r\n\t\t\t settings.bSorted // On resort, the display master needs to be\r\n\t\t\t                  // re-filtered since indexes will have changed\r\n\t\t) {\r\n\t\t\tsettings.aiDisplay = displayMaster.slice();\r\n\t\t}\r\n\r\n\t\t// Search the display array\r\n\t\tdisplay = settings.aiDisplay;\r\n\r\n\t\tfor ( i=0 ; i<display.length ; i++ ) {\r\n\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\r\n\t\t\t\tfiltered.push( display[i] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsettings.aiDisplay = filtered;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Build a regular expression object suitable for searching a table\r\n *  @param {string} sSearch string to search for\r\n *  @param {bool} bRegex treat as a regular expression or not\r\n *  @param {bool} bSmart perform smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @returns {RegExp} constructed object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\r\n{\r\n\tsearch = regex ?\r\n\t\tsearch :\r\n\t\t_fnEscapeRegex( search );\r\n\t\r\n\tif ( smart ) {\r\n\t\t/* For smart filtering we want to allow the search to work regardless of\r\n\t\t * word order. We also want double quoted text to be preserved, so word\r\n\t\t * order is important - a la google. So this is what we want to\r\n\t\t * generate:\r\n\t\t * \r\n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\r\n\t\t */\r\n\t\tvar a = $.map( search.match( /[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''], function ( word ) {\r\n\t\t\tif ( word.charAt(0) === '\"' ) {\r\n\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\r\n\t\t\t\tword = m ? m[1] : word;\r\n\t\t\t}\r\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\r\n\t\t\t\tvar m = word.match( /^\\u201C(.*)\\u201D$/ );\r\n\t\t\t\tword = m ? m[1] : word;\r\n\t\t\t}\r\n\r\n\t\t\treturn word.replace('\"', '');\r\n\t\t} );\r\n\r\n\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\r\n\t}\r\n\r\n\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\r\n}\r\n\r\n\r\n/**\r\n * Escape a string such that it can be used in a regular expression\r\n *  @param {string} sVal string to escape\r\n *  @returns {string} escaped string\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\r\n\r\nvar __filter_div = $('<div>')[0];\r\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\r\n\r\n// Update the filtering data for each row if needed (by invalidation or first run)\r\nfunction _fnFilterData ( settings )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar column;\r\n\tvar i, j, ien, jen, filterData, cellData, row;\r\n\tvar wasInvalidated = false;\r\n\r\n\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\trow = settings.aoData[i];\r\n\r\n\t\tif ( ! row._aFilterData ) {\r\n\t\t\tfilterData = [];\r\n\r\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\r\n\t\t\t\tcolumn = columns[j];\r\n\r\n\t\t\t\tif ( column.bSearchable ) {\r\n\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\r\n\r\n\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\r\n\t\t\t\t\t// should be altered to also allow strict type checking.\r\n\t\t\t\t\tif ( cellData === null ) {\r\n\t\t\t\t\t\tcellData = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\r\n\t\t\t\t\t\tcellData = cellData.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcellData = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If it looks like there is an HTML entity in the string,\r\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\r\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\r\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\r\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\r\n\t\t\t\t\t__filter_div.innerHTML = cellData;\r\n\t\t\t\t\tcellData = __filter_div_textContent ?\r\n\t\t\t\t\t\t__filter_div.textContent :\r\n\t\t\t\t\t\t__filter_div.innerText;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cellData.replace ) {\r\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterData.push( cellData );\r\n\t\t\t}\r\n\r\n\t\t\trow._aFilterData = filterData;\r\n\t\t\trow._sFilterRow = filterData.join('  ');\r\n\t\t\twasInvalidated = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn wasInvalidated;\r\n}\r\n\r\n\r\n/**\r\n * Convert from the internal Hungarian notation to camelCase for external\r\n * interaction\r\n *  @param {object} obj Object to convert\r\n *  @returns {object} Inverted object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSearchToCamel ( obj )\r\n{\r\n\treturn {\r\n\t\tsearch:          obj.sSearch,\r\n\t\tsmart:           obj.bSmart,\r\n\t\tregex:           obj.bRegex,\r\n\t\tcaseInsensitive: obj.bCaseInsensitive\r\n\t};\r\n}\r\n\r\n\r\n\r\n/**\r\n * Convert from camelCase notation to the internal Hungarian. We could use the\r\n * Hungarian convert function here, but this is cleaner\r\n *  @param {object} obj Object to convert\r\n *  @returns {object} Inverted object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSearchToHung ( obj )\r\n{\r\n\treturn {\r\n\t\tsSearch:          obj.search,\r\n\t\tbSmart:           obj.smart,\r\n\t\tbRegex:           obj.regex,\r\n\t\tbCaseInsensitive: obj.caseInsensitive\r\n\t};\r\n}\r\n\r\n/**\r\n * Generate the node required for the info display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {node} Information element\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlInfo ( settings )\r\n{\r\n\tvar\r\n\t\ttid = settings.sTableId,\r\n\t\tnodes = settings.aanFeatures.i,\r\n\t\tn = $('<div/>', {\r\n\t\t\t'class': settings.oClasses.sInfo,\r\n\t\t\t'id': ! nodes ? tid+'_info' : null\r\n\t\t} );\r\n\r\n\tif ( ! nodes ) {\r\n\t\t// Update display on each draw\r\n\t\tsettings.aoDrawCallback.push( {\r\n\t\t\t\"fn\": _fnUpdateInfo,\r\n\t\t\t\"sName\": \"information\"\r\n\t\t} );\r\n\r\n\t\tn\r\n\t\t\t.attr( 'role', 'status' )\r\n\t\t\t.attr( 'aria-live', 'polite' );\r\n\r\n\t\t// Table is described by our info div\r\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\r\n\t}\r\n\r\n\treturn n[0];\r\n}\r\n\r\n\r\n/**\r\n * Update the information elements in the display\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnUpdateInfo ( settings )\r\n{\r\n\t/* Show information about the table */\r\n\tvar nodes = settings.aanFeatures.i;\r\n\tif ( nodes.length === 0 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\tlang  = settings.oLanguage,\r\n\t\tstart = settings._iDisplayStart+1,\r\n\t\tend   = settings.fnDisplayEnd(),\r\n\t\tmax   = settings.fnRecordsTotal(),\r\n\t\ttotal = settings.fnRecordsDisplay(),\r\n\t\tout   = total ?\r\n\t\t\tlang.sInfo :\r\n\t\t\tlang.sInfoEmpty;\r\n\r\n\tif ( total !== max ) {\r\n\t\t/* Record set after filtering */\r\n\t\tout += ' ' + lang.sInfoFiltered;\r\n\t}\r\n\r\n\t// Convert the macros\r\n\tout += lang.sInfoPostFix;\r\n\tout = _fnInfoMacros( settings, out );\r\n\r\n\tvar callback = lang.fnInfoCallback;\r\n\tif ( callback !== null ) {\r\n\t\tout = callback.call( settings.oInstance,\r\n\t\t\tsettings, start, end, max, total, out\r\n\t\t);\r\n\t}\r\n\r\n\t$(nodes).html( out );\r\n}\r\n\r\n\r\nfunction _fnInfoMacros ( settings, str )\r\n{\r\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\r\n\t// internally\r\n\tvar\r\n\t\tformatter  = settings.fnFormatNumber,\r\n\t\tstart      = settings._iDisplayStart+1,\r\n\t\tlen        = settings._iDisplayLength,\r\n\t\tvis        = settings.fnRecordsDisplay(),\r\n\t\tall        = len === -1;\r\n\r\n\treturn str.\r\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\r\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\r\n\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\r\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\r\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\r\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\r\n}\r\n\r\n\r\n\r\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnInitialise ( settings )\r\n{\r\n\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\r\n\tvar columns = settings.aoColumns, column;\r\n\tvar features = settings.oFeatures;\r\n\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\r\n\r\n\t/* Ensure that the table data is fully initialised */\r\n\tif ( ! settings.bInitialised ) {\r\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* Show the display HTML options */\r\n\t_fnAddOptionsHtml( settings );\r\n\r\n\t/* Build and draw the header / footer for the table */\r\n\t_fnBuildHead( settings );\r\n\t_fnDrawHead( settings, settings.aoHeader );\r\n\t_fnDrawHead( settings, settings.aoFooter );\r\n\r\n\t/* Okay to show that something is going on now */\r\n\t_fnProcessingDisplay( settings, true );\r\n\r\n\t/* Calculate sizes for columns */\r\n\tif ( features.bAutoWidth ) {\r\n\t\t_fnCalculateColumnWidths( settings );\r\n\t}\r\n\r\n\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\r\n\t\tif ( column.sWidth ) {\r\n\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\r\n\t\t}\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'preInit', [settings] );\r\n\r\n\t// If there is default sorting required - let's do it. The sort function\r\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\r\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\r\n\t// data (show 'loading' message possibly)\r\n\t_fnReDraw( settings );\r\n\r\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\r\n\tvar dataSrc = _fnDataSource( settings );\r\n\tif ( dataSrc != 'ssp' || deferLoading ) {\r\n\t\t// if there is an ajax source load the data\r\n\t\tif ( dataSrc == 'ajax' ) {\r\n\t\t\t_fnBuildAjax( settings, [], function(json) {\r\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\r\n\r\n\t\t\t\t// Got the data - add it to the table\r\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\r\n\t\t\t\t\t_fnAddData( settings, aData[i] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset the init display for cookie saving. We've already done\r\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\r\n\t\t\t\t// it appear 'fresh'\r\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\r\n\r\n\t\t\t\t_fnReDraw( settings );\r\n\r\n\t\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t\t_fnInitComplete( settings, json );\r\n\t\t\t}, settings );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t_fnInitComplete( settings );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\r\n *    with client-side processing (optional)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnInitComplete ( settings, json )\r\n{\r\n\tsettings._bInitComplete = true;\r\n\r\n\t// When data was added after the initialisation (data or Ajax) we need to\r\n\t// calculate the column sizing\r\n\tif ( json || settings.oInit.aaData ) {\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\r\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\r\n}\r\n\r\n\r\nfunction _fnLengthChange ( settings, val )\r\n{\r\n\tvar len = parseInt( val, 10 );\r\n\tsettings._iDisplayLength = len;\r\n\r\n\t_fnLengthOverflow( settings );\r\n\r\n\t// Fire length change event\r\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\r\n}\r\n\r\n\r\n/**\r\n * Generate the node required for user display length changing\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Display length feature node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlLength ( settings )\r\n{\r\n\tvar\r\n\t\tclasses  = settings.oClasses,\r\n\t\ttableId  = settings.sTableId,\r\n\t\tmenu     = settings.aLengthMenu,\r\n\t\td2       = Array.isArray( menu[0] ),\r\n\t\tlengths  = d2 ? menu[0] : menu,\r\n\t\tlanguage = d2 ? menu[1] : menu;\r\n\r\n\tvar select = $('<select/>', {\r\n\t\t'name':          tableId+'_length',\r\n\t\t'aria-controls': tableId,\r\n\t\t'class':         classes.sLengthSelect\r\n\t} );\r\n\r\n\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\r\n\t\tselect[0][ i ] = new Option(\r\n\t\t\ttypeof language[i] === 'number' ?\r\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\r\n\t\t\t\tlanguage[i],\r\n\t\t\tlengths[i]\r\n\t\t);\r\n\t}\r\n\r\n\tvar div = $('<div><label/></div>').addClass( classes.sLength );\r\n\tif ( ! settings.aanFeatures.l ) {\r\n\t\tdiv[0].id = tableId+'_length';\r\n\t}\r\n\r\n\tdiv.children().append(\r\n\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\r\n\t);\r\n\r\n\t// Can't use `select` variable as user might provide their own and the\r\n\t// reference is broken by the use of outerHTML\r\n\t$('select', div)\r\n\t\t.val( settings._iDisplayLength )\r\n\t\t.on( 'change.DT', function(e) {\r\n\t\t\t_fnLengthChange( settings, $(this).val() );\r\n\t\t\t_fnDraw( settings );\r\n\t\t} );\r\n\r\n\t// Update node value whenever anything changes the table's length\r\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\r\n\t\tif ( settings === s ) {\r\n\t\t\t$('select', div).val( len );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn div[0];\r\n}\r\n\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Note that most of the paging logic is done in\r\n * DataTable.ext.pager\r\n */\r\n\r\n/**\r\n * Generate the node required for default pagination\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {node} Pagination feature node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlPaginate ( settings )\r\n{\r\n\tvar\r\n\t\ttype   = settings.sPaginationType,\r\n\t\tplugin = DataTable.ext.pager[ type ],\r\n\t\tmodern = typeof plugin === 'function',\r\n\t\tredraw = function( settings ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t},\r\n\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\r\n\t\tfeatures = settings.aanFeatures;\r\n\r\n\tif ( ! modern ) {\r\n\t\tplugin.fnInit( settings, node, redraw );\r\n\t}\r\n\r\n\t/* Add a draw callback for the pagination on first instance, to update the paging display */\r\n\tif ( ! features.p )\r\n\t{\r\n\t\tnode.id = settings.sTableId+'_paginate';\r\n\r\n\t\tsettings.aoDrawCallback.push( {\r\n\t\t\t\"fn\": function( settings ) {\r\n\t\t\t\tif ( modern ) {\r\n\t\t\t\t\tvar\r\n\t\t\t\t\t\tstart      = settings._iDisplayStart,\r\n\t\t\t\t\t\tlen        = settings._iDisplayLength,\r\n\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\r\n\t\t\t\t\t\tall        = len === -1,\r\n\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\r\n\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\r\n\t\t\t\t\t\tbuttons = plugin(page, pages),\r\n\t\t\t\t\t\ti, ien;\r\n\r\n\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\r\n\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\r\n\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tplugin.fnUpdate( settings, redraw );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"sName\": \"pagination\"\r\n\t\t} );\r\n\t}\r\n\r\n\treturn node;\r\n}\r\n\r\n\r\n/**\r\n * Alter the display settings to change the page\r\n *  @param {object} settings DataTables settings object\r\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\r\n *    \"next\" or \"last\" or page number to jump to (integer)\r\n *  @param [bool] redraw Automatically draw the update or not\r\n *  @returns {bool} true page has changed, false - no change\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnPageChange ( settings, action, redraw )\r\n{\r\n\tvar\r\n\t\tstart     = settings._iDisplayStart,\r\n\t\tlen       = settings._iDisplayLength,\r\n\t\trecords   = settings.fnRecordsDisplay();\r\n\r\n\tif ( records === 0 || len === -1 )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\telse if ( typeof action === \"number\" )\r\n\t{\r\n\t\tstart = action * len;\r\n\r\n\t\tif ( start > records )\r\n\t\t{\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"first\" )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\telse if ( action == \"previous\" )\r\n\t{\r\n\t\tstart = len >= 0 ?\r\n\t\t\tstart - len :\r\n\t\t\t0;\r\n\r\n\t\tif ( start < 0 )\r\n\t\t{\r\n\t\t  start = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"next\" )\r\n\t{\r\n\t\tif ( start + len < records )\r\n\t\t{\r\n\t\t\tstart += len;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"last\" )\r\n\t{\r\n\t\tstart = Math.floor( (records-1) / len) * len;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\r\n\t}\r\n\r\n\tvar changed = settings._iDisplayStart !== start;\r\n\tsettings._iDisplayStart = start;\r\n\r\n\tif ( changed ) {\r\n\t\t_fnCallbackFire( settings, null, 'page', [settings] );\r\n\r\n\t\tif ( redraw ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// No change event - paging was called, but no change\r\n\t\t_fnCallbackFire( settings, null, 'page-nc', [settings] );\r\n\t}\r\n\r\n\treturn changed;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Generate the node required for the processing node\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Processing element\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlProcessing ( settings )\r\n{\r\n\treturn $('<div/>', {\r\n\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\r\n\t\t\t'class': settings.oClasses.sProcessing,\r\n\t\t\t'role': 'status'\r\n\t\t} )\r\n\t\t.html( settings.oLanguage.sProcessing )\r\n\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\r\n\t\t.insertBefore( settings.nTable )[0];\r\n}\r\n\r\n\r\n/**\r\n * Display or hide the processing indicator\r\n *  @param {object} settings dataTables settings object\r\n *  @param {bool} show Show the processing indicator (true) or not (false)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnProcessingDisplay ( settings, show )\r\n{\r\n\tif ( settings.oFeatures.bProcessing ) {\r\n\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\r\n}\r\n\r\n/**\r\n * Add any control elements for the table - specifically scrolling\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Node to add to the DOM\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlTable ( settings )\r\n{\r\n\tvar table = $(settings.nTable);\r\n\r\n\t// Scrolling from here on in\r\n\tvar scroll = settings.oScroll;\r\n\r\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\r\n\t\treturn settings.nTable;\r\n\t}\r\n\r\n\tvar scrollX = scroll.sX;\r\n\tvar scrollY = scroll.sY;\r\n\tvar classes = settings.oClasses;\r\n\tvar caption = table.children('caption');\r\n\tvar captionSide = caption.length ? caption[0]._captionSide : null;\r\n\tvar headerClone = $( table[0].cloneNode(false) );\r\n\tvar footerClone = $( table[0].cloneNode(false) );\r\n\tvar footer = table.children('tfoot');\r\n\tvar _div = '<div/>';\r\n\tvar size = function ( s ) {\r\n\t\treturn !s ? null : _fnStringToCss( s );\r\n\t};\r\n\r\n\tif ( ! footer.length ) {\r\n\t\tfooter = null;\r\n\t}\r\n\r\n\t/*\r\n\t * The HTML structure that we want to generate in this function is:\r\n\t *  div - scroller\r\n\t *    div - scroll head\r\n\t *      div - scroll head inner\r\n\t *        table - scroll head table\r\n\t *          thead - thead\r\n\t *    div - scroll body\r\n\t *      table - table (master table)\r\n\t *        thead - thead clone for sizing\r\n\t *        tbody - tbody\r\n\t *    div - scroll foot\r\n\t *      div - scroll foot inner\r\n\t *        table - scroll foot table\r\n\t *          tfoot - tfoot\r\n\t */\r\n\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\r\n\t\t.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollHead } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\r\n\t\t\t\t} )\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\r\n\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\r\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\theaderClone\r\n\t\t\t\t\t\t\t\t.removeAttr('id')\r\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\r\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\r\n\t\t\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t\t\ttable.children('thead')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t)\r\n\t\t.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollBody } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\twidth: size( scrollX )\r\n\t\t\t\t} )\r\n\t\t\t\t.append( table )\r\n\t\t);\r\n\r\n\tif ( footer ) {\r\n\t\tscroller.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollFoot } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\r\n\t\t\t\t} )\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\tfooterClone\r\n\t\t\t\t\t\t\t\t.removeAttr('id')\r\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\r\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\r\n\t\t\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tvar children = scroller.children();\r\n\tvar scrollHead = children[0];\r\n\tvar scrollBody = children[1];\r\n\tvar scrollFoot = footer ? children[2] : null;\r\n\r\n\t// When the body is scrolled, then we also want to scroll the headers\r\n\tif ( scrollX ) {\r\n\t\t$(scrollBody).on( 'scroll.DT', function (e) {\r\n\t\t\tvar scrollLeft = this.scrollLeft;\r\n\r\n\t\t\tscrollHead.scrollLeft = scrollLeft;\r\n\r\n\t\t\tif ( footer ) {\r\n\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t$(scrollBody).css('max-height', scrollY);\r\n\tif (! scroll.bCollapse) {\r\n\t\t$(scrollBody).css('height', scrollY);\r\n\t}\r\n\r\n\tsettings.nScrollHead = scrollHead;\r\n\tsettings.nScrollBody = scrollBody;\r\n\tsettings.nScrollFoot = scrollFoot;\r\n\r\n\t// On redraw - align columns\r\n\tsettings.aoDrawCallback.push( {\r\n\t\t\"fn\": _fnScrollDraw,\r\n\t\t\"sName\": \"scrolling\"\r\n\t} );\r\n\r\n\treturn scroller[0];\r\n}\r\n\r\n\r\n\r\n/**\r\n * Update the header, footer and body tables for resizing - i.e. column\r\n * alignment.\r\n *\r\n * Welcome to the most horrible function DataTables. The process that this\r\n * function follows is basically:\r\n *   1. Re-create the table inside the scrolling div\r\n *   2. Take live measurements from the DOM\r\n *   3. Apply the measurements to align the columns\r\n *   4. Clean up\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnScrollDraw ( settings )\r\n{\r\n\t// Given that this is such a monster function, a lot of variables are use\r\n\t// to try and keep the minimised size as small as possible\r\n\tvar\r\n\t\tscroll         = settings.oScroll,\r\n\t\tscrollX        = scroll.sX,\r\n\t\tscrollXInner   = scroll.sXInner,\r\n\t\tscrollY        = scroll.sY,\r\n\t\tbarWidth       = scroll.iBarWidth,\r\n\t\tdivHeader      = $(settings.nScrollHead),\r\n\t\tdivHeaderStyle = divHeader[0].style,\r\n\t\tdivHeaderInner = divHeader.children('div'),\r\n\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\r\n\t\tdivHeaderTable = divHeaderInner.children('table'),\r\n\t\tdivBodyEl      = settings.nScrollBody,\r\n\t\tdivBody        = $(divBodyEl),\r\n\t\tdivBodyStyle   = divBodyEl.style,\r\n\t\tdivFooter      = $(settings.nScrollFoot),\r\n\t\tdivFooterInner = divFooter.children('div'),\r\n\t\tdivFooterTable = divFooterInner.children('table'),\r\n\t\theader         = $(settings.nTHead),\r\n\t\ttable          = $(settings.nTable),\r\n\t\ttableEl        = table[0],\r\n\t\ttableStyle     = tableEl.style,\r\n\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\r\n\t\tbrowser        = settings.oBrowser,\r\n\t\tie67           = browser.bScrollOversize,\r\n\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\r\n\t\theaderTrgEls, footerTrgEls,\r\n\t\theaderSrcEls, footerSrcEls,\r\n\t\theaderCopy, footerCopy,\r\n\t\theaderWidths=[], footerWidths=[],\r\n\t\theaderContent=[], footerContent=[],\r\n\t\tidx, correction, sanityWidth,\r\n\t\tzeroOut = function(nSizer) {\r\n\t\t\tvar style = nSizer.style;\r\n\t\t\tstyle.paddingTop = \"0\";\r\n\t\t\tstyle.paddingBottom = \"0\";\r\n\t\t\tstyle.borderTopWidth = \"0\";\r\n\t\t\tstyle.borderBottomWidth = \"0\";\r\n\t\t\tstyle.height = 0;\r\n\t\t};\r\n\r\n\t// If the scrollbar visibility has changed from the last draw, we need to\r\n\t// adjust the column sizes as the table width will have changed to account\r\n\t// for the scrollbar\r\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\r\n\t\r\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\r\n\t\tsettings.scrollBarVis = scrollBarVis;\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t\treturn; // adjust column sizing will call this function again\r\n\t}\r\n\telse {\r\n\t\tsettings.scrollBarVis = scrollBarVis;\r\n\t}\r\n\r\n\t/*\r\n\t * 1. Re-create the table inside the scrolling div\r\n\t */\r\n\r\n\t// Remove the old minimised thead and tfoot elements in the inner table\r\n\ttable.children('thead, tfoot').remove();\r\n\r\n\tif ( footer ) {\r\n\t\tfooterCopy = footer.clone().prependTo( table );\r\n\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\r\n\t\tfooterSrcEls = footerCopy.find('tr');\r\n\t\tfooterCopy.find('[id]').removeAttr('id');\r\n\t}\r\n\r\n\t// Clone the current header and footer elements and then place it into the inner table\r\n\theaderCopy = header.clone().prependTo( table );\r\n\theaderTrgEls = header.find('tr'); // original header is in its own table\r\n\theaderSrcEls = headerCopy.find('tr');\r\n\theaderCopy.find('th, td').removeAttr('tabindex');\r\n\theaderCopy.find('[id]').removeAttr('id');\r\n\r\n\r\n\t/*\r\n\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\r\n\t */\r\n\r\n\t// Remove old sizing and apply the calculated column widths\r\n\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\r\n\t// calculated sizes to this header\r\n\tif ( ! scrollX )\r\n\t{\r\n\t\tdivBodyStyle.width = '100%';\r\n\t\tdivHeader[0].style.width = '100%';\r\n\t}\r\n\r\n\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\r\n\t\tidx = _fnVisibleToColumnIndex( settings, i );\r\n\t\tel.style.width = settings.aoColumns[idx].sWidth;\r\n\t} );\r\n\r\n\tif ( footer ) {\r\n\t\t_fnApplyToChildren( function(n) {\r\n\t\t\tn.style.width = \"\";\r\n\t\t}, footerSrcEls );\r\n\t}\r\n\r\n\t// Size the table as a whole\r\n\tsanityWidth = table.outerWidth();\r\n\tif ( scrollX === \"\" ) {\r\n\t\t// No x scrolling\r\n\t\ttableStyle.width = \"100%\";\r\n\r\n\t\t// IE7 will make the width of the table when 100% include the scrollbar\r\n\t\t// - which is shouldn't. When there is a scrollbar we need to take this\r\n\t\t// into account.\r\n\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\r\n\t\t\tdivBody.css('overflow-y') == \"scroll\")\r\n\t\t) {\r\n\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\r\n\t\t}\r\n\r\n\t\t// Recalculate the sanity width\r\n\t\tsanityWidth = table.outerWidth();\r\n\t}\r\n\telse if ( scrollXInner !== \"\" ) {\r\n\t\t// legacy x scroll inner has been given - use it\r\n\t\ttableStyle.width = _fnStringToCss(scrollXInner);\r\n\r\n\t\t// Recalculate the sanity width\r\n\t\tsanityWidth = table.outerWidth();\r\n\t}\r\n\r\n\t// Hidden header should have zero height, so remove padding and borders. Then\r\n\t// set the width based on the real headers\r\n\r\n\t// Apply all styles in one pass\r\n\t_fnApplyToChildren( zeroOut, headerSrcEls );\r\n\r\n\t// Read all widths in next pass\r\n\t_fnApplyToChildren( function(nSizer) {\r\n\t\tvar style = window.getComputedStyle ?\r\n\t\t\twindow.getComputedStyle(nSizer).width :\r\n\t\t\t_fnStringToCss( $(nSizer).width() );\r\n\r\n\t\theaderContent.push( nSizer.innerHTML );\r\n\t\theaderWidths.push( style );\r\n\t}, headerSrcEls );\r\n\r\n\t// Apply all widths in final pass\r\n\t_fnApplyToChildren( function(nToSize, i) {\r\n\t\tnToSize.style.width = headerWidths[i];\r\n\t}, headerTrgEls );\r\n\r\n\t$(headerSrcEls).css('height', 0);\r\n\r\n\t/* Same again with the footer if we have one */\r\n\tif ( footer )\r\n\t{\r\n\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\r\n\r\n\t\t_fnApplyToChildren( function(nSizer) {\r\n\t\t\tfooterContent.push( nSizer.innerHTML );\r\n\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\r\n\t\t}, footerSrcEls );\r\n\r\n\t\t_fnApplyToChildren( function(nToSize, i) {\r\n\t\t\tnToSize.style.width = footerWidths[i];\r\n\t\t}, footerTrgEls );\r\n\r\n\t\t$(footerSrcEls).height(0);\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * 3. Apply the measurements\r\n\t */\r\n\r\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\r\n\t// the content of the cell so that the width applied to the header and body\r\n\t// both match, but we want to hide it completely. We want to also fix their\r\n\t// width to what they currently are\r\n\t_fnApplyToChildren( function(nSizer, i) {\r\n\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\r\n\t\tnSizer.childNodes[0].style.height = \"0\";\r\n\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\r\n\t\tnSizer.style.width = headerWidths[i];\r\n\t}, headerSrcEls );\r\n\r\n\tif ( footer )\r\n\t{\r\n\t\t_fnApplyToChildren( function(nSizer, i) {\r\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\r\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\r\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\r\n\t\t\tnSizer.style.width = footerWidths[i];\r\n\t\t}, footerSrcEls );\r\n\t}\r\n\r\n\t// Sanity check that the table is of a sensible width. If not then we are going to get\r\n\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\r\n\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\r\n\t{\r\n\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\r\n\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\r\n\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\r\n\t\t\t\tsanityWidth+barWidth :\r\n\t\t\t\tsanityWidth;\r\n\r\n\t\t// IE6/7 are a law unto themselves...\r\n\t\tif ( ie67 && (divBodyEl.scrollHeight >\r\n\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\r\n\t\t) {\r\n\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\r\n\t\t}\r\n\r\n\t\t// And give the user a warning that we've stopped the table getting too small\r\n\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\r\n\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcorrection = '100%';\r\n\t}\r\n\r\n\t// Apply to the container elements\r\n\tdivBodyStyle.width = _fnStringToCss( correction );\r\n\tdivHeaderStyle.width = _fnStringToCss( correction );\r\n\r\n\tif ( footer ) {\r\n\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * 4. Clean up\r\n\t */\r\n\tif ( ! scrollY ) {\r\n\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\r\n\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\r\n\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\r\n\t\t */\r\n\t\tif ( ie67 ) {\r\n\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Finally set the width's of the header and footer tables */\r\n\tvar iOuterWidth = table.outerWidth();\r\n\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\r\n\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\r\n\r\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\r\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\r\n\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\r\n\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\r\n\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\r\n\r\n\tif ( footer ) {\r\n\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\r\n\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\r\n\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\r\n\t}\r\n\r\n\t// Correct DOM ordering for colgroup - comes before the thead\r\n\ttable.children('colgroup').insertBefore( table.children('thead') );\r\n\r\n\t/* Adjust the position of the header in case we loose the y-scrollbar */\r\n\tdivBody.trigger('scroll');\r\n\r\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\r\n\t// only if we aren't holding the position\r\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\r\n\t\tdivBodyEl.scrollTop = 0;\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Apply a given function to the display child nodes of an element array (typically\r\n * TD children of TR rows\r\n *  @param {function} fn Method to apply to the objects\r\n *  @param array {nodes} an1 List of elements to look through for display children\r\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnApplyToChildren( fn, an1, an2 )\r\n{\r\n\tvar index=0, i=0, iLen=an1.length;\r\n\tvar nNode1, nNode2;\r\n\r\n\twhile ( i < iLen ) {\r\n\t\tnNode1 = an1[i].firstChild;\r\n\t\tnNode2 = an2 ? an2[i].firstChild : null;\r\n\r\n\t\twhile ( nNode1 ) {\r\n\t\t\tif ( nNode1.nodeType === 1 ) {\r\n\t\t\t\tif ( an2 ) {\r\n\t\t\t\t\tfn( nNode1, nNode2, index );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfn( nNode1, index );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tnNode1 = nNode1.nextSibling;\r\n\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\r\n\t\t}\r\n\r\n\t\ti++;\r\n\t}\r\n}\r\n\r\n\r\n\r\nvar __re_html_remove = /<.*?>/g;\r\n\r\n\r\n/**\r\n * Calculate the width of columns for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCalculateColumnWidths ( oSettings )\r\n{\r\n\tvar\r\n\t\ttable = oSettings.nTable,\r\n\t\tcolumns = oSettings.aoColumns,\r\n\t\tscroll = oSettings.oScroll,\r\n\t\tscrollY = scroll.sY,\r\n\t\tscrollX = scroll.sX,\r\n\t\tscrollXInner = scroll.sXInner,\r\n\t\tcolumnCount = columns.length,\r\n\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\r\n\t\theaderCells = $('th', oSettings.nTHead),\r\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\r\n\t\ttableContainer = table.parentNode,\r\n\t\tuserInputs = false,\r\n\t\ti, column, columnIdx, width, outerWidth,\r\n\t\tbrowser = oSettings.oBrowser,\r\n\t\tie67 = browser.bScrollOversize;\r\n\r\n\tvar styleWidth = table.style.width;\r\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\r\n\t\ttableWidthAttr = styleWidth;\r\n\t}\r\n\r\n\t/* Convert any user input sizes into pixel sizes */\r\n\tvar sizes = _fnConvertToWidth(_pluck(columns, 'sWidthOrig'), tableContainer);\r\n\r\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\tcolumn = columns[ visibleColumns[i] ];\r\n\r\n\t\tif ( column.sWidth !== null ) {\r\n\t\t\tcolumn.sWidth = sizes[i];\r\n\r\n\t\t\tuserInputs = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/* If the number of columns in the DOM equals the number that we have to\r\n\t * process in DataTables, then we can use the offsets that are created by\r\n\t * the web- browser. No custom sizes can be set in order for this to happen,\r\n\t * nor scrolling used\r\n\t */\r\n\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\r\n\t     columnCount == _fnVisbleColumns( oSettings ) &&\r\n\t     columnCount == headerCells.length\r\n\t) {\r\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\r\n\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\r\n\r\n\t\t\tif ( colIdx !== null ) {\r\n\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// Otherwise construct a single row, worst case, table with the widest\r\n\t\t// node in the data, assign any user defined widths, then insert it into\r\n\t\t// the DOM and allow the browser to do all the hard work of calculating\r\n\t\t// table widths\r\n\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\r\n\t\t\t.css( 'visibility', 'hidden' )\r\n\t\t\t.removeAttr( 'id' );\r\n\r\n\t\t// Clean up the table body\r\n\t\ttmpTable.find('tbody tr').remove();\r\n\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\r\n\r\n\t\t// Clone the table header and footer - we can't use the header / footer\r\n\t\t// from the cloned table, since if scrolling is active, the table's\r\n\t\t// real header and footer are contained in different table tags\r\n\t\ttmpTable.find('thead, tfoot').remove();\r\n\t\ttmpTable\r\n\t\t\t.append( $(oSettings.nTHead).clone() )\r\n\t\t\t.append( $(oSettings.nTFoot).clone() );\r\n\r\n\t\t// Remove any assigned widths from the footer (from scrolling)\r\n\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\r\n\r\n\t\t// Apply custom sizing to the cloned header\r\n\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\r\n\r\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\tcolumn = columns[ visibleColumns[i] ];\r\n\r\n\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\r\n\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\r\n\t\t\t\t'';\r\n\r\n\t\t\t// For scrollX we need to force the column width otherwise the\r\n\t\t\t// browser will collapse it. If this width is smaller than the\r\n\t\t\t// width the column requires, then it will have no effect\r\n\t\t\tif ( column.sWidthOrig && scrollX ) {\r\n\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\r\n\t\t\t\t\twidth: column.sWidthOrig,\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t} ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Find the widest cell for each column and put it into the table\r\n\t\tif ( oSettings.aoData.length ) {\r\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\t\tcolumnIdx = visibleColumns[i];\r\n\t\t\t\tcolumn = columns[ columnIdx ];\r\n\r\n\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\r\n\t\t\t\t\t.clone( false )\r\n\t\t\t\t\t.append( column.sContentPadding )\r\n\t\t\t\t\t.appendTo( tr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Tidy the temporary table - remove name attributes so there aren't\r\n\t\t// duplicated in the dom (radio elements for example)\r\n\t\t$('[name]', tmpTable).removeAttr('name');\r\n\r\n\t\t// Table has been built, attach to the document so we can work with it.\r\n\t\t// A holding element is used, positioned at the top of the container\r\n\t\t// with minimal height, so it has no effect on if the container scrolls\r\n\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\r\n\t\t// needed\r\n\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\theight: 1,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t} :\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\t.append( tmpTable )\r\n\t\t\t.appendTo( tableContainer );\r\n\r\n\t\t// When scrolling (X or Y) we want to set the width of the table as \r\n\t\t// appropriate. However, when not scrolling leave the table width as it\r\n\t\t// is. This results in slightly different, but I think correct behaviour\r\n\t\tif ( scrollX && scrollXInner ) {\r\n\t\t\ttmpTable.width( scrollXInner );\r\n\t\t}\r\n\t\telse if ( scrollX ) {\r\n\t\t\ttmpTable.css( 'width', 'auto' );\r\n\t\t\ttmpTable.removeAttr('width');\r\n\r\n\t\t\t// If there is no width attribute or style, then allow the table to\r\n\t\t\t// collapse\r\n\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\r\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ( scrollY ) {\r\n\t\t\ttmpTable.width( tableContainer.clientWidth );\r\n\t\t}\r\n\t\telse if ( tableWidthAttr ) {\r\n\t\t\ttmpTable.width( tableWidthAttr );\r\n\t\t}\r\n\r\n\t\t// Get the width of each column in the constructed table - we need to\r\n\t\t// know the inner width (so it can be assigned to the other table's\r\n\t\t// cells) and the outer width so we can calculate the full width of the\r\n\t\t// table. This is safe since DataTables requires a unique cell for each\r\n\t\t// column, but if ever a header can span multiple columns, this will\r\n\t\t// need to be modified.\r\n\t\tvar total = 0;\r\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\tvar cell = $(headerCells[i]);\r\n\t\t\tvar border = cell.outerWidth() - cell.width();\r\n\r\n\t\t\t// Use getBounding... where possible (not IE8-) because it can give\r\n\t\t\t// sub-pixel accuracy, which we then want to round up!\r\n\t\t\tvar bounding = browser.bBounding ?\r\n\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\r\n\t\t\t\tcell.outerWidth();\r\n\r\n\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\r\n\t\t\t// of the table might not equal the total given here (IE!).\r\n\t\t\ttotal += bounding;\r\n\r\n\t\t\t// Width for each column to use\r\n\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\r\n\t\t}\r\n\r\n\t\ttable.style.width = _fnStringToCss( total );\r\n\r\n\t\t// Finished with the table - ditch it\r\n\t\tholder.remove();\r\n\t}\r\n\r\n\t// If there is a width attr, we want to attach an event listener which\r\n\t// allows the table sizing to automatically adjust when the window is\r\n\t// resized. Use the width attr rather than CSS, since we can't know if the\r\n\t// CSS is a relative value or absolute - DOM read is always px.\r\n\tif ( tableWidthAttr ) {\r\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\r\n\t}\r\n\r\n\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\r\n\t\tvar bindResize = function () {\r\n\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\r\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\r\n\t\t\t} ) );\r\n\t\t};\r\n\r\n\t\t// IE6/7 will crash if we bind a resize event handler on page load.\r\n\t\t// To be removed in 1.11 which drops IE6/7 support\r\n\t\tif ( ie67 ) {\r\n\t\t\tsetTimeout( bindResize, 1000 );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbindResize();\r\n\t\t}\r\n\r\n\t\toSettings._reszEvt = true;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Throttle the calls to a function. Arguments and context are maintained for\r\n * the throttled function\r\n *  @param {function} fn Function to be called\r\n *  @param {int} [freq=200] call frequency in mS\r\n *  @returns {function} wrapped function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnThrottle = DataTable.util.throttle;\r\n\r\n\r\n/**\r\n * Convert a set of CSS units width to pixels (e.g. 2em)\r\n *  @param {string[]} widths widths to be converted\r\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\r\n *  @returns {int[]} widths in pixels\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnConvertToWidth ( widths, parent )\r\n{\r\n\tvar els = [];\r\n\tvar results = [];\r\n\r\n\t// Add the elements in a single loop so we only need to reflow once\r\n\tfor (var i=0 ; i<widths.length ; i++) {\r\n\t\tif (widths[i]) {\r\n\t\t\tels.push(\r\n\t\t\t\t$('<div/>')\r\n\t\t\t\t\t.css( 'width', _fnStringToCss( widths[i] ) )\r\n\t\t\t\t\t.appendTo( parent || document.body )\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tels.push(null);\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the sizes (will reflow once)\r\n\tfor (var i=0 ; i<widths.length ; i++) {\r\n\t\tresults.push(els[i] ? els[i][0].offsetWidth : null);\r\n\t}\r\n\r\n\t// Tidy\r\n\t$(els).remove();\r\n\r\n\treturn results;\r\n}\r\n\r\n\r\n/**\r\n * Get the widest node\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {node} widest table node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetWidestNode( settings, colIdx )\r\n{\r\n\tvar idx = _fnGetMaxLenString( settings, colIdx );\r\n\tif ( idx < 0 ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar data = settings.aoData[ idx ];\r\n\treturn ! data.nTr ? // Might not have been created when deferred rendering\r\n\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\r\n\t\tdata.anCells[ colIdx ];\r\n}\r\n\r\n\r\n/**\r\n * Get the maximum strlen for each data column\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {string} max string length for each column\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetMaxLenString( settings, colIdx )\r\n{\r\n\tvar s, max=-1, maxIdx = -1;\r\n\r\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\r\n\t\ts = s.replace( __re_html_remove, '' );\r\n\t\ts = s.replace( /&nbsp;/g, ' ' );\r\n\r\n\t\tif ( s.length > max ) {\r\n\t\t\tmax = s.length;\r\n\t\t\tmaxIdx = i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn maxIdx;\r\n}\r\n\r\n\r\n/**\r\n * Append a CSS unit (only if required) to a string\r\n *  @param {string} value to css-ify\r\n *  @returns {string} value with css unit\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnStringToCss( s )\r\n{\r\n\tif ( s === null ) {\r\n\t\treturn '0px';\r\n\t}\r\n\r\n\tif ( typeof s == 'number' ) {\r\n\t\treturn s < 0 ?\r\n\t\t\t'0px' :\r\n\t\t\ts+'px';\r\n\t}\r\n\r\n\t// Check it has a unit character already\r\n\treturn s.match(/\\d$/) ?\r\n\t\ts+'px' :\r\n\t\ts;\r\n}\r\n\r\n\r\n\r\nfunction _fnSortFlatten ( settings )\r\n{\r\n\tvar\r\n\t\ti, iLen, k, kLen,\r\n\t\taSort = [],\r\n\t\taiOrig = [],\r\n\t\taoColumns = settings.aoColumns,\r\n\t\taDataSort, iCol, sType, srcCol,\r\n\t\tfixed = settings.aaSortingFixed,\r\n\t\tfixedObj = $.isPlainObject( fixed ),\r\n\t\tnestedSort = [],\r\n\t\tadd = function ( a ) {\r\n\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\r\n\t\t\t\t// 1D array\r\n\t\t\t\tnestedSort.push( a );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// 2D array\r\n\t\t\t\t$.merge( nestedSort, a );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t// Build the sort array, with pre-fix and post-fix options if they have been\r\n\t// specified\r\n\tif ( Array.isArray( fixed ) ) {\r\n\t\tadd( fixed );\r\n\t}\r\n\r\n\tif ( fixedObj && fixed.pre ) {\r\n\t\tadd( fixed.pre );\r\n\t}\r\n\r\n\tadd( settings.aaSorting );\r\n\r\n\tif (fixedObj && fixed.post ) {\r\n\t\tadd( fixed.post );\r\n\t}\r\n\r\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\r\n\t{\r\n\t\tsrcCol = nestedSort[i][0];\r\n\t\taDataSort = aoColumns[ srcCol ].aDataSort;\r\n\r\n\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\r\n\t\t{\r\n\t\t\tiCol = aDataSort[k];\r\n\t\t\tsType = aoColumns[ iCol ].sType || 'string';\r\n\r\n\t\t\tif ( nestedSort[i]._idx === undefined ) {\r\n\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\r\n\t\t\t}\r\n\r\n\t\t\taSort.push( {\r\n\t\t\t\tsrc:       srcCol,\r\n\t\t\t\tcol:       iCol,\r\n\t\t\t\tdir:       nestedSort[i][1],\r\n\t\t\t\tindex:     nestedSort[i]._idx,\r\n\t\t\t\ttype:      sType,\r\n\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\treturn aSort;\r\n}\r\n\r\n/**\r\n * Change the order of the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n *  @todo This really needs split up!\r\n */\r\nfunction _fnSort ( oSettings )\r\n{\r\n\tvar\r\n\t\ti, ien, iLen, j, jLen, k, kLen,\r\n\t\tsDataType, nTh,\r\n\t\taiOrig = [],\r\n\t\toExtSort = DataTable.ext.type.order,\r\n\t\taoData = oSettings.aoData,\r\n\t\taoColumns = oSettings.aoColumns,\r\n\t\taDataSort, data, iCol, sType, oSort,\r\n\t\tformatters = 0,\r\n\t\tsortCol,\r\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\r\n\t\taSort;\r\n\r\n\t// Resolve any column types that are unknown due to addition or invalidation\r\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\r\n\t//   data is going to be used in the table?\r\n\t_fnColumnTypes( oSettings );\r\n\r\n\taSort = _fnSortFlatten( oSettings );\r\n\r\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\r\n\t\tsortCol = aSort[i];\r\n\r\n\t\t// Track if we can use the fast sort algorithm\r\n\t\tif ( sortCol.formatter ) {\r\n\t\t\tformatters++;\r\n\t\t}\r\n\r\n\t\t// Load the data needed for the sort, for each cell\r\n\t\t_fnSortData( oSettings, sortCol.col );\r\n\t}\r\n\r\n\t/* No sorting required if server-side or no sorting array */\r\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\r\n\t{\r\n\t\t// Create a value - key array of the current row positions such that we can use their\r\n\t\t// current position during the sort, if values match, in order to perform stable sorting\r\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\r\n\t\t\taiOrig[ displayMaster[i] ] = i;\r\n\t\t}\r\n\r\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\r\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\r\n\t\t * follow on it's own, but this is what we want (example two column sorting):\r\n\t\t *  fnLocalSorting = function(a,b){\r\n\t\t *    var iTest;\r\n\t\t *    iTest = oSort['string-asc']('data11', 'data12');\r\n\t\t *      if (iTest !== 0)\r\n\t\t *        return iTest;\r\n\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\r\n\t\t *    if (iTest !== 0)\r\n\t\t *      return iTest;\r\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\r\n\t\t *  }\r\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\r\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\r\n\t\t * positions in the original data array to provide a stable sort.\r\n\t\t *\r\n\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\r\n\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\r\n\t\t * methods which do not have a pre-sort formatting function.\r\n\t\t */\r\n\t\tif ( formatters === aSort.length ) {\r\n\t\t\t// All sort types have formatting functions\r\n\t\t\tdisplayMaster.sort( function ( a, b ) {\r\n\t\t\t\tvar\r\n\t\t\t\t\tx, y, k, test, sort,\r\n\t\t\t\t\tlen=aSort.length,\r\n\t\t\t\t\tdataA = aoData[a]._aSortData,\r\n\t\t\t\t\tdataB = aoData[b]._aSortData;\r\n\r\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\r\n\t\t\t\t\tsort = aSort[k];\r\n\r\n\t\t\t\t\tx = dataA[ sort.col ];\r\n\t\t\t\t\ty = dataB[ sort.col ];\r\n\r\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t\t\tif ( test !== 0 ) {\r\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx = aiOrig[a];\r\n\t\t\t\ty = aiOrig[b];\r\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t} );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\r\n\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\r\n\t\t\t// methods.\r\n\t\t\tdisplayMaster.sort( function ( a, b ) {\r\n\t\t\t\tvar\r\n\t\t\t\t\tx, y, k, l, test, sort, fn,\r\n\t\t\t\t\tlen=aSort.length,\r\n\t\t\t\t\tdataA = aoData[a]._aSortData,\r\n\t\t\t\t\tdataB = aoData[b]._aSortData;\r\n\r\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\r\n\t\t\t\t\tsort = aSort[k];\r\n\r\n\t\t\t\t\tx = dataA[ sort.col ];\r\n\t\t\t\t\ty = dataB[ sort.col ];\r\n\r\n\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\r\n\t\t\t\t\ttest = fn( x, y );\r\n\t\t\t\t\tif ( test !== 0 ) {\r\n\t\t\t\t\t\treturn test;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx = aiOrig[a];\r\n\t\t\t\ty = aiOrig[b];\r\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Tell the draw function that we have sorted the data */\r\n\toSettings.bSorted = true;\r\n}\r\n\r\n\r\nfunction _fnSortAria ( settings )\r\n{\r\n\tvar label;\r\n\tvar nextSort;\r\n\tvar columns = settings.aoColumns;\r\n\tvar aSort = _fnSortFlatten( settings );\r\n\tvar oAria = settings.oLanguage.oAria;\r\n\r\n\t// ARIA attributes - need to loop all columns, to update all (removing old\r\n\t// attributes as needed)\r\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tvar col = columns[i];\r\n\t\tvar asSorting = col.asSorting;\r\n\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\r\n\t\tvar th = col.nTh;\r\n\r\n\t\t// IE7 is throwing an error when setting these properties with jQuery's\r\n\t\t// attr() and removeAttr() methods...\r\n\t\tth.removeAttribute('aria-sort');\r\n\r\n\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\r\n\t\tif ( col.bSortable ) {\r\n\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\r\n\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\r\n\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnextSort = asSorting[0];\r\n\t\t\t}\r\n\r\n\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\r\n\t\t\t\toAria.sSortAscending :\r\n\t\t\t\toAria.sSortDescending\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabel = sTitle;\r\n\t\t}\r\n\r\n\t\tth.setAttribute('aria-label', label);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Function to run on user sort request\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {boolean} [append=false] Append the requested sort to the existing\r\n *    sort if true (i.e. multi-column sort)\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortListener ( settings, colIdx, append, callback )\r\n{\r\n\tvar col = settings.aoColumns[ colIdx ];\r\n\tvar sorting = settings.aaSorting;\r\n\tvar asSorting = col.asSorting;\r\n\tvar nextSortIdx;\r\n\tvar next = function ( a, overflow ) {\r\n\t\tvar idx = a._idx;\r\n\t\tif ( idx === undefined ) {\r\n\t\t\tidx = $.inArray( a[1], asSorting );\r\n\t\t}\r\n\r\n\t\treturn idx+1 < asSorting.length ?\r\n\t\t\tidx+1 :\r\n\t\t\toverflow ?\r\n\t\t\t\tnull :\r\n\t\t\t\t0;\r\n\t};\r\n\r\n\t// Convert to 2D array if needed\r\n\tif ( typeof sorting[0] === 'number' ) {\r\n\t\tsorting = settings.aaSorting = [ sorting ];\r\n\t}\r\n\r\n\t// If appending the sort then we are multi-column sorting\r\n\tif ( append && settings.oFeatures.bSortMulti ) {\r\n\t\t// Are we already doing some kind of sort on this column?\r\n\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\r\n\r\n\t\tif ( sortIdx !== -1 ) {\r\n\t\t\t// Yes, modify the sort\r\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\r\n\r\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\r\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\r\n\t\t\t}\r\n\r\n\t\t\tif ( nextSortIdx === null ) {\r\n\t\t\t\tsorting.splice( sortIdx, 1 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\r\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No sort on this column yet\r\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\r\n\t\t\tsorting[sorting.length-1]._idx = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\r\n\t\t// Single column - already sorting on this column, modify the sort\r\n\t\tnextSortIdx = next( sorting[0] );\r\n\r\n\t\tsorting.length = 1;\r\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\r\n\t\tsorting[0]._idx = nextSortIdx;\r\n\t}\r\n\telse {\r\n\t\t// Single column - sort only on this column\r\n\t\tsorting.length = 0;\r\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\r\n\t\tsorting[0]._idx = 0;\r\n\t}\r\n\r\n\t// Run the sort by calling a full redraw\r\n\t_fnReDraw( settings );\r\n\r\n\t// callback used for async user interaction\r\n\tif ( typeof callback == 'function' ) {\r\n\t\tcallback( settings );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Attach a sort handler (click) to a node\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\r\n{\r\n\tvar col = settings.aoColumns[ colIdx ];\r\n\r\n\t_fnBindAction( attachTo, {}, function (e) {\r\n\t\t/* If the column is not sortable - don't to anything */\r\n\t\tif ( col.bSortable === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If processing is enabled use a timeout to allow the processing\r\n\t\t// display to be shown - otherwise to it synchronously\r\n\t\tif ( settings.oFeatures.bProcessing ) {\r\n\t\t\t_fnProcessingDisplay( settings, true );\r\n\r\n\t\t\tsetTimeout( function() {\r\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\r\n\r\n\t\t\t\t// In server-side processing, the draw callback will remove the\r\n\t\t\t\t// processing display\r\n\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\r\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t\t}\r\n\t\t\t}, 0 );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Set the sorting classes on table's body, Note: it is safe to call this function\r\n * when bSort and bSortClasses are false\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortingClasses( settings )\r\n{\r\n\tvar oldSort = settings.aLastSort;\r\n\tvar sortClass = settings.oClasses.sSortColumn;\r\n\tvar sort = _fnSortFlatten( settings );\r\n\tvar features = settings.oFeatures;\r\n\tvar i, ien, colIdx;\r\n\r\n\tif ( features.bSort && features.bSortClasses ) {\r\n\t\t// Remove old sorting classes\r\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\r\n\t\t\tcolIdx = oldSort[i].src;\r\n\r\n\t\t\t// Remove column sorting\r\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\r\n\t\t}\r\n\r\n\t\t// Add new column sorting\r\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\r\n\t\t\tcolIdx = sort[i].src;\r\n\r\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\r\n\t\t}\r\n\t}\r\n\r\n\tsettings.aLastSort = sort;\r\n}\r\n\r\n\r\n// Get the data to sort a column, be it from cache, fresh (populating the\r\n// cache), or from a sort formatter\r\nfunction _fnSortData( settings, idx )\r\n{\r\n\t// Custom sorting function - provided by the sort data type\r\n\tvar column = settings.aoColumns[ idx ];\r\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\r\n\tvar customData;\r\n\r\n\tif ( customSort ) {\r\n\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\r\n\t\t\t_fnColumnIndexToVisible( settings, idx )\r\n\t\t);\r\n\t}\r\n\r\n\t// Use / populate cache\r\n\tvar row, cellData;\r\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\r\n\r\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\trow = settings.aoData[i];\r\n\r\n\t\tif ( ! row._aSortData ) {\r\n\t\t\trow._aSortData = [];\r\n\t\t}\r\n\r\n\t\tif ( ! row._aSortData[idx] || customSort ) {\r\n\t\t\tcellData = customSort ?\r\n\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\r\n\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\r\n\r\n\t\t\trow._aSortData[ idx ] = formatter ?\r\n\t\t\t\tformatter( cellData ) :\r\n\t\t\t\tcellData;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Save the state of a table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSaveState ( settings )\r\n{\r\n\tif (settings._bLoadingState) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* Store the interesting variables */\r\n\tvar state = {\r\n\t\ttime:    +new Date(),\r\n\t\tstart:   settings._iDisplayStart,\r\n\t\tlength:  settings._iDisplayLength,\r\n\t\torder:   $.extend( true, [], settings.aaSorting ),\r\n\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\r\n\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\r\n\t\t\treturn {\r\n\t\t\t\tvisible: col.bVisible,\r\n\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\r\n\t\t\t};\r\n\t\t} )\r\n\t};\r\n\r\n\tsettings.oSavedState = state;\r\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\r\n\t\r\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\r\n\t{\r\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\r\n\t}\t\r\n}\r\n\r\n\r\n/**\r\n * Attempt to load a saved table state\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oInit DataTables init object so we can override settings\r\n *  @param {function} callback Callback to execute when the state has been loaded\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLoadState ( settings, oInit, callback )\r\n{\r\n\tif ( ! settings.oFeatures.bStateSave ) {\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar loaded = function(state) {\r\n\t\t_fnImplementState(settings, state, callback);\r\n\t}\r\n\r\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\r\n\r\n\tif ( state !== undefined ) {\r\n\t\t_fnImplementState( settings, state, callback );\r\n\t}\r\n\t// otherwise, wait for the loaded callback to be executed\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction _fnImplementState ( settings, s, callback) {\r\n\tvar i, ien;\r\n\tvar columns = settings.aoColumns;\r\n\tsettings._bLoadingState = true;\r\n\r\n\t// When StateRestore was introduced the state could now be implemented at any time\r\n\t// Not just initialisation. To do this an api instance is required in some places\r\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\r\n\r\n\tif ( ! s || ! s.time ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\r\n\t// cancelling of loading by returning false\r\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\r\n\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Reject old data\r\n\tvar duration = settings.iStateDuration;\r\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Number of columns have changed - all bets are off, no restore of settings\r\n\tif ( s.columns && columns.length !== s.columns.length ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Store the saved state so it might be accessed at any time\r\n\tsettings.oLoadedState = $.extend( true, {}, s );\r\n\r\n\t// Page Length\r\n\tif ( s.length !== undefined ) {\r\n\t\t// If already initialised just set the value directly so that the select element is also updated\r\n\t\tif (api) {\r\n\t\t\tapi.page.len(s.length)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsettings._iDisplayLength   = s.length;\r\n\t\t}\r\n\t}\r\n\r\n\t// Restore key features - todo - for 1.11 this needs to be done by\r\n\t// subscribed events\r\n\tif ( s.start !== undefined ) {\r\n\t\tif(api === null) {\r\n\t\t\tsettings._iDisplayStart    = s.start;\r\n\t\t\tsettings.iInitDisplayStart = s.start;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\r\n\t\t}\r\n\t}\r\n\r\n\t// Order\r\n\tif ( s.order !== undefined ) {\r\n\t\tsettings.aaSorting = [];\r\n\t\t$.each( s.order, function ( i, col ) {\r\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\r\n\t\t\t\t[ 0, col[1] ] :\r\n\t\t\t\tcol\r\n\t\t\t);\r\n\t\t} );\r\n\t}\r\n\r\n\t// Search\r\n\tif ( s.search !== undefined ) {\r\n\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\r\n\t}\r\n\r\n\t// Columns\r\n\tif ( s.columns ) {\r\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\r\n\t\t\tvar col = s.columns[i];\r\n\r\n\t\t\t// Visibility\r\n\t\t\tif ( col.visible !== undefined ) {\r\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\r\n\t\t\t\tif (api) {\r\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\r\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Search\r\n\t\t\tif ( col.search !== undefined ) {\r\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\r\n\t\tif (api) {\r\n\t\t\tapi.columns.adjust();\r\n\t\t}\r\n\t}\r\n\r\n\tsettings._bLoadingState = false;\r\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\r\n\tcallback();\r\n};\r\n\r\n\r\n/**\r\n * Return the settings object for a particular table\r\n *  @param {node} table table we are using as a dataTable\r\n *  @returns {object} Settings object - or null if not found\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSettingsFromNode ( table )\r\n{\r\n\tvar settings = DataTable.settings;\r\n\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\r\n\r\n\treturn idx !== -1 ?\r\n\t\tsettings[ idx ] :\r\n\t\tnull;\r\n}\r\n\r\n\r\n/**\r\n * Log an error message\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} level log error messages, or display them to the user\r\n *  @param {string} msg error message\r\n *  @param {int} tn Technical note id to get more information about the error.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLog( settings, level, msg, tn )\r\n{\r\n\tmsg = 'DataTables warning: '+\r\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\r\n\r\n\tif ( tn ) {\r\n\t\tmsg += '. For more information about this error, please see '+\r\n\t\t'https://datatables.net/tn/'+tn;\r\n\t}\r\n\r\n\tif ( ! level  ) {\r\n\t\t// Backwards compatibility pre 1.10\r\n\t\tvar ext = DataTable.ext;\r\n\t\tvar type = ext.sErrMode || ext.errMode;\r\n\r\n\t\tif ( settings ) {\r\n\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\r\n\t\t}\r\n\r\n\t\tif ( type == 'alert' ) {\r\n\t\t\talert( msg );\r\n\t\t}\r\n\t\telse if ( type == 'throw' ) {\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\t\telse if ( typeof type == 'function' ) {\r\n\t\t\ttype( settings, tn, msg );\r\n\t\t}\r\n\t}\r\n\telse if ( window.console && console.log ) {\r\n\t\tconsole.log( msg );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * See if a property is defined on one object, if so assign it to the other object\r\n *  @param {object} ret target object\r\n *  @param {object} src source object\r\n *  @param {string} name property\r\n *  @param {string} [mappedName] name to map too - optional, name used if not given\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnMap( ret, src, name, mappedName )\r\n{\r\n\tif ( Array.isArray( name ) ) {\r\n\t\t$.each( name, function (i, val) {\r\n\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_fnMap( ret, src, val );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( mappedName === undefined ) {\r\n\t\tmappedName = name;\r\n\t}\r\n\r\n\tif ( src[name] !== undefined ) {\r\n\t\tret[mappedName] = src[name];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\r\n * shallow copy arrays. The reason we need to do this, is that we don't want to\r\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\r\n * able to override them, but we do want to deep copy arrays.\r\n *  @param {object} out Object to extend\r\n *  @param {object} extender Object from which the properties will be applied to\r\n *      out\r\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\r\n *      independent copy with the exception of the `data` or `aaData` parameters\r\n *      if they are present. This is so you can pass in a collection to\r\n *      DataTables and have that used as your data source without breaking the\r\n *      references\r\n *  @returns {object} out Reference, just for convenience - out === the return.\r\n *  @memberof DataTable#oApi\r\n *  @todo This doesn't take account of arrays inside the deep copied objects.\r\n */\r\nfunction _fnExtend( out, extender, breakRefs )\r\n{\r\n\tvar val;\r\n\r\n\tfor ( var prop in extender ) {\r\n\t\tif ( extender.hasOwnProperty(prop) ) {\r\n\t\t\tval = extender[prop];\r\n\r\n\t\t\tif ( $.isPlainObject( val ) ) {\r\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\r\n\t\t\t\t\tout[prop] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$.extend( true, out[prop], val );\r\n\t\t\t}\r\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\r\n\t\t\t\tout[prop] = val.slice();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tout[prop] = val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\n\r\n/**\r\n * Bind an event handers to allow a click or return key to activate the callback.\r\n * This is good for accessibility since a return on the keyboard will have the\r\n * same effect as a click, if the element has focus.\r\n *  @param {element} n Element to bind the action to\r\n *  @param {object} oData Data object to pass to the triggered function\r\n *  @param {function} fn Callback function for when the event is triggered\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBindAction( n, oData, fn )\r\n{\r\n\t$(n)\r\n\t\t.on( 'click.DT', oData, function (e) {\r\n\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\r\n\t\t\t\tfn(e);\r\n\t\t\t} )\r\n\t\t.on( 'keypress.DT', oData, function (e){\r\n\t\t\t\tif ( e.which === 13 ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tfn(e);\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t\t.on( 'selectstart.DT', function () {\r\n\t\t\t\t/* Take the brutal approach to cancelling text selection */\r\n\t\t\t\treturn false;\r\n\t\t\t} );\r\n}\r\n\r\n\r\n/**\r\n * Register a callback function. Easily allows a callback function to be added to\r\n * an array store of callback functions that can then all be called together.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\r\n *  @param {function} fn Function to be called back\r\n *  @param {string} sName Identifying name for the callback (i.e. a label)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCallbackReg( oSettings, sStore, fn, sName )\r\n{\r\n\tif ( fn )\r\n\t{\r\n\t\toSettings[sStore].push( {\r\n\t\t\t\"fn\": fn,\r\n\t\t\t\"sName\": sName\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Fire callback functions and trigger events. Note that the loop over the\r\n * callback array store is done backwards! Further note that you do not want to\r\n * fire off triggers in time sensitive applications (for example cell creation)\r\n * as its slow.\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} callbackArr Name of the array storage for the callbacks in\r\n *      oSettings\r\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\r\n *      null no trigger is fired\r\n *  @param {array} args Array of arguments to pass to the callback function /\r\n *      trigger\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCallbackFire( settings, callbackArr, eventName, args )\r\n{\r\n\tvar ret = [];\r\n\r\n\tif ( callbackArr ) {\r\n\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\r\n\t\t\treturn val.fn.apply( settings.oInstance, args );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( eventName !== null ) {\r\n\t\tvar e = $.Event( eventName+'.dt' );\r\n\t\tvar table = $(settings.nTable);\r\n\r\n\t\ttable.trigger( e, args );\r\n\r\n\t\t// If not yet attached to the document, trigger the event\r\n\t\t// on the body directly to sort of simulate the bubble\r\n\t\tif (table.parents('body').length === 0) {\r\n\t\t\t$('body').trigger( e, args );\r\n\t\t}\r\n\r\n\t\tret.push( e.result );\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n\r\nfunction _fnLengthOverflow ( settings )\r\n{\r\n\tvar\r\n\t\tstart = settings._iDisplayStart,\r\n\t\tend = settings.fnDisplayEnd(),\r\n\t\tlen = settings._iDisplayLength;\r\n\r\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\r\n\tif ( start >= end )\r\n\t{\r\n\t\tstart = end - len;\r\n\t}\r\n\r\n\t// Keep the start record on the current page\r\n\tstart -= (start % len);\r\n\r\n\tif ( len === -1 || start < 0 )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\r\n\tsettings._iDisplayStart = start;\r\n}\r\n\r\n\r\nfunction _fnRenderer( settings, type )\r\n{\r\n\tvar renderer = settings.renderer;\r\n\tvar host = DataTable.ext.renderer[type];\r\n\r\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\r\n\t\t// Specific renderer for this type. If available use it, otherwise use\r\n\t\t// the default.\r\n\t\treturn host[renderer[type]] || host._;\r\n\t}\r\n\telse if ( typeof renderer === 'string' ) {\r\n\t\t// Common renderer - if there is one available for this type use it,\r\n\t\t// otherwise use the default\r\n\t\treturn host[renderer] || host._;\r\n\t}\r\n\r\n\t// Use the default\r\n\treturn host._;\r\n}\r\n\r\n\r\n/**\r\n * Detect the data source being used for the table. Used to simplify the code\r\n * a little (ajax) and to make it compress a little smaller.\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {string} Data source\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDataSource ( settings )\r\n{\r\n\tif ( settings.oFeatures.bServerSide ) {\r\n\t\treturn 'ssp';\r\n\t}\r\n\telse if ( settings.ajax || settings.sAjaxSource ) {\r\n\t\treturn 'ajax';\r\n\t}\r\n\treturn 'dom';\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Computed structure of the DataTables API, defined by the options passed to\r\n * `DataTable.Api.register()` when building the API.\r\n *\r\n * The structure is built in order to speed creation and extension of the Api\r\n * objects since the extensions are effectively pre-parsed.\r\n *\r\n * The array is an array of objects with the following structure, where this\r\n * base array represents the Api prototype base:\r\n *\r\n *     [\r\n *       {\r\n *         name:      'data'                -- string   - Property name\r\n *         val:       function () {},       -- function - Api method (or undefined if just an object\r\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n *       },\r\n *       {\r\n *         name:     'row'\r\n *         val:       {},\r\n *         methodExt: [ ... ],\r\n *         propExt:   [\r\n *           {\r\n *             name:      'data'\r\n *             val:       function () {},\r\n *             methodExt: [ ... ],\r\n *             propExt:   [ ... ]\r\n *           },\r\n *           ...\r\n *         ]\r\n *       }\r\n *     ]\r\n *\r\n * @type {Array}\r\n * @ignore\r\n */\r\nvar __apiStruct = [];\r\n\r\n\r\n/**\r\n * `Array.prototype` reference.\r\n *\r\n * @type object\r\n * @ignore\r\n */\r\nvar __arrayProto = Array.prototype;\r\n\r\n\r\n/**\r\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\r\n * take several different forms for ease of use.\r\n *\r\n * Each of the input parameter types will be converted to a DataTables settings\r\n * object where possible.\r\n *\r\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\r\n *   of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n *   * `DataTables.Api` - API instance\r\n * @return {array|null} Matching DataTables settings objects. `null` or\r\n *   `undefined` is returned if no matching DataTable is found.\r\n * @ignore\r\n */\r\nvar _toSettings = function ( mixed )\r\n{\r\n\tvar idx, jq;\r\n\tvar settings = DataTable.settings;\r\n\tvar tables = $.map( settings, function (el, i) {\r\n\t\treturn el.nTable;\r\n\t} );\r\n\r\n\tif ( ! mixed ) {\r\n\t\treturn [];\r\n\t}\r\n\telse if ( mixed.nTable && mixed.oApi ) {\r\n\t\t// DataTables settings object\r\n\t\treturn [ mixed ];\r\n\t}\r\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\r\n\t\t// Table node\r\n\t\tidx = $.inArray( mixed, tables );\r\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\r\n\t}\r\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\r\n\t\treturn mixed.settings().toArray();\r\n\t}\r\n\telse if ( typeof mixed === 'string' ) {\r\n\t\t// jQuery selector\r\n\t\tjq = $(mixed);\r\n\t}\r\n\telse if ( mixed instanceof $ ) {\r\n\t\t// jQuery object (also DataTables instance)\r\n\t\tjq = mixed;\r\n\t}\r\n\r\n\tif ( jq ) {\r\n\t\treturn jq.map( function(i) {\r\n\t\t\tidx = $.inArray( this, tables );\r\n\t\t\treturn idx !== -1 ? settings[idx] : null;\r\n\t\t} ).toArray();\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * DataTables API class - used to control and interface with  one or more\r\n * DataTables enhanced tables.\r\n *\r\n * The API class is heavily based on jQuery, presenting a chainable interface\r\n * that you can use to interact with tables. Each instance of the API class has\r\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\r\n * table, all tables on a page or a sub-set thereof.\r\n *\r\n * Additionally the API is designed to allow you to easily work with the data in\r\n * the tables, retrieving and manipulating it as required. This is done by\r\n * presenting the API class as an array like interface. The contents of the\r\n * array depend upon the actions requested by each method (for example\r\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\r\n * return an array of objects or arrays depending upon your table's\r\n * configuration). The API object has a number of array like methods (`push`,\r\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\r\n * `unique` etc) to assist your working with the data held in a table.\r\n *\r\n * Most methods (those which return an Api instance) are chainable, which means\r\n * the return from a method call also has all of the methods available that the\r\n * top level object had. For example, these two calls are equivalent:\r\n *\r\n *     // Not chained\r\n *     api.row.add( {...} );\r\n *     api.draw();\r\n *\r\n *     // Chained\r\n *     api.row.add( {...} ).draw();\r\n *\r\n * @class DataTable.Api\r\n * @param {array|object|string|jQuery} context DataTable identifier. This is\r\n *   used to define which DataTables enhanced tables this API will operate on.\r\n *   Can be one of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n * @param {array} [data] Data to initialise the Api instance with.\r\n *\r\n * @example\r\n *   // Direct initialisation during DataTables construction\r\n *   var api = $('#example').DataTable();\r\n *\r\n * @example\r\n *   // Initialisation using a DataTables jQuery object\r\n *   var api = $('#example').dataTable().api();\r\n *\r\n * @example\r\n *   // Initialisation as a constructor\r\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\r\n */\r\n_Api = function ( context, data )\r\n{\r\n\tif ( ! (this instanceof _Api) ) {\r\n\t\treturn new _Api( context, data );\r\n\t}\r\n\r\n\tvar settings = [];\r\n\tvar ctxSettings = function ( o ) {\r\n\t\tvar a = _toSettings( o );\r\n\t\tif ( a ) {\r\n\t\t\tsettings.push.apply( settings, a );\r\n\t\t}\r\n\t};\r\n\r\n\tif ( Array.isArray( context ) ) {\r\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\t\tctxSettings( context[i] );\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tctxSettings( context );\r\n\t}\r\n\r\n\t// Remove duplicates\r\n\tthis.context = _unique( settings );\r\n\r\n\t// Initial data\r\n\tif ( data ) {\r\n\t\t$.merge( this, data );\r\n\t}\r\n\r\n\t// selector\r\n\tthis.selector = {\r\n\t\trows: null,\r\n\t\tcols: null,\r\n\t\topts: null\r\n\t};\r\n\r\n\t_Api.extend( this, this, __apiStruct );\r\n};\r\n\r\nDataTable.Api = _Api;\r\n\r\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\r\n// isPlainObject.\r\n$.extend( _Api.prototype, {\r\n\tany: function ()\r\n\t{\r\n\t\treturn this.count() !== 0;\r\n\t},\r\n\r\n\r\n\tconcat:  __arrayProto.concat,\r\n\r\n\r\n\tcontext: [], // array of table settings objects\r\n\r\n\r\n\tcount: function ()\r\n\t{\r\n\t\treturn this.flatten().length;\r\n\t},\r\n\r\n\r\n\teach: function ( fn )\r\n\t{\r\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\r\n\t\t\tfn.call( this, this[i], i, this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\r\n\teq: function ( idx )\r\n\t{\r\n\t\tvar ctx = this.context;\r\n\r\n\t\treturn ctx.length > idx ?\r\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\r\n\t\t\tnull;\r\n\t},\r\n\r\n\r\n\tfilter: function ( fn )\r\n\t{\r\n\t\tvar a = [];\r\n\r\n\t\tif ( __arrayProto.filter ) {\r\n\t\t\ta = __arrayProto.filter.call( this, fn, this );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\r\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\r\n\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\r\n\t\t\t\t\ta.push( this[i] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new _Api( this.context, a );\r\n\t},\r\n\r\n\r\n\tflatten: function ()\r\n\t{\r\n\t\tvar a = [];\r\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\r\n\t},\r\n\r\n\r\n\tjoin:    __arrayProto.join,\r\n\r\n\r\n\tindexOf: __arrayProto.indexOf || function (obj, start)\r\n\t{\r\n\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\r\n\t\t\tif ( this[i] === obj ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\r\n\titerator: function ( flatten, type, fn, alwaysNew ) {\r\n\t\tvar\r\n\t\t\ta = [], ret,\r\n\t\t\ti, ien, j, jen,\r\n\t\t\tcontext = this.context,\r\n\t\t\trows, items, item,\r\n\t\t\tselector = this.selector;\r\n\r\n\t\t// Argument shifting\r\n\t\tif ( typeof flatten === 'string' ) {\r\n\t\t\talwaysNew = fn;\r\n\t\t\tfn = type;\r\n\t\t\ttype = flatten;\r\n\t\t\tflatten = false;\r\n\t\t}\r\n\r\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\t\tvar apiInst = new _Api( context[i] );\r\n\r\n\t\t\tif ( type === 'table' ) {\r\n\t\t\t\tret = fn.call( apiInst, context[i], i );\r\n\r\n\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\ta.push( ret );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\r\n\t\t\t\t// this has same length as context - one entry for each table\r\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\r\n\r\n\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\ta.push( ret );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\r\n\t\t\t\t// columns and rows share the same structure.\r\n\t\t\t\t// 'this' is an array of column indexes for each context\r\n\t\t\t\titems = this[i];\r\n\r\n\t\t\t\tif ( type === 'column-rows' ) {\r\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\r\n\t\t\t\t\titem = items[j];\r\n\r\n\t\t\t\t\tif ( type === 'cell' ) {\r\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\ta.push( ret );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( a.length || alwaysNew ) {\r\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\r\n\t\t\tvar apiSelector = api.selector;\r\n\t\t\tapiSelector.rows = selector.rows;\r\n\t\t\tapiSelector.cols = selector.cols;\r\n\t\t\tapiSelector.opts = selector.opts;\r\n\t\t\treturn api;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\r\n\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\r\n\t{\r\n\t\t// Bit cheeky...\r\n\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\r\n\t},\r\n\r\n\r\n\tlength:  0,\r\n\r\n\r\n\tmap: function ( fn )\r\n\t{\r\n\t\tvar a = [];\r\n\r\n\t\tif ( __arrayProto.map ) {\r\n\t\t\ta = __arrayProto.map.call( this, fn, this );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\r\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\r\n\t\t\t\ta.push( fn.call( this, this[i], i ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new _Api( this.context, a );\r\n\t},\r\n\r\n\r\n\tpluck: function ( prop )\r\n\t{\r\n\t\tvar fn = DataTable.util.get(prop);\r\n\r\n\t\treturn this.map( function ( el ) {\r\n\t\t\treturn fn(el);\r\n\t\t} );\r\n\t},\r\n\r\n\tpop:     __arrayProto.pop,\r\n\r\n\r\n\tpush:    __arrayProto.push,\r\n\r\n\r\n\t// Does not return an API instance\r\n\treduce: __arrayProto.reduce || function ( fn, init )\r\n\t{\r\n\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\r\n\t},\r\n\r\n\r\n\treduceRight: __arrayProto.reduceRight || function ( fn, init )\r\n\t{\r\n\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\r\n\t},\r\n\r\n\r\n\treverse: __arrayProto.reverse,\r\n\r\n\r\n\t// Object with rows, columns and opts\r\n\tselector: null,\r\n\r\n\r\n\tshift:   __arrayProto.shift,\r\n\r\n\r\n\tslice: function () {\r\n\t\treturn new _Api( this.context, this );\r\n\t},\r\n\r\n\r\n\tsort:    __arrayProto.sort, // ? name - order?\r\n\r\n\r\n\tsplice:  __arrayProto.splice,\r\n\r\n\r\n\ttoArray: function ()\r\n\t{\r\n\t\treturn __arrayProto.slice.call( this );\r\n\t},\r\n\r\n\r\n\tto$: function ()\r\n\t{\r\n\t\treturn $( this );\r\n\t},\r\n\r\n\r\n\ttoJQuery: function ()\r\n\t{\r\n\t\treturn $( this );\r\n\t},\r\n\r\n\r\n\tunique: function ()\r\n\t{\r\n\t\treturn new _Api( this.context, _unique(this) );\r\n\t},\r\n\r\n\r\n\tunshift: __arrayProto.unshift\r\n} );\r\n\r\n\r\n_Api.extend = function ( scope, obj, ext )\r\n{\r\n\t// Only extend API instances and static properties of the API\r\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ti, ien,\r\n\t\tstruct,\r\n\t\tmethodScoping = function ( scope, fn, struc ) {\r\n\t\t\treturn function () {\r\n\t\t\t\tvar ret = fn.apply( scope, arguments );\r\n\r\n\t\t\t\t// Method extension\r\n\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n\t\tstruct = ext[i];\r\n\r\n\t\t// Value\r\n\t\tobj[ struct.name ] = struct.type === 'function' ?\r\n\t\t\tmethodScoping( scope, struct.val, struct ) :\r\n\t\t\tstruct.type === 'object' ?\r\n\t\t\t\t{} :\r\n\t\t\t\tstruct.val;\r\n\r\n\t\tobj[ struct.name ].__dt_wrapper = true;\r\n\r\n\t\t// Property extension\r\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\r\n\t}\r\n};\r\n\r\n\r\n// @todo - Is there need for an augment function?\r\n// _Api.augment = function ( inst, name )\r\n// {\r\n// \t// Find src object in the structure from the name\r\n// \tvar parts = name.split('.');\r\n\r\n// \t_Api.extend( inst, obj );\r\n// };\r\n\r\n\r\n//     [\r\n//       {\r\n//         name:      'data'                -- string   - Property name\r\n//         val:       function () {},       -- function - Api method (or undefined if just an object\r\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n//       },\r\n//       {\r\n//         name:     'row'\r\n//         val:       {},\r\n//         methodExt: [ ... ],\r\n//         propExt:   [\r\n//           {\r\n//             name:      'data'\r\n//             val:       function () {},\r\n//             methodExt: [ ... ],\r\n//             propExt:   [ ... ]\r\n//           },\r\n//           ...\r\n//         ]\r\n//       }\r\n//     ]\r\n\r\n_Api.register = _api_register = function ( name, val )\r\n{\r\n\tif ( Array.isArray( name ) ) {\r\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\r\n\t\t\t_Api.register( name[j], val );\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ti, ien,\r\n\t\their = name.split('.'),\r\n\t\tstruct = __apiStruct,\r\n\t\tkey, method;\r\n\r\n\tvar find = function ( src, name ) {\r\n\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\r\n\t\t\tif ( src[i].name === name ) {\r\n\t\t\t\treturn src[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\r\n\t\tmethod = heir[i].indexOf('()') !== -1;\r\n\t\tkey = method ?\r\n\t\t\their[i].replace('()', '') :\r\n\t\t\their[i];\r\n\r\n\t\tvar src = find( struct, key );\r\n\t\tif ( ! src ) {\r\n\t\t\tsrc = {\r\n\t\t\t\tname:      key,\r\n\t\t\t\tval:       {},\r\n\t\t\t\tmethodExt: [],\r\n\t\t\t\tpropExt:   [],\r\n\t\t\t\ttype:      'object'\r\n\t\t\t};\r\n\t\t\tstruct.push( src );\r\n\t\t}\r\n\r\n\t\tif ( i === ien-1 ) {\r\n\t\t\tsrc.val = val;\r\n\t\t\tsrc.type = typeof val === 'function' ?\r\n\t\t\t\t'function' :\r\n\t\t\t\t$.isPlainObject( val ) ?\r\n\t\t\t\t\t'object' :\r\n\t\t\t\t\t'other';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstruct = method ?\r\n\t\t\t\tsrc.methodExt :\r\n\t\t\t\tsrc.propExt;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\r\n\t_Api.register( pluralName, val );\r\n\r\n\t_Api.register( singularName, function () {\r\n\t\tvar ret = val.apply( this, arguments );\r\n\r\n\t\tif ( ret === this ) {\r\n\t\t\t// Returned item is the API instance that was passed in, return it\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse if ( ret instanceof _Api ) {\r\n\t\t\t// New API instance returned, want the value from the first item\r\n\t\t\t// in the returned array for the singular result.\r\n\t\t\treturn ret.length ?\r\n\t\t\t\tArray.isArray( ret[0] ) ?\r\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\r\n\t\t\t\t\tret[0] :\r\n\t\t\t\tundefined;\r\n\t\t}\r\n\r\n\t\t// Non-API return - just fire it back\r\n\t\treturn ret;\r\n\t} );\r\n};\r\n\r\n\r\n/**\r\n * Selector for HTML tables. Apply the given selector to the give array of\r\n * DataTables settings objects.\r\n *\r\n * @param {string|integer} [selector] jQuery selector string or integer\r\n * @param  {array} Array of DataTables settings objects to be filtered\r\n * @return {array}\r\n * @ignore\r\n */\r\nvar __table_selector = function ( selector, a )\r\n{\r\n\tif ( Array.isArray(selector) ) {\r\n\t\treturn $.map( selector, function (item) {\r\n\t\t\treturn __table_selector(item, a);\r\n\t\t} );\r\n\t}\r\n\r\n\t// Integer is used to pick out a table by index\r\n\tif ( typeof selector === 'number' ) {\r\n\t\treturn [ a[ selector ] ];\r\n\t}\r\n\r\n\t// Perform a jQuery selector on the table nodes\r\n\tvar nodes = $.map( a, function (el, i) {\r\n\t\treturn el.nTable;\r\n\t} );\r\n\r\n\treturn $(nodes)\r\n\t\t.filter( selector )\r\n\t\t.map( function (i) {\r\n\t\t\t// Need to translate back from the table node to the settings\r\n\t\t\tvar idx = $.inArray( this, nodes );\r\n\t\t\treturn a[ idx ];\r\n\t\t} )\r\n\t\t.toArray();\r\n};\r\n\r\n\r\n\r\n/**\r\n * Context selector for the API's context (i.e. the tables the API instance\r\n * refers to.\r\n *\r\n * @name    DataTable.Api#tables\r\n * @param {string|integer} [selector] Selector to pick which tables the iterator\r\n *   should operate on. If not given, all tables in the current context are\r\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\r\n *   select multiple tables or as an integer to select a single table.\r\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\r\n */\r\n_api_register( 'tables()', function ( selector ) {\r\n\t// A new instance is created if there was a selector specified\r\n\treturn selector !== undefined && selector !== null ?\r\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\r\n\t\tthis;\r\n} );\r\n\r\n\r\n_api_register( 'table()', function ( selector ) {\r\n\tvar tables = this.tables( selector );\r\n\tvar ctx = tables.context;\r\n\r\n\t// Truncate to the first matched table\r\n\treturn ctx.length ?\r\n\t\tnew _Api( ctx[0] ) :\r\n\t\ttables;\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTable;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().body()', 'table().body()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTBody;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().header()', 'table().header()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTHead;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTFoot;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTableWrapper;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Redraw the tables in the current context.\r\n */\r\n_api_register( 'draw()', function ( paging ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( paging === 'page' ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ( typeof paging === 'string' ) {\r\n\t\t\t\tpaging = paging === 'full-hold' ?\r\n\t\t\t\t\tfalse :\r\n\t\t\t\t\ttrue;\r\n\t\t\t}\r\n\r\n\t\t\t_fnReDraw( settings, paging===false );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Get the current page index.\r\n *\r\n * @return {integer} Current page index (zero based)\r\n *//**\r\n * Set the current page.\r\n *\r\n * Note that if you attempt to show a page which does not exist, DataTables will\r\n * not throw an error, but rather reset the paging.\r\n *\r\n * @param {integer|string} action The paging action to take. This can be one of:\r\n *  * `integer` - The page index to jump to\r\n *  * `string` - An action to take:\r\n *    * `first` - Jump to first page.\r\n *    * `next` - Jump to the next page\r\n *    * `previous` - Jump to previous page\r\n *    * `last` - Jump to the last page.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'page()', function ( action ) {\r\n\tif ( action === undefined ) {\r\n\t\treturn this.page.info().page; // not an expensive call\r\n\t}\r\n\r\n\t// else, have an action to take on all tables\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnPageChange( settings, action );\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Paging information for the first table in the current context.\r\n *\r\n * If you require paging information for another table, use the `table()` method\r\n * with a suitable selector.\r\n *\r\n * @return {object} Object with the following properties set:\r\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\r\n *  * `pages` - Total number of pages\r\n *  * `start` - Display index for the first record shown on the current page\r\n *  * `end` - Display index for the last record shown on the current page\r\n *  * `length` - Display length (number of records). Note that generally `start\r\n *    + length = end`, but this is not always true, for example if there are\r\n *    only 2 records to show on the final page, with a length of 10.\r\n *  * `recordsTotal` - Full data set length\r\n *  * `recordsDisplay` - Data set length once the current filtering criterion\r\n *    are applied.\r\n */\r\n_api_register( 'page.info()', function ( action ) {\r\n\tif ( this.context.length === 0 ) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tvar\r\n\t\tsettings   = this.context[0],\r\n\t\tstart      = settings._iDisplayStart,\r\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\r\n\t\tvisRecords = settings.fnRecordsDisplay(),\r\n\t\tall        = len === -1;\r\n\r\n\treturn {\r\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\r\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\r\n\t\t\"start\":          start,\r\n\t\t\"end\":            settings.fnDisplayEnd(),\r\n\t\t\"length\":         len,\r\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\r\n\t\t\"recordsDisplay\": visRecords,\r\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\r\n\t};\r\n} );\r\n\r\n\r\n/**\r\n * Get the current page length.\r\n *\r\n * @return {integer} Current page length. Note `-1` indicates that all records\r\n *   are to be shown.\r\n *//**\r\n * Set the current page length.\r\n *\r\n * @param {integer} Page length to set. Use `-1` to show all records.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'page.len()', function ( len ) {\r\n\t// Note that we can't call this function 'length()' because `length`\r\n\t// is a Javascript property of functions which defines how many arguments\r\n\t// the function expects.\r\n\tif ( len === undefined ) {\r\n\t\treturn this.context.length !== 0 ?\r\n\t\t\tthis.context[0]._iDisplayLength :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// else, set the page length\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnLengthChange( settings, len );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\nvar __reload = function ( settings, holdPosition, callback ) {\r\n\t// Use the draw event to trigger a callback\r\n\tif ( callback ) {\r\n\t\tvar api = new _Api( settings );\r\n\r\n\t\tapi.one( 'draw', function () {\r\n\t\t\tcallback( api.ajax.json() );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\r\n\t\t_fnReDraw( settings, holdPosition );\r\n\t}\r\n\telse {\r\n\t\t_fnProcessingDisplay( settings, true );\r\n\r\n\t\t// Cancel an existing request\r\n\t\tvar xhr = settings.jqXHR;\r\n\t\tif ( xhr && xhr.readyState !== 4 ) {\r\n\t\t\txhr.abort();\r\n\t\t}\r\n\r\n\t\t// Trigger xhr\r\n\t\t_fnBuildAjax( settings, [], function( json ) {\r\n\t\t\t_fnClearTable( settings );\r\n\r\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\t_fnAddData( settings, data[i] );\r\n\t\t\t}\r\n\r\n\t\t\t_fnReDraw( settings, holdPosition );\r\n\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Get the JSON response from the last Ajax request that DataTables made to the\r\n * server. Note that this returns the JSON from the first table in the current\r\n * context.\r\n *\r\n * @return {object} JSON received from the server.\r\n */\r\n_api_register( 'ajax.json()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length > 0 ) {\r\n\t\treturn ctx[0].json;\r\n\t}\r\n\r\n\t// else return undefined;\r\n} );\r\n\r\n\r\n/**\r\n * Get the data submitted in the last Ajax request\r\n */\r\n_api_register( 'ajax.params()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length > 0 ) {\r\n\t\treturn ctx[0].oAjaxData;\r\n\t}\r\n\r\n\t// else return undefined;\r\n} );\r\n\r\n\r\n/**\r\n * Reload tables from the Ajax data source. Note that this function will\r\n * automatically re-draw the table when the remote data has been loaded.\r\n *\r\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\r\n *   position. A full re-sort and re-filter is performed when this method is\r\n *   called, which is why the pagination reset is the default action.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\r\n\treturn this.iterator( 'table', function (settings) {\r\n\t\t__reload( settings, resetPaging===false, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Get the current Ajax URL. Note that this returns the URL from the first\r\n * table in the current context.\r\n *\r\n * @return {string} Current Ajax source URL\r\n *//**\r\n * Set the Ajax URL. Note that this will set the URL for all tables in the\r\n * current context.\r\n *\r\n * @param {string} url URL to set.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.url()', function ( url ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( url === undefined ) {\r\n\t\t// get\r\n\t\tif ( ctx.length === 0 ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tctx = ctx[0];\r\n\r\n\t\treturn ctx.ajax ?\r\n\t\t\t$.isPlainObject( ctx.ajax ) ?\r\n\t\t\t\tctx.ajax.url :\r\n\t\t\t\tctx.ajax :\r\n\t\t\tctx.sAjaxSource;\r\n\t}\r\n\r\n\t// set\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\r\n\t\t\tsettings.ajax.url = url;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsettings.ajax = url;\r\n\t\t}\r\n\t\t// No need to consider sAjaxSource here since DataTables gives priority\r\n\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\r\n\t\t// value of `sAjaxSource` redundant.\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Load data from the newly set Ajax URL. Note that this method is only\r\n * available when `ajax.url()` is used to set a URL. Additionally, this method\r\n * has the same effect as calling `ajax.reload()` but is provided for\r\n * convenience when setting a new URL. Like `ajax.reload()` it will\r\n * automatically redraw the table once the remote data has been loaded.\r\n *\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\r\n\t// Same as a reload, but makes sense to present it for easy access after a\r\n\t// url change\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\t__reload( ctx, resetPaging===false, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n\r\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\r\n{\r\n\tvar\r\n\t\tout = [], res,\r\n\t\ta, i, ien, j, jen,\r\n\t\tselectorType = typeof selector;\r\n\r\n\t// Can't just check for isArray here, as an API or jQuery instance might be\r\n\t// given with their array like look\r\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\r\n\t\tselector = [ selector ];\r\n\t}\r\n\r\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\r\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\r\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\r\n\t\t\tselector[i].split(',') :\r\n\t\t\t[ selector[i] ];\r\n\r\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\r\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\r\n\r\n\t\t\tif ( res && res.length ) {\r\n\t\t\t\tout = out.concat( res );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// selector extensions\r\n\tvar ext = _ext.selector[ type ];\r\n\tif ( ext.length ) {\r\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n\t\t\tout = ext[i]( settings, opts, out );\r\n\t\t}\r\n\t}\r\n\r\n\treturn _unique( out );\r\n};\r\n\r\n\r\nvar _selector_opts = function ( opts )\r\n{\r\n\tif ( ! opts ) {\r\n\t\topts = {};\r\n\t}\r\n\r\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\r\n\t// than search\r\n\tif ( opts.filter && opts.search === undefined ) {\r\n\t\topts.search = opts.filter;\r\n\t}\r\n\r\n\treturn $.extend( {\r\n\t\tsearch: 'none',\r\n\t\torder: 'current',\r\n\t\tpage: 'all'\r\n\t}, opts );\r\n};\r\n\r\n\r\nvar _selector_first = function ( inst )\r\n{\r\n\t// Reduce the API instance to the first item found\r\n\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\r\n\t\tif ( inst[i].length > 0 ) {\r\n\t\t\t// Assign the first element to the first item in the instance\r\n\t\t\t// and truncate the instance and context\r\n\t\t\tinst[0] = inst[i];\r\n\t\t\tinst[0].length = 1;\r\n\t\t\tinst.length = 1;\r\n\t\t\tinst.context = [ inst.context[i] ];\r\n\r\n\t\t\treturn inst;\r\n\t\t}\r\n\t}\r\n\r\n\t// Not found - return an empty instance\r\n\tinst.length = 0;\r\n\treturn inst;\r\n};\r\n\r\n\r\nvar _selector_row_indexes = function ( settings, opts )\r\n{\r\n\tvar\r\n\t\ti, ien, tmp, a=[],\r\n\t\tdisplayFiltered = settings.aiDisplay,\r\n\t\tdisplayMaster = settings.aiDisplayMaster;\r\n\r\n\tvar\r\n\t\tsearch = opts.search,  // none, applied, removed\r\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\r\n\t\tpage   = opts.page;    // all, current\r\n\r\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\r\n\t\t// In server-side processing mode, most options are irrelevant since\r\n\t\t// rows not shown don't exist and the index order is the applied order\r\n\t\t// Removed is a special case - for consistency just return an empty\r\n\t\t// array\r\n\t\treturn search === 'removed' ?\r\n\t\t\t[] :\r\n\t\t\t_range( 0, displayMaster.length );\r\n\t}\r\n\telse if ( page == 'current' ) {\r\n\t\t// Current page implies that order=current and filter=applied, since it is\r\n\t\t// fairly senseless otherwise, regardless of what order and search actually\r\n\t\t// are\r\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\r\n\t\t\ta.push( displayFiltered[i] );\r\n\t\t}\r\n\t}\r\n\telse if ( order == 'current' || order == 'applied' ) {\r\n\t\tif ( search == 'none') {\r\n\t\t\ta = displayMaster.slice();\r\n\t\t}\r\n\t\telse if ( search == 'applied' ) {\r\n\t\t\ta = displayFiltered.slice();\r\n\t\t}\r\n\t\telse if ( search == 'removed' ) {\r\n\t\t\t// O(n+m) solution by creating a hash map\r\n\t\t\tvar displayFilteredMap = {};\r\n\r\n\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\r\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\r\n\t\t\t}\r\n\r\n\t\t\ta = $.map( displayMaster, function (el) {\r\n\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\r\n\t\t\t\t\tel :\r\n\t\t\t\t\tnull;\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\telse if ( order == 'index' || order == 'original' ) {\r\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\t\tif ( search == 'none' ) {\r\n\t\t\t\ta.push( i );\r\n\t\t\t}\r\n\t\t\telse { // applied | removed\r\n\t\t\t\ttmp = $.inArray( i, displayFiltered );\r\n\r\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\r\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\r\n\t\t\t\t{\r\n\t\t\t\t\ta.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a;\r\n};\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Rows\r\n *\r\n * {}          - no selector - use all available rows\r\n * {integer}   - row aoData index\r\n * {node}      - TR node\r\n * {string}    - jQuery selector to apply to the TR elements\r\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\r\n *\r\n */\r\nvar __row_selector = function ( settings, selector, opts )\r\n{\r\n\tvar rows;\r\n\tvar run = function ( sel ) {\r\n\t\tvar selInt = _intVal( sel );\r\n\t\tvar i, ien;\r\n\t\tvar aoData = settings.aoData;\r\n\r\n\t\t// Short cut - selector is a number and no options provided (default is\r\n\t\t// all records, so no need to check if the index is in there, since it\r\n\t\t// must be - dev error if the index doesn't exist).\r\n\t\tif ( selInt !== null && ! opts ) {\r\n\t\t\treturn [ selInt ];\r\n\t\t}\r\n\r\n\t\tif ( ! rows ) {\r\n\t\t\trows = _selector_row_indexes( settings, opts );\r\n\t\t}\r\n\r\n\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\r\n\t\t\t// Selector - integer\r\n\t\t\treturn [ selInt ];\r\n\t\t}\r\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\r\n\t\t\t// Selector - none\r\n\t\t\treturn rows;\r\n\t\t}\r\n\r\n\t\t// Selector - function\r\n\t\tif ( typeof sel === 'function' ) {\r\n\t\t\treturn $.map( rows, function (idx) {\r\n\t\t\t\tvar row = aoData[ idx ];\r\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Selector - node\r\n\t\tif ( sel.nodeName ) {\r\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\r\n\t\t\tvar cellIdx = sel._DT_CellIndex;\r\n\r\n\t\t\tif ( rowIdx !== undefined ) {\r\n\t\t\t\t// Make sure that the row is actually still present in the table\r\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\r\n\t\t\t\t\t[ rowIdx ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t\telse if ( cellIdx ) {\r\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\r\n\t\t\t\t\t[ cellIdx.row ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\r\n\t\t\t\treturn host.length ?\r\n\t\t\t\t\t[ host.data('dt-row') ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ID selector. Want to always be able to select rows by id, regardless\r\n\t\t// of if the tr element has been created or not, so can't rely upon\r\n\t\t// jQuery here - hence a custom implementation. This does not match\r\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\r\n\t\t// but to select it using a CSS selector engine (like Sizzle or\r\n\t\t// querySelect) it would need to need to be escaped for some characters.\r\n\t\t// DataTables simplifies this for row selectors since you can select\r\n\t\t// only a row. A # indicates an id any anything that follows is the id -\r\n\t\t// unescaped.\r\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\r\n\t\t\t// get row index from id\r\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\r\n\t\t\tif ( rowObj !== undefined ) {\r\n\t\t\t\treturn [ rowObj.idx ];\r\n\t\t\t}\r\n\r\n\t\t\t// need to fall through to jQuery in case there is DOM id that\r\n\t\t\t// matches\r\n\t\t}\r\n\t\t\r\n\t\t// Get nodes in the order from the `rows` array with null values removed\r\n\t\tvar nodes = _removeEmpty(\r\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\r\n\t\t);\r\n\r\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\r\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\r\n\t\t// it also allows arrays, so this will cope with all three options\r\n\t\treturn $(nodes)\r\n\t\t\t.filter( sel )\r\n\t\t\t.map( function () {\r\n\t\t\t\treturn this._DT_RowIndex;\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\t};\r\n\r\n\treturn _selector_run( 'row', selector, run, settings, opts );\r\n};\r\n\r\n\r\n_api_register( 'rows()', function ( selector, opts ) {\r\n\t// argument shifting\r\n\tif ( selector === undefined ) {\r\n\t\tselector = '';\r\n\t}\r\n\telse if ( $.isPlainObject( selector ) ) {\r\n\t\topts = selector;\r\n\t\tselector = '';\r\n\t}\r\n\r\n\topts = _selector_opts( opts );\r\n\r\n\tvar inst = this.iterator( 'table', function ( settings ) {\r\n\t\treturn __row_selector( settings, selector, opts );\r\n\t}, 1 );\r\n\r\n\t// Want argument shifting here and in __row_selector?\r\n\tinst.selector.rows = selector;\r\n\tinst.selector.opts = opts;\r\n\r\n\treturn inst;\r\n} );\r\n\r\n_api_register( 'rows().nodes()', function () {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\treturn settings.aoData[ row ].nTr || undefined;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'rows().data()', function () {\r\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\tvar r = settings.aoData[ row ];\r\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\t_fnInvalidate( settings, row, src );\r\n\t} );\r\n} );\r\n\r\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\treturn row;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\r\n\tvar a = [];\r\n\tvar context = this.context;\r\n\r\n\t// `iterator` will drop undefined values, but in this case we want them\r\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\r\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\r\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\r\n\t\t}\r\n\t}\r\n\r\n\treturn new _Api( context, a );\r\n} );\r\n\r\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\r\n\tvar that = this;\r\n\r\n\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\r\n\t\tvar data = settings.aoData;\r\n\t\tvar rowData = data[ row ];\r\n\t\tvar i, ien, j, jen;\r\n\t\tvar loopRow, loopCells;\r\n\r\n\t\tdata.splice( row, 1 );\r\n\r\n\t\t// Update the cached indexes\r\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\tloopRow = data[i];\r\n\t\t\tloopCells = loopRow.anCells;\r\n\r\n\t\t\t// Rows\r\n\t\t\tif ( loopRow.nTr !== null ) {\r\n\t\t\t\tloopRow.nTr._DT_RowIndex = i;\r\n\t\t\t}\r\n\r\n\t\t\t// Cells\r\n\t\t\tif ( loopCells !== null ) {\r\n\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\r\n\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Delete from the display arrays\r\n\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\r\n\t\t_fnDeleteIndex( settings.aiDisplay, row );\r\n\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\r\n\r\n\t\t// For server-side processing tables - subtract the deleted row from the count\r\n\t\tif ( settings._iRecordsDisplay > 0 ) {\r\n\t\t\tsettings._iRecordsDisplay--;\r\n\t\t}\r\n\r\n\t\t// Check for an 'overflow' they case for displaying the table\r\n\t\t_fnLengthOverflow( settings );\r\n\r\n\t\t// Remove the row's ID reference if there is one\r\n\t\tvar id = settings.rowIdFn( rowData._aData );\r\n\t\tif ( id !== undefined ) {\r\n\t\t\tdelete settings.aIds[ id ];\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.iterator( 'table', function ( settings ) {\r\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\t\tsettings.aoData[i].idx = i;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( 'rows.add()', function ( rows ) {\r\n\tvar newRows = this.iterator( 'table', function ( settings ) {\r\n\t\t\tvar row, i, ien;\r\n\t\t\tvar out = [];\r\n\r\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = rows[i];\r\n\r\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn out;\r\n\t\t}, 1 );\r\n\r\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\r\n\tvar modRows = this.rows( -1 );\r\n\tmodRows.pop();\r\n\t$.merge( modRows, newRows );\r\n\r\n\treturn modRows;\r\n} );\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_api_register( 'row()', function ( selector, opts ) {\r\n\treturn _selector_first( this.rows( selector, opts ) );\r\n} );\r\n\r\n\r\n_api_register( 'row().data()', function ( data ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// Get\r\n\t\treturn ctx.length && this.length ?\r\n\t\t\tctx[0].aoData[ this[0] ]._aData :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// Set\r\n\tvar row = ctx[0].aoData[ this[0] ];\r\n\trow._aData = data;\r\n\r\n\t// If the DOM has an id, and the data source is an array\r\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\r\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\r\n\t}\r\n\r\n\t// Automatically invalidate\r\n\t_fnInvalidate( ctx[0], this[0], 'data' );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( 'row().node()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\treturn ctx.length && this.length ?\r\n\t\tctx[0].aoData[ this[0] ].nTr || null :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'row.add()', function ( row ) {\r\n\t// Allow a jQuery object to be passed in - only a single row is added from\r\n\t// it though - the first element in the set\r\n\tif ( row instanceof $ && row.length ) {\r\n\t\trow = row[0];\r\n\t}\r\n\r\n\tvar rows = this.iterator( 'table', function ( settings ) {\r\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n\t\t\treturn _fnAddTr( settings, row )[0];\r\n\t\t}\r\n\t\treturn _fnAddData( settings, row );\r\n\t} );\r\n\r\n\t// Return an Api.rows() extended instance, with the newly added row selected\r\n\treturn this.row( rows[0] );\r\n} );\r\n\r\n\r\n$(document).on('plugin-init.dt', function (e, context) {\r\n\tvar api = new _Api( context );\r\n\tvar namespace = 'on-plugin-init';\r\n\tvar stateSaveParamsEvent = 'stateSaveParams.' + namespace;\r\n\tvar destroyEvent = 'destroy. ' + namespace;\r\n\r\n\tapi.on( stateSaveParamsEvent, function ( e, settings, d ) {\r\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\r\n\t\t// internal loop\r\n\t\tvar idFn = settings.rowIdFn;\r\n\t\tvar data = settings.aoData;\r\n\t\tvar ids = [];\r\n\r\n\t\tfor (var i=0 ; i<data.length ; i++) {\r\n\t\t\tif (data[i]._detailsShow) {\r\n\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\td.childRows = ids;\r\n\t});\r\n\r\n\tapi.on( destroyEvent, function () {\r\n\t\tapi.off(stateSaveParamsEvent + ' ' + destroyEvent);\r\n\t});\r\n\r\n\tvar loaded = api.state.loaded();\r\n\r\n\tif ( loaded && loaded.childRows ) {\r\n\t\tapi\r\n\t\t\t.rows( $.map(loaded.childRows, function (id){\r\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\r\n\t\t\t}) )\r\n\t\t\t.every( function () {\r\n\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\r\n\t\t\t});\r\n\t}\r\n});\r\n\r\nvar __details_add = function ( ctx, row, data, klass )\r\n{\r\n\t// Convert to array of TR elements\r\n\tvar rows = [];\r\n\tvar addRow = function ( r, k ) {\r\n\t\t// Recursion to allow for arrays of jQuery objects\r\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\r\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\r\n\t\t\t\taddRow( r[i], k );\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If we get a TR element, then just add it directly - up to the dev\r\n\t\t// to add the correct number of columns etc\r\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\r\n\t\t\trows.push( r );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Otherwise create a row with a wrapper\r\n\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\r\n\t\t\t$('td', created)\r\n\t\t\t\t.addClass( k )\r\n\t\t\t\t.html( r )\r\n\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\r\n\r\n\t\t\trows.push( created[0] );\r\n\t\t}\r\n\t};\r\n\r\n\taddRow( data, klass );\r\n\r\n\tif ( row._details ) {\r\n\t\trow._details.detach();\r\n\t}\r\n\r\n\trow._details = $(rows);\r\n\r\n\t// If the children were already shown, that state should be retained\r\n\tif ( row._detailsShow ) {\r\n\t\trow._details.insertAfter( row.nTr );\r\n\t}\r\n};\r\n\r\n\r\n// Make state saving of child row details async to allow them to be batch processed\r\nvar __details_state = DataTable.util.throttle(\r\n\tfunction (ctx) {\r\n\t\t_fnSaveState( ctx[0] )\r\n\t},\r\n\t500\r\n);\r\n\r\n\r\nvar __details_remove = function ( api, idx )\r\n{\r\n\tvar ctx = api.context;\r\n\r\n\tif ( ctx.length ) {\r\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\r\n\r\n\t\tif ( row && row._details ) {\r\n\t\t\trow._details.remove();\r\n\r\n\t\t\trow._detailsShow = undefined;\r\n\t\t\trow._details = undefined;\r\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\r\n\t\t\t__details_state( ctx );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar __details_display = function ( api, show ) {\r\n\tvar ctx = api.context;\r\n\r\n\tif ( ctx.length && api.length ) {\r\n\t\tvar row = ctx[0].aoData[ api[0] ];\r\n\r\n\t\tif ( row._details ) {\r\n\t\t\trow._detailsShow = show;\r\n\r\n\t\t\tif ( show ) {\r\n\t\t\t\trow._details.insertAfter( row.nTr );\r\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trow._details.detach();\r\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\r\n\t\t\t}\r\n\r\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\r\n\r\n\t\t\t__details_events( ctx[0] );\r\n\t\t\t__details_state( ctx );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar __details_events = function ( settings )\r\n{\r\n\tvar api = new _Api( settings );\r\n\tvar namespace = '.dt.DT_details';\r\n\tvar drawEvent = 'draw'+namespace;\r\n\tvar colvisEvent = 'column-sizing'+namespace;\r\n\tvar destroyEvent = 'destroy'+namespace;\r\n\tvar data = settings.aoData;\r\n\r\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\r\n\r\n\tif ( _pluck( data, '_details' ).length > 0 ) {\r\n\t\t// On each draw, insert the required elements into the document\r\n\t\tapi.on( drawEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\r\n\t\t\t\t// Internal data grab\r\n\t\t\t\tvar row = data[ idx ];\r\n\r\n\t\t\t\tif ( row._detailsShow ) {\r\n\t\t\t\t\trow._details.insertAfter( row.nTr );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\t// Column visibility change - update the colspan\r\n\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the colspan for the details rows (note, only if it already has\r\n\t\t\t// a colspan)\r\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\r\n\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = data[i];\r\n\r\n\t\t\t\tif ( row._details ) {\r\n\t\t\t\t\trow._details.each(function () {\r\n\t\t\t\t\t\tvar el = $(this).children('td');\r\n\r\n\t\t\t\t\t\tif (el.length == 1) {\r\n\t\t\t\t\t\t\tel.attr('colspan', visible);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Table destroyed - nuke any child rows\r\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\tif ( data[i]._details ) {\r\n\t\t\t\t\t__details_remove( api, i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n// Strings for the method names to help minification\r\nvar _emp = '';\r\nvar _child_obj = _emp+'row().child';\r\nvar _child_mth = _child_obj+'()';\r\n\r\n// data can be:\r\n//  tr\r\n//  string\r\n//  jQuery or array of any of the above\r\n_api_register( _child_mth, function ( data, klass ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length && this.length ?\r\n\t\t\tctx[0].aoData[ this[0] ]._details :\r\n\t\t\tundefined;\r\n\t}\r\n\telse if ( data === true ) {\r\n\t\t// show\r\n\t\tthis.child.show();\r\n\t}\r\n\telse if ( data === false ) {\r\n\t\t// remove\r\n\t\t__details_remove( this );\r\n\t}\r\n\telse if ( ctx.length && this.length ) {\r\n\t\t// set\r\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\r\n\t}\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.show()',\r\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\r\n], function ( show ) {   // it returns an object and this method is not executed)\r\n\t__details_display( this, true );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.hide()',\r\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\r\n], function () {         // it returns an object and this method is not executed)\r\n\t__details_display( this, false );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.remove()',\r\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\r\n], function () {           // it returns an object and this method is not executed)\r\n\t__details_remove( this );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( _child_obj+'.isShown()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length && this.length ) {\r\n\t\t// _detailsShown as false or undefined will fall through to return false\r\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\r\n\t}\r\n\treturn false;\r\n} );\r\n\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Columns\r\n *\r\n * {integer}           - column index (>=0 count from left, <0 count from right)\r\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\r\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\r\n * \"{string}:name\"     - column name\r\n * \"{string}\"          - jQuery selector on column header nodes\r\n *\r\n */\r\n\r\n// can be an array of these items, comma separated list, or an array of comma\r\n// separated lists\r\n\r\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\r\n\r\n\r\n// r1 and r2 are redundant - but it means that the parameters match for the\r\n// iterator callback in columns().data()\r\nvar __columnData = function ( settings, column, r1, r2, rows ) {\r\n\tvar a = [];\r\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\r\n\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\r\n\t}\r\n\treturn a;\r\n};\r\n\r\n\r\nvar __column_selector = function ( settings, selector, opts )\r\n{\r\n\tvar\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tnames = _pluck( columns, 'sName' ),\r\n\t\tnodes = _pluck( columns, 'nTh' );\r\n\r\n\tvar run = function ( s ) {\r\n\t\tvar selInt = _intVal( s );\r\n\r\n\t\t// Selector - all\r\n\t\tif ( s === '' ) {\r\n\t\t\treturn _range( columns.length );\r\n\t\t}\r\n\r\n\t\t// Selector - index\r\n\t\tif ( selInt !== null ) {\r\n\t\t\treturn [ selInt >= 0 ?\r\n\t\t\t\tselInt : // Count from left\r\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// Selector = function\r\n\t\tif ( typeof s === 'function' ) {\r\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\r\n\r\n\t\t\treturn $.map( columns, function (col, idx) {\r\n\t\t\t\treturn s(\r\n\t\t\t\t\t\tidx,\r\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\r\n\t\t\t\t\t\tnodes[ idx ]\r\n\t\t\t\t\t) ? idx : null;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// jQuery or string selector\r\n\t\tvar match = typeof s === 'string' ?\r\n\t\t\ts.match( __re_column_selector ) :\r\n\t\t\t'';\r\n\r\n\t\tif ( match ) {\r\n\t\t\tswitch( match[2] ) {\r\n\t\t\t\tcase 'visIdx':\r\n\t\t\t\tcase 'visible':\r\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\r\n\t\t\t\t\t// Visible index given, convert to column index\r\n\t\t\t\t\tif ( idx < 0 ) {\r\n\t\t\t\t\t\t// Counting from the right\r\n\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\r\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Counting from the left\r\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\r\n\r\n\t\t\t\tcase 'name':\r\n\t\t\t\t\t// match by name. `names` is column index complete and in order\r\n\t\t\t\t\treturn $.map( names, function (name, i) {\r\n\t\t\t\t\t\treturn name === match[1] ? i : null;\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cell in the table body\r\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\r\n\t\t\treturn [ s._DT_CellIndex.column ];\r\n\t\t}\r\n\r\n\t\t// jQuery selector on the TH elements for the columns\r\n\t\tvar jqResult = $( nodes )\r\n\t\t\t.filter( s )\r\n\t\t\t.map( function () {\r\n\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\r\n\t\tif ( jqResult.length || ! s.nodeName ) {\r\n\t\t\treturn jqResult;\r\n\t\t}\r\n\r\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\r\n\t\t// a child or such an element\r\n\t\tvar host = $(s).closest('*[data-dt-column]');\r\n\t\treturn host.length ?\r\n\t\t\t[ host.data('dt-column') ] :\r\n\t\t\t[];\r\n\t};\r\n\r\n\treturn _selector_run( 'column', selector, run, settings, opts );\r\n};\r\n\r\n\r\nvar __setColumnVis = function ( settings, column, vis ) {\r\n\tvar\r\n\t\tcols = settings.aoColumns,\r\n\t\tcol  = cols[ column ],\r\n\t\tdata = settings.aoData,\r\n\t\trow, cells, i, ien, tr;\r\n\r\n\t// Get\r\n\tif ( vis === undefined ) {\r\n\t\treturn col.bVisible;\r\n\t}\r\n\r\n\t// Set\r\n\t// No change\r\n\tif ( col.bVisible === vis ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( vis ) {\r\n\t\t// Insert column\r\n\t\t// Need to decide if we should use appendChild or insertBefore\r\n\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\r\n\r\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\ttr = data[i].nTr;\r\n\t\t\tcells = data[i].anCells;\r\n\r\n\t\t\tif ( tr ) {\r\n\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\r\n\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Remove column\r\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\r\n\t}\r\n\r\n\t// Common actions\r\n\tcol.bVisible = vis;\r\n};\r\n\r\n\r\n_api_register( 'columns()', function ( selector, opts ) {\r\n\t// argument shifting\r\n\tif ( selector === undefined ) {\r\n\t\tselector = '';\r\n\t}\r\n\telse if ( $.isPlainObject( selector ) ) {\r\n\t\topts = selector;\r\n\t\tselector = '';\r\n\t}\r\n\r\n\topts = _selector_opts( opts );\r\n\r\n\tvar inst = this.iterator( 'table', function ( settings ) {\r\n\t\treturn __column_selector( settings, selector, opts );\r\n\t}, 1 );\r\n\r\n\t// Want argument shifting here and in _row_selector?\r\n\tinst.selector.cols = selector;\r\n\tinst.selector.opts = opts;\r\n\r\n\treturn inst;\r\n} );\r\n\r\n_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].nTh;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].nTf;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\r\n\treturn this.iterator( 'column-rows', __columnData, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].mData;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows,\r\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\r\n\t\t);\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\r\n\tvar that = this;\r\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\r\n\t\tif ( vis === undefined ) {\r\n\t\t\treturn settings.aoColumns[ column ].bVisible;\r\n\t\t} // else\r\n\t\t__setColumnVis( settings, column, vis );\r\n\t} );\r\n\r\n\t// Group the column visibility changes\r\n\tif ( vis !== undefined ) {\r\n\t\tthis.iterator( 'table', function ( settings ) {\r\n\t\t\t// Redraw the header after changes\r\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\r\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\r\n\t\r\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\r\n\t\t\t// listeners to do this - only need to update the empty table item here\r\n\t\t\tif ( ! settings.aiDisplay.length ) {\r\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\r\n\t\t\t}\r\n\t\r\n\t\t\t_fnSaveState( settings );\r\n\r\n\t\t\t// Second loop once the first is done for events\r\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\r\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\r\n\t\t\t} );\r\n\r\n\t\t\tif ( calc === undefined || calc ) {\r\n\t\t\t\tthat.columns.adjust();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn ret;\r\n} );\r\n\r\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn type === 'visible' ?\r\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\r\n\t\t\tcolumn;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'columns.adjust()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'column.index()', function ( type, idx ) {\r\n\tif ( this.context.length !== 0 ) {\r\n\t\tvar ctx = this.context[0];\r\n\r\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\r\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\r\n\t\t}\r\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\r\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n_api_register( 'column()', function ( selector, opts ) {\r\n\treturn _selector_first( this.columns( selector, opts ) );\r\n} );\r\n\r\nvar __cell_selector = function ( settings, selector, opts )\r\n{\r\n\tvar data = settings.aoData;\r\n\tvar rows = _selector_row_indexes( settings, opts );\r\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\r\n\tvar allCells = $(_flatten( [], cells ));\r\n\tvar row;\r\n\tvar columns = settings.aoColumns.length;\r\n\tvar a, i, ien, j, o, host;\r\n\r\n\tvar run = function ( s ) {\r\n\t\tvar fnSelector = typeof s === 'function';\r\n\r\n\t\tif ( s === null || s === undefined || fnSelector ) {\r\n\t\t\t// All cells and function selectors\r\n\t\t\ta = [];\r\n\r\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = rows[i];\r\n\r\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\r\n\t\t\t\t\to = {\r\n\t\t\t\t\t\trow: row,\r\n\t\t\t\t\t\tcolumn: j\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( fnSelector ) {\r\n\t\t\t\t\t\t// Selector - function\r\n\t\t\t\t\t\thost = data[ row ];\r\n\r\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\r\n\t\t\t\t\t\t\ta.push( o );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// Selector - all\r\n\t\t\t\t\t\ta.push( o );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\t\r\n\t\t// Selector - index\r\n\t\tif ( $.isPlainObject( s ) ) {\r\n\t\t\t// Valid cell index and its in the array of selectable rows\r\n\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\r\n\t\t\t\t[s] :\r\n\t\t\t\t[];\r\n\t\t}\r\n\r\n\t\t// Selector - jQuery filtered cells\r\n\t\tvar jqResult = allCells\r\n\t\t\t.filter( s )\r\n\t\t\t.map( function (i, el) {\r\n\t\t\t\treturn { // use a new object, in case someone changes the values\r\n\t\t\t\t\trow:    el._DT_CellIndex.row,\r\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\r\n \t\t\t\t};\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\r\n\t\tif ( jqResult.length || ! s.nodeName ) {\r\n\t\t\treturn jqResult;\r\n\t\t}\r\n\r\n\t\t// Otherwise the selector is a node, and there is one last option - the\r\n\t\t// element might be a child of an element which has dt-row and dt-column\r\n\t\t// data attributes\r\n\t\thost = $(s).closest('*[data-dt-row]');\r\n\t\treturn host.length ?\r\n\t\t\t[ {\r\n\t\t\t\trow: host.data('dt-row'),\r\n\t\t\t\tcolumn: host.data('dt-column')\r\n\t\t\t} ] :\r\n\t\t\t[];\r\n\t};\r\n\r\n\treturn _selector_run( 'cell', selector, run, settings, opts );\r\n};\r\n\r\n\r\n\r\n\r\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\r\n\t// Argument shifting\r\n\tif ( $.isPlainObject( rowSelector ) ) {\r\n\t\t// Indexes\r\n\t\tif ( rowSelector.row === undefined ) {\r\n\t\t\t// Selector options in first parameter\r\n\t\t\topts = rowSelector;\r\n\t\t\trowSelector = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Cell index objects in first parameter\r\n\t\t\topts = columnSelector;\r\n\t\t\tcolumnSelector = null;\r\n\t\t}\r\n\t}\r\n\tif ( $.isPlainObject( columnSelector ) ) {\r\n\t\topts = columnSelector;\r\n\t\tcolumnSelector = null;\r\n\t}\r\n\r\n\t// Cell selector\r\n\tif ( columnSelector === null || columnSelector === undefined ) {\r\n\t\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\r\n\t\t} );\r\n\t}\r\n\r\n\t// The default built in options need to apply to row and columns\r\n\tvar internalOpts = opts ? {\r\n\t\tpage: opts.page,\r\n\t\torder: opts.order,\r\n\t\tsearch: opts.search\r\n\t} : {};\r\n\r\n\t// Row + column selector\r\n\tvar columns = this.columns( columnSelector, internalOpts );\r\n\tvar rows = this.rows( rowSelector, internalOpts );\r\n\tvar i, ien, j, jen;\r\n\r\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\r\n\t\tvar a = [];\r\n\r\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\r\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\r\n\t\t\t\ta.push( {\r\n\t\t\t\t\trow:    rows[idx][i],\r\n\t\t\t\t\tcolumn: columns[idx][j]\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t}, 1 );\r\n\r\n\t// There is currently only one extension which uses a cell selector extension\r\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\r\n\t// an extension specific check at the moment\r\n\tvar cells = opts && opts.selected ?\r\n\t\tthis.cells( cellsNoOpts, opts ) :\r\n\t\tcellsNoOpts;\r\n\r\n\t$.extend( cells.selector, {\r\n\t\tcols: columnSelector,\r\n\t\trows: rowSelector,\r\n\t\topts: opts\r\n\t} );\r\n\r\n\treturn cells;\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\tvar data = settings.aoData[ row ];\r\n\r\n\t\treturn data && data.anCells ?\r\n\t\t\tdata.anCells[ column ] :\r\n\t\t\tundefined;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_register( 'cells().data()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn _fnGetCellData( settings, row, column );\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\r\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\r\n\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn settings.aoData[ row ][ type ][ column ];\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn _fnGetCellData( settings, row, column, type );\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn {\r\n\t\t\trow: row,\r\n\t\t\tcolumn: column,\r\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\r\n\t\t};\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\t_fnInvalidate( settings, row, src, column );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\r\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\r\n} );\r\n\r\n\r\n_api_register( 'cell().data()', function ( data ) {\r\n\tvar ctx = this.context;\r\n\tvar cell = this[0];\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// Get\r\n\t\treturn ctx.length && cell.length ?\r\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// Set\r\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\r\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Get current ordering (sorting) that has been applied to the table.\r\n *\r\n * @returns {array} 2D array containing the sorting information for the first\r\n *   table in the current context. Each element in the parent array represents\r\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\r\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\r\n *   the column index that the sorting condition applies to, the second is the\r\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\r\n *   index of the sorting order from the `column.sorting` initialisation array.\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {integer} order Column index to sort upon.\r\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\r\n * @returns {DataTables.Api} this\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {array} order 1D array of sorting information to be applied.\r\n * @param {array} [...] Optional additional sorting conditions\r\n * @returns {DataTables.Api} this\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {array} order 2D array of sorting information to be applied.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'order()', function ( order, dir ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( order === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length !== 0 ?\r\n\t\t\tctx[0].aaSorting :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// set\r\n\tif ( typeof order === 'number' ) {\r\n\t\t// Simple column / direction passed in\r\n\t\torder = [ [ order, dir ] ];\r\n\t}\r\n\telse if ( order.length && ! Array.isArray( order[0] ) ) {\r\n\t\t// Arguments passed in (list of 1D arrays)\r\n\t\torder = Array.prototype.slice.call( arguments );\r\n\t}\r\n\t// otherwise a 2D array was passed in\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tsettings.aaSorting = order.slice();\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Attach a sort listener to an element for a given column\r\n *\r\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\r\n *   listener to. This can take the form of a single DOM node, a jQuery\r\n *   collection of nodes or a jQuery selector which will identify the node(s).\r\n * @param {integer} column the column that a click on this node will sort on\r\n * @param {function} [callback] callback function when sort is run\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'order.listener()', function ( node, column, callback ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnSortAttachListener( settings, node, column, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'order.fixed()', function ( set ) {\r\n\tif ( ! set ) {\r\n\t\tvar ctx = this.context;\r\n\t\tvar fixed = ctx.length ?\r\n\t\t\tctx[0].aaSortingFixed :\r\n\t\t\tundefined;\r\n\r\n\t\treturn Array.isArray( fixed ) ?\r\n\t\t\t{ pre: fixed } :\r\n\t\t\tfixed;\r\n\t}\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\r\n\t} );\r\n} );\r\n\r\n\r\n// Order by the selected column(s)\r\n_api_register( [\r\n\t'columns().order()',\r\n\t'column().order()'\r\n], function ( dir ) {\r\n\tvar that = this;\r\n\r\n\treturn this.iterator( 'table', function ( settings, i ) {\r\n\t\tvar sort = [];\r\n\r\n\t\t$.each( that[i], function (j, col) {\r\n\t\t\tsort.push( [ col, dir ] );\r\n\t\t} );\r\n\r\n\t\tsettings.aaSorting = sort;\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( input === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length !== 0 ?\r\n\t\t\tctx[0].oPreviousSearch.sSearch :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// set\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( ! settings.oFeatures.bFilter ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\r\n\t\t\t\"sSearch\": input+\"\",\r\n\t\t\t\"bRegex\":  regex === null ? false : regex,\r\n\t\t\t\"bSmart\":  smart === null ? true  : smart,\r\n\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\r\n\t\t} ), 1 );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_registerPlural(\r\n\t'columns().search()',\r\n\t'column().search()',\r\n\tfunction ( input, regex, smart, caseInsen ) {\r\n\t\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\t\tvar preSearch = settings.aoPreSearchCols;\r\n\r\n\t\t\tif ( input === undefined ) {\r\n\t\t\t\t// get\r\n\t\t\t\treturn preSearch[ column ].sSearch;\r\n\t\t\t}\r\n\r\n\t\t\t// set\r\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t$.extend( preSearch[ column ], {\r\n\t\t\t\t\"sSearch\": input+\"\",\r\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\r\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\r\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\r\n\t\t\t} );\r\n\r\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\r\n\t\t} );\r\n\t}\r\n);\r\n\r\n/*\r\n * State API methods\r\n */\r\n\r\n_api_register( 'state()', function () {\r\n\treturn this.context.length ?\r\n\t\tthis.context[0].oSavedState :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'state.clear()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t// Save an empty object\r\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'state.loaded()', function () {\r\n\treturn this.context.length ?\r\n\t\tthis.context[0].oLoadedState :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'state.save()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnSaveState( settings );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Set the jQuery or window object to be used by DataTables\r\n *\r\n * @param {*} module Library / container object\r\n * @param {string} [type] Library or container type `lib`, `win` or `datetime`.\r\n *   If not provided, automatic detection is attempted.\r\n */\r\nDataTable.use = function (module, type) {\r\n\tif (type === 'lib' || module.fn) {\r\n\t\t$ = module;\r\n\t}\r\n\telse if (type == 'win' || module.document) {\r\n\t\twindow = module;\r\n\t\tdocument = module.document;\r\n\t}\r\n\telse if (type === 'datetime' || module.type === 'DateTime') {\r\n\t\tDataTable.DateTime = module;\r\n\t}\r\n}\r\n\r\n/**\r\n * CommonJS factory function pass through. This will check if the arguments\r\n * given are a window object or a jQuery object. If so they are set\r\n * accordingly.\r\n * @param {*} root Window\r\n * @param {*} jq jQUery\r\n * @returns {boolean} Indicator\r\n */\r\nDataTable.factory = function (root, jq) {\r\n\tvar is = false;\r\n\r\n\t// Test if the first parameter is a window object\r\n\tif (root && root.document) {\r\n\t\twindow = root;\r\n\t\tdocument = root.document;\r\n\t}\r\n\r\n\t// Test if the second parameter is a jQuery object\r\n\tif (jq && jq.fn && jq.fn.jquery) {\r\n\t\t$ = jq;\r\n\t\tis = true;\r\n\t}\r\n\r\n\treturn is;\r\n}\r\n\r\n/**\r\n * Provide a common method for plug-ins to check the version of DataTables being\r\n * used, in order to ensure compatibility.\r\n *\r\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\r\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\r\n *  @returns {boolean} true if this version of DataTables is greater or equal to\r\n *    the required version, or false if this version of DataTales is not\r\n *    suitable\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\r\n */\r\nDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\r\n{\r\n\tvar aThis = DataTable.version.split('.');\r\n\tvar aThat = version.split('.');\r\n\tvar iThis, iThat;\r\n\r\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\r\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\r\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\r\n\r\n\t\t// Parts are the same, keep comparing\r\n\t\tif (iThis === iThat) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Parts are different, return immediately\r\n\t\treturn iThis > iThat;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Check if a `<table>` node is a DataTable table already or not.\r\n *\r\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\r\n *      selector for the table to test. Note that if more than more than one\r\n *      table is passed on, only the first will be checked\r\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\r\n *      $('#example').dataTable();\r\n *    }\r\n */\r\nDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\r\n{\r\n\tvar t = $(table).get(0);\r\n\tvar is = false;\r\n\r\n\tif ( table instanceof DataTable.Api ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t$.each( DataTable.settings, function (i, o) {\r\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\r\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\r\n\r\n\t\tif ( o.nTable === t || head === t || foot === t ) {\r\n\t\t\tis = true;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn is;\r\n};\r\n\r\n\r\n/**\r\n * Get all DataTable tables that have been initialised - optionally you can\r\n * select to get only currently visible tables.\r\n *\r\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\r\n *    or visible tables only.\r\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\r\n *    DataTables\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    $.each( $.fn.dataTable.tables(true), function () {\r\n *      $(table).DataTable().columns.adjust();\r\n *    } );\r\n */\r\nDataTable.tables = DataTable.fnTables = function ( visible )\r\n{\r\n\tvar api = false;\r\n\r\n\tif ( $.isPlainObject( visible ) ) {\r\n\t\tapi = visible.api;\r\n\t\tvisible = visible.visible;\r\n\t}\r\n\r\n\tvar a = $.map( DataTable.settings, function (o) {\r\n\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\r\n\t\t\treturn o.nTable;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn api ?\r\n\t\tnew _Api( a ) :\r\n\t\ta;\r\n};\r\n\r\n\r\n/**\r\n * Convert from camel case parameters to Hungarian notation. This is made public\r\n * for the extensions to provide the same ability as DataTables core to accept\r\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\r\n * parameters.\r\n *\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n */\r\nDataTable.camelToHungarian = _fnCamelToHungarian;\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_api_register( '$()', function ( selector, opts ) {\r\n\tvar\r\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\r\n\t\tjqRows = $(rows);\r\n\r\n\treturn $( [].concat(\r\n\t\tjqRows.filter( selector ).toArray(),\r\n\t\tjqRows.find( selector ).toArray()\r\n\t) );\r\n} );\r\n\r\n\r\n// jQuery functions to operate on the tables\r\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\r\n\t_api_register( key+'()', function ( /* event, handler */ ) {\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\r\n\t\t// Add the `dt` namespace automatically if it isn't already present\r\n\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\r\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\r\n\t\t\t\te+'.dt' :\r\n\t\t\t\te;\r\n\t\t\t} ).join( ' ' );\r\n\r\n\t\tvar inst = $( this.tables().nodes() );\r\n\t\tinst[key].apply( inst, args );\r\n\t\treturn this;\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'clear()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnClearTable( settings );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'settings()', function () {\r\n\treturn new _Api( this.context, this.context );\r\n} );\r\n\r\n\r\n_api_register( 'init()', function () {\r\n\tvar ctx = this.context;\r\n\treturn ctx.length ? ctx[0].oInit : null;\r\n} );\r\n\r\n\r\n_api_register( 'data()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\treturn _pluck( settings.aoData, '_aData' );\r\n\t} ).flatten();\r\n} );\r\n\r\n\r\n_api_register( 'destroy()', function ( remove ) {\r\n\tremove = remove || false;\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tvar classes   = settings.oClasses;\r\n\t\tvar table     = settings.nTable;\r\n\t\tvar tbody     = settings.nTBody;\r\n\t\tvar thead     = settings.nTHead;\r\n\t\tvar tfoot     = settings.nTFoot;\r\n\t\tvar jqTable   = $(table);\r\n\t\tvar jqTbody   = $(tbody);\r\n\t\tvar jqWrapper = $(settings.nTableWrapper);\r\n\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\r\n\t\tvar i, ien;\r\n\r\n\t\t// Flag to note that the table is currently being destroyed - no action\r\n\t\t// should be taken\r\n\t\tsettings.bDestroying = true;\r\n\r\n\t\t// Fire off the destroy callbacks for plug-ins etc\r\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\r\n\r\n\t\t// If not being removed from the document, make all columns visible\r\n\t\tif ( ! remove ) {\r\n\t\t\tnew _Api( settings ).columns().visible( true );\r\n\t\t}\r\n\r\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\r\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\r\n\t\t// for removing them\r\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\r\n\t\t$(window).off('.DT-'+settings.sInstance);\r\n\r\n\t\t// When scrolling we had to break the table up - restore it\r\n\t\tif ( table != thead.parentNode ) {\r\n\t\t\tjqTable.children('thead').detach();\r\n\t\t\tjqTable.append( thead );\r\n\t\t}\r\n\r\n\t\tif ( tfoot && table != tfoot.parentNode ) {\r\n\t\t\tjqTable.children('tfoot').detach();\r\n\t\t\tjqTable.append( tfoot );\r\n\t\t}\r\n\r\n\t\tsettings.aaSorting = [];\r\n\t\tsettings.aaSortingFixed = [];\r\n\t\t_fnSortingClasses( settings );\r\n\r\n\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\r\n\r\n\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\r\n\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\r\n\t\t);\r\n\r\n\t\t// Add the TR elements back into the table in their original order\r\n\t\tjqTbody.children().detach();\r\n\t\tjqTbody.append( rows );\r\n\r\n\t\tvar orig = settings.nTableWrapper.parentNode;\r\n\r\n\t\t// Remove the DataTables generated nodes, events and classes\r\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\r\n\t\tjqTable[ removedMethod ]();\r\n\t\tjqWrapper[ removedMethod ]();\r\n\r\n\t\t// If we need to reattach the table to the document\r\n\t\tif ( ! remove && orig ) {\r\n\t\t\t// insertBefore acts like appendChild if !arg[1]\r\n\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\r\n\r\n\t\t\t// Restore the width of the original table - was read from the style property,\r\n\t\t\t// so we can restore directly to that\r\n\t\t\tjqTable\r\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\r\n\t\t\t\t.removeClass( classes.sTable );\r\n\r\n\t\t\t// If the were originally stripe classes - then we add them back here.\r\n\t\t\t// Note this is not fool proof (for example if not all rows had stripe\r\n\t\t\t// classes - but it's a good effort without getting carried away\r\n\t\t\tien = settings.asDestroyStripes.length;\r\n\r\n\t\t\tif ( ien ) {\r\n\t\t\t\tjqTbody.children().each( function (i) {\r\n\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Remove the settings object from the settings array */\r\n\t\tvar idx = $.inArray( settings, DataTable.settings );\r\n\t\tif ( idx !== -1 ) {\r\n\t\t\tDataTable.settings.splice( idx, 1 );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n// Add the `every()` method for rows, columns and cells in a compact form\r\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\r\n\t_api_register( type+'s().every()', function ( fn ) {\r\n\t\tvar opts = this.selector.opts;\r\n\t\tvar api = this;\r\n\r\n\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\r\n\t\t\t// Rows and columns:\r\n\t\t\t//  arg1 - index\r\n\t\t\t//  arg2 - table counter\r\n\t\t\t//  arg3 - loop counter\r\n\t\t\t//  arg4 - undefined\r\n\t\t\t// Cells:\r\n\t\t\t//  arg1 - row index\r\n\t\t\t//  arg2 - column index\r\n\t\t\t//  arg3 - table counter\r\n\t\t\t//  arg4 - loop counter\r\n\t\t\tfn.call(\r\n\t\t\t\tapi[ type ](\r\n\t\t\t\t\targ1,\r\n\t\t\t\t\ttype==='cell' ? arg2 : opts,\r\n\t\t\t\t\ttype==='cell' ? opts : undefined\r\n\t\t\t\t),\r\n\t\t\t\targ1, arg2, arg3, arg4\r\n\t\t\t);\r\n\t\t} );\r\n\t} );\r\n} );\r\n\r\n\r\n// i18n method for extensions to be able to use the language object from the\r\n// DataTable\r\n_api_register( 'i18n()', function ( token, def, plural ) {\r\n\tvar ctx = this.context[0];\r\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\r\n\r\n\tif ( resolved === undefined ) {\r\n\t\tresolved = def;\r\n\t}\r\n\r\n\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\r\n\t\tresolved = resolved[ plural ] !== undefined ?\r\n\t\t\tresolved[ plural ] :\r\n\t\t\tresolved._;\r\n\t}\r\n\r\n\treturn typeof resolved === 'string'\r\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\r\n\t\t: resolved;\r\n} );\r\n/**\r\n * Version string for plug-ins to check compatibility. Allowed format is\r\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\r\n * only for non-release builds. See https://semver.org/ for more information.\r\n *  @member\r\n *  @type string\r\n *  @default Version number\r\n */\r\nDataTable.version = \"1.13.7\";\r\n\r\n/**\r\n * Private data store, containing all of the settings objects that are\r\n * created for the tables on a given page.\r\n *\r\n * Note that the `DataTable.settings` object is aliased to\r\n * `jQuery.fn.dataTableExt` through which it may be accessed and\r\n * manipulated, or `jQuery.fn.dataTable.settings`.\r\n *  @member\r\n *  @type array\r\n *  @default []\r\n *  @private\r\n */\r\nDataTable.settings = [];\r\n\r\n/**\r\n * Object models container, for the various models that DataTables has\r\n * available to it. These models define the objects that are used to hold\r\n * the active state and configuration of the table.\r\n *  @namespace\r\n */\r\nDataTable.models = {};\r\n\r\n\r\n\r\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * search information for the global filter and individual column filters.\r\n *  @namespace\r\n */\r\nDataTable.models.oSearch = {\r\n\t/**\r\n\t * Flag to indicate if the filtering should be case insensitive or not\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t */\r\n\t\"bCaseInsensitive\": true,\r\n\r\n\t/**\r\n\t * Applied search term\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t */\r\n\t\"sSearch\": \"\",\r\n\r\n\t/**\r\n\t * Flag to indicate if the search term should be interpreted as a\r\n\t * regular expression (true) or not (false) and therefore and special\r\n\t * regex characters escaped.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bRegex\": false,\r\n\r\n\t/**\r\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t */\r\n\t\"bSmart\": true,\r\n\r\n\t/**\r\n\t * Flag to indicate if DataTables should only trigger a search when\r\n\t * the return key is pressed.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"return\": false\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * each individual row. This is the object format used for the settings\r\n * aoData array.\r\n *  @namespace\r\n */\r\nDataTable.models.oRow = {\r\n\t/**\r\n\t * TR element for the row\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTr\": null,\r\n\r\n\t/**\r\n\t * Array of TD elements for each row. This is null until the row has been\r\n\t * created.\r\n\t *  @type array nodes\r\n\t *  @default []\r\n\t */\r\n\t\"anCells\": null,\r\n\r\n\t/**\r\n\t * Data object from the original data source for the row. This is either\r\n\t * an array if using the traditional form of DataTables, or an object if\r\n\t * using mData options. The exact type will depend on the passed in\r\n\t * data from the data source, or will be an array if using DOM a data\r\n\t * source.\r\n\t *  @type array|object\r\n\t *  @default []\r\n\t */\r\n\t\"_aData\": [],\r\n\r\n\t/**\r\n\t * Sorting data cache - this array is ostensibly the same length as the\r\n\t * number of columns (although each index is generated only as it is\r\n\t * needed), and holds the data that is used for sorting each column in the\r\n\t * row. We do this cache generation at the start of the sort in order that\r\n\t * the formatting of the sort data need be done only once for each cell\r\n\t * per sort. This array should not be read from or written to by anything\r\n\t * other than the master sorting methods.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_aSortData\": null,\r\n\r\n\t/**\r\n\t * Per cell filtering data cache. As per the sort data cache, used to\r\n\t * increase the performance of the filtering in DataTables\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_aFilterData\": null,\r\n\r\n\t/**\r\n\t * Filtering data cache. This is the same as the cell filtering cache, but\r\n\t * in this case a string rather than an array. This is easily computed with\r\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\r\n\t * needed on every search (memory traded for performance)\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_sFilterRow\": null,\r\n\r\n\t/**\r\n\t * Cache of the class name that DataTables has applied to the row, so we\r\n\t * can quickly look at this variable rather than needing to do a DOM check\r\n\t * on className for the nTr property.\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *  @private\r\n\t */\r\n\t\"_sRowStripe\": \"\",\r\n\r\n\t/**\r\n\t * Denote if the original data source was from the DOM, or the data source\r\n\t * object. This is used for invalidating data, so DataTables can\r\n\t * automatically read data from the original source, unless uninstructed\r\n\t * otherwise.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"src\": null,\r\n\r\n\t/**\r\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\r\n\t * object, but want to know the index\r\n\t *  @type integer\r\n\t *  @default -1\r\n\t *  @private\r\n\t */\r\n\t\"idx\": -1\r\n};\r\n\r\n\r\n/**\r\n * Template object for the column information object in DataTables. This object\r\n * is held in the settings aoColumns array and contains all the information that\r\n * DataTables needs about each individual column.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults.column}\r\n * but this one is the internal data store for DataTables's cache of columns.\r\n * It should NOT be manipulated outside of DataTables. Any configuration should\r\n * be done through the initialisation options.\r\n *  @namespace\r\n */\r\nDataTable.models.oColumn = {\r\n\t/**\r\n\t * Column index. This could be worked out on-the-fly with $.inArray, but it\r\n\t * is faster to just hold it as a variable\r\n\t *  @type integer\r\n\t *  @default null\r\n\t */\r\n\t\"idx\": null,\r\n\r\n\t/**\r\n\t * A list of the columns that sorting should occur on when this column\r\n\t * is sorted. That this property is an array allows multi-column sorting\r\n\t * to be defined for a column (for example first name / last name columns\r\n\t * would benefit from this). The values are integers pointing to the\r\n\t * columns to be sorted on (typically it will be a single integer pointing\r\n\t * at itself, but that doesn't need to be the case).\r\n\t *  @type array\r\n\t */\r\n\t\"aDataSort\": null,\r\n\r\n\t/**\r\n\t * Define the sorting directions that are applied to the column, in sequence\r\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\r\n\t * as the sorting direction when the column if first sorted (clicked on).\r\n\t * Sort it again (click again) and it will move on to the next index.\r\n\t * Repeat until loop.\r\n\t *  @type array\r\n\t */\r\n\t\"asSorting\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is searchable, and thus should be included\r\n\t * in the filtering or not.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSearchable\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is sortable or not.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSortable\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is currently visible in the table or not\r\n\t *  @type boolean\r\n\t */\r\n\t\"bVisible\": null,\r\n\r\n\t/**\r\n\t * Store for manual type assignment using the `column.type` option. This\r\n\t * is held in store so we can manipulate the column's `sType` property.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_sManualType\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if HTML5 data attributes should be used as the data\r\n\t * source for filtering or sorting. True is either are.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @private\r\n\t */\r\n\t\"_bAttrSrc\": false,\r\n\r\n\t/**\r\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\r\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n\t * allowing you to modify the DOM element (add background colour for example) when the\r\n\t * element is available.\r\n\t *  @type function\r\n\t *  @param {element} nTd The TD node that has been created\r\n\t *  @param {*} sData The Data for the cell\r\n\t *  @param {array|object} oData The data for the whole row\r\n\t *  @param {int} iRow The row index for the aoData data store\r\n\t *  @default null\r\n\t */\r\n\t\"fnCreatedCell\": null,\r\n\r\n\t/**\r\n\t * Function to get data from a cell in a column. You should <b>never</b>\r\n\t * access data directly through _aData internally in DataTables - always use\r\n\t * the method attached to this property. It allows mData to function as\r\n\t * required. This function is automatically assigned by the column\r\n\t * initialisation method\r\n\t *  @type function\r\n\t *  @param {array|object} oData The data array/object for the array\r\n\t *    (i.e. aoData[]._aData)\r\n\t *  @param {string} sSpecific The specific data type you want to get -\r\n\t *    'display', 'type' 'filter' 'sort'\r\n\t *  @returns {*} The data for the cell from the given row's data\r\n\t *  @default null\r\n\t */\r\n\t\"fnGetData\": null,\r\n\r\n\t/**\r\n\t * Function to set data for a cell in the column. You should <b>never</b>\r\n\t * set the data directly to _aData internally in DataTables - always use\r\n\t * this method. It allows mData to function as required. This function\r\n\t * is automatically assigned by the column initialisation method\r\n\t *  @type function\r\n\t *  @param {array|object} oData The data array/object for the array\r\n\t *    (i.e. aoData[]._aData)\r\n\t *  @param {*} sValue Value to set\r\n\t *  @default null\r\n\t */\r\n\t\"fnSetData\": null,\r\n\r\n\t/**\r\n\t * Property to read the value for the cells in the column from the data\r\n\t * source array / object. If null, then the default content is used, if a\r\n\t * function is given then the return from the function is used.\r\n\t *  @type function|int|string|null\r\n\t *  @default null\r\n\t */\r\n\t\"mData\": null,\r\n\r\n\t/**\r\n\t * Partner property to mData which is used (only when defined) to get\r\n\t * the data - i.e. it is basically the same as mData, but without the\r\n\t * 'set' option, and also the data fed to it is the result from mData.\r\n\t * This is the rendering method to match the data method of mData.\r\n\t *  @type function|int|string|null\r\n\t *  @default null\r\n\t */\r\n\t\"mRender\": null,\r\n\r\n\t/**\r\n\t * Unique header TH/TD element for this column - this is what the sorting\r\n\t * listener is attached to (if sorting is enabled.)\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTh\": null,\r\n\r\n\t/**\r\n\t * Unique footer TH/TD element for this column (if there is one). Not used\r\n\t * in DataTables as such, but can be used for plug-ins to reference the\r\n\t * footer for each column.\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTf\": null,\r\n\r\n\t/**\r\n\t * The class to apply to all TD elements in the table's TBODY for the column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sClass\": null,\r\n\r\n\t/**\r\n\t * When DataTables calculates the column widths to assign to each column,\r\n\t * it finds the longest string in each column and then constructs a\r\n\t * temporary table and reads the widths from that. The problem with this\r\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n\t * string - thus the calculation can go wrong (doing it properly and putting\r\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n\t * a \"work around\" we provide this option. It will append its value to the\r\n\t * text that is found to be the longest string for the column - i.e. padding.\r\n\t *  @type string\r\n\t */\r\n\t\"sContentPadding\": null,\r\n\r\n\t/**\r\n\t * Allows a default value to be given for a column's data, and will be used\r\n\t * whenever a null data source is encountered (this can be because mData\r\n\t * is set to null, or because the data source itself is null).\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sDefaultContent\": null,\r\n\r\n\t/**\r\n\t * Name for the column, allowing reference to the column by name as well as\r\n\t * by index (needs a lookup to work by name).\r\n\t *  @type string\r\n\t */\r\n\t\"sName\": null,\r\n\r\n\t/**\r\n\t * Custom sorting data type - defines which of the available plug-ins in\r\n\t * afnSortData the custom sorting will use - if any is defined.\r\n\t *  @type string\r\n\t *  @default std\r\n\t */\r\n\t\"sSortDataType\": 'std',\r\n\r\n\t/**\r\n\t * Class to be applied to the header element when sorting on this column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sSortingClass\": null,\r\n\r\n\t/**\r\n\t * Class to be applied to the header element when sorting on this column -\r\n\t * when jQuery UI theming is used.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sSortingClassJUI\": null,\r\n\r\n\t/**\r\n\t * Title of the column - what is seen in the TH element (nTh).\r\n\t *  @type string\r\n\t */\r\n\t\"sTitle\": null,\r\n\r\n\t/**\r\n\t * Column sorting and filtering type\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sType\": null,\r\n\r\n\t/**\r\n\t * Width of the column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sWidth\": null,\r\n\r\n\t/**\r\n\t * Width of the column when it was first \"encountered\"\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sWidthOrig\": null\r\n};\r\n\r\n\r\n/*\r\n * Developer note: The properties of the object below are given in Hungarian\r\n * notation, that was used as the interface for DataTables prior to v1.10, however\r\n * from v1.10 onwards the primary interface is camel case. In order to avoid\r\n * breaking backwards compatibility utterly with this change, the Hungarian\r\n * version is still, internally the primary interface, but is is not documented\r\n * - hence the @name tags in each doc comment. This allows a Javascript function\r\n * to create a map from Hungarian notation to camel case (going the other direction\r\n * would require each property to be listed, which would add around 3K to the size\r\n * of DataTables, while this method is about a 0.5K hit).\r\n *\r\n * Ultimately this does pave the way for Hungarian notation to be dropped\r\n * completely, but that is a massive amount of work and will break current\r\n * installs (therefore is on-hold until v2).\r\n */\r\n\r\n/**\r\n * Initialisation options that can be given to DataTables at initialisation\r\n * time.\r\n *  @namespace\r\n */\r\nDataTable.defaults = {\r\n\t/**\r\n\t * An array of data to use for the table, passed in at initialisation which\r\n\t * will be used in preference to any data which is already in the DOM. This is\r\n\t * particularly useful for constructing tables purely in Javascript, for\r\n\t * example with a custom Ajax call.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.data\r\n\t *\r\n\t *  @example\r\n\t *    // Using a 2D array data source\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"data\": [\r\n\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\r\n\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\r\n\t *        ],\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"Engine\" },\r\n\t *          { \"title\": \"Browser\" },\r\n\t *          { \"title\": \"Platform\" },\r\n\t *          { \"title\": \"Version\" },\r\n\t *          { \"title\": \"Grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using an array of objects as a data source (`data`)\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"data\": [\r\n\t *          {\r\n\t *            \"engine\":   \"Trident\",\r\n\t *            \"browser\":  \"Internet Explorer 4.0\",\r\n\t *            \"platform\": \"Win 95+\",\r\n\t *            \"version\":  4,\r\n\t *            \"grade\":    \"X\"\r\n\t *          },\r\n\t *          {\r\n\t *            \"engine\":   \"Trident\",\r\n\t *            \"browser\":  \"Internet Explorer 5.0\",\r\n\t *            \"platform\": \"Win 95+\",\r\n\t *            \"version\":  5,\r\n\t *            \"grade\":    \"C\"\r\n\t *          }\r\n\t *        ],\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\r\n\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\r\n\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\r\n\t *          { \"title\": \"Version\",  \"data\": \"version\" },\r\n\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aaData\": null,\r\n\r\n\r\n\t/**\r\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\r\n\t * initialisation. You can define which column(s) the sort is performed\r\n\t * upon, and the sorting direction, with this variable. The `sorting` array\r\n\t * should contain an array for each column to be sorted initially containing\r\n\t * the column's index and a direction string ('asc' or 'desc').\r\n\t *  @type array\r\n\t *  @default [[0,'asc']]\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.order\r\n\t *\r\n\t *  @example\r\n\t *    // Sort by 3rd column first, and then 4th column\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"order\": [[2,'asc'], [3,'desc']]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *    // No initial sorting\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"order\": []\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aaSorting\": [[0,'asc']],\r\n\r\n\r\n\t/**\r\n\t * This parameter is basically identical to the `sorting` parameter, but\r\n\t * cannot be overridden by user interaction with the table. What this means\r\n\t * is that you could have a column (visible or hidden) which the sorting\r\n\t * will always be forced on first - any sorting after that (from the user)\r\n\t * will then be performed as required. This can be useful for grouping rows\r\n\t * together.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.orderFixed\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderFixed\": [[0,'asc']]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"aaSortingFixed\": [],\r\n\r\n\r\n\t/**\r\n\t * DataTables can be instructed to load data to display in the table from a\r\n\t * Ajax source. This option defines how that Ajax call is made and where to.\r\n\t *\r\n\t * The `ajax` property has three different modes of operation, depending on\r\n\t * how it is defined. These are:\r\n\t *\r\n\t * * `string` - Set the URL from where the data should be loaded from.\r\n\t * * `object` - Define properties for `jQuery.ajax`.\r\n\t * * `function` - Custom data get function\r\n\t *\r\n\t * `string`\r\n\t * --------\r\n\t *\r\n\t * As a string, the `ajax` property simply defines the URL from which\r\n\t * DataTables will load data.\r\n\t *\r\n\t * `object`\r\n\t * --------\r\n\t *\r\n\t * As an object, the parameters in the object are passed to\r\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\r\n\t * of the Ajax request. DataTables has a number of default parameters which\r\n\t * you can override using this option. Please refer to the jQuery\r\n\t * documentation for a full description of the options available, although\r\n\t * the following parameters provide additional options in DataTables or\r\n\t * require special consideration:\r\n\t *\r\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\r\n\t *   can also be used as a function to manipulate the data DataTables sends\r\n\t *   to the server. The function takes a single parameter, an object of\r\n\t *   parameters with the values that DataTables has readied for sending. An\r\n\t *   object may be returned which will be merged into the DataTables\r\n\t *   defaults, or you can add the items to the object that was passed in and\r\n\t *   not return anything from the function. This supersedes `fnServerParams`\r\n\t *   from DataTables 1.9-.\r\n\t *\r\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\r\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\r\n\t *   from an Ajax source or for server-side processing - this parameter\r\n\t *   allows that property to be changed. You can use Javascript dotted\r\n\t *   object notation to get a data source for multiple levels of nesting, or\r\n\t *   it my be used as a function. As a function it takes a single parameter,\r\n\t *   the JSON returned from the server, which can be manipulated as\r\n\t *   required, with the returned value being that used by DataTables as the\r\n\t *   data source for the table. This supersedes `sAjaxDataProp` from\r\n\t *   DataTables 1.9-.\r\n\t *\r\n\t * * `success` - Should not be overridden it is used internally in\r\n\t *   DataTables. To manipulate / transform the data returned by the server\r\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\r\n\t *\r\n\t * `function`\r\n\t * ----------\r\n\t *\r\n\t * As a function, making the Ajax call is left up to yourself allowing\r\n\t * complete control of the Ajax request. Indeed, if desired, a method other\r\n\t * than Ajax could be used to obtain the required data, such as Web storage\r\n\t * or an AIR database.\r\n\t *\r\n\t * The function is given four parameters and no return is required. The\r\n\t * parameters are:\r\n\t *\r\n\t * 1. _object_ - Data to send to the server\r\n\t * 2. _function_ - Callback function that must be executed when the required\r\n\t *    data has been obtained. That data should be passed into the callback\r\n\t *    as the only parameter\r\n\t * 3. _object_ - DataTables settings object for the table\r\n\t *\r\n\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\r\n\t *\r\n\t *  @type string|object|function\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.ajax\r\n\t *  @since 1.10.0\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax.\r\n\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": \"data.json\"\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\r\n\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": \"tableData\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\r\n\t *   // from a plain array rather than an array in an object\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": \"\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Manipulate the data returned from the server - add a link to data\r\n\t *   // (note this can, should, be done using `render` for the column - this\r\n\t *   // is just a simple example of how the data can be manipulated).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": function ( json ) {\r\n\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\r\n\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\r\n\t *         }\r\n\t *         return json;\r\n\t *       }\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Add data to the request\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"data\": function ( d ) {\r\n\t *         return {\r\n\t *           \"extra_search\": $('#extra').val()\r\n\t *         };\r\n\t *       }\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Send request as POST\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"type\": \"POST\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get the data from localStorage (could interface with a form for\r\n\t *   // adding, editing and removing rows).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": function (data, callback, settings) {\r\n\t *       callback(\r\n\t *         JSON.parse( localStorage.getItem('dataTablesData') )\r\n\t *       );\r\n\t *     }\r\n\t *   } );\r\n\t */\r\n\t\"ajax\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter allows you to readily specify the entries in the length drop\r\n\t * down menu that DataTables shows when pagination is enabled. It can be\r\n\t * either a 1D array of options which will be used for both the displayed\r\n\t * option and the value, or a 2D array which will use the array in the first\r\n\t * position as the value, and the array in the second position as the\r\n\t * displayed options (useful for language strings such as 'All').\r\n\t *\r\n\t * Note that the `pageLength` property will be automatically set to the\r\n\t * first value given in this array, unless `pageLength` is also provided.\r\n\t *  @type array\r\n\t *  @default [ 10, 25, 50, 100 ]\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.lengthMenu\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\r\n\r\n\r\n\t/**\r\n\t * The `columns` option in the initialisation parameter allows you to define\r\n\t * details about the way individual columns behave. For a full list of\r\n\t * column options that can be set, please see\r\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\r\n\t * define your columns, you must have an entry in the array for every single\r\n\t * column that you have in your table (these can be null if you don't which\r\n\t * to specify any options).\r\n\t *  @member\r\n\t *\r\n\t *  @name DataTable.defaults.column\r\n\t */\r\n\t\"aoColumns\": null,\r\n\r\n\t/**\r\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\r\n\t * column, multiple columns, or all columns, using the `targets` property of\r\n\t * each object in the array. This allows great flexibility when creating\r\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\r\n\t * columns you specifically want. `columnDefs` may use any of the column\r\n\t * options available: {@link DataTable.defaults.column}, but it _must_\r\n\t * have `targets` defined in each object in the array. Values in the `targets`\r\n\t * array may be:\r\n\t *   <ul>\r\n\t *     <li>a string - class name will be matched on the TH for the column</li>\r\n\t *     <li>0 or a positive integer - column index counting from the left</li>\r\n\t *     <li>a negative integer - column index counting from the right</li>\r\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\r\n\t *   </ul>\r\n\t *  @member\r\n\t *\r\n\t *  @name DataTable.defaults.columnDefs\r\n\t */\r\n\t\"aoColumnDefs\": null,\r\n\r\n\r\n\t/**\r\n\t * Basically the same as `search`, this parameter defines the individual column\r\n\t * filtering state at initialisation time. The array must be of the same size\r\n\t * as the number of columns, and each element be an object with the parameters\r\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\r\n\t * accepted and the default will be used.\r\n\t *  @type array\r\n\t *  @default []\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.searchCols\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searchCols\": [\r\n\t *          null,\r\n\t *          { \"search\": \"My filter\" },\r\n\t *          null,\r\n\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"aoSearchCols\": [],\r\n\r\n\r\n\t/**\r\n\t * An array of CSS classes that should be applied to displayed rows. This\r\n\t * array may be of any length, and DataTables will apply each class\r\n\t * sequentially, looping when required.\r\n\t *  @type array\r\n\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\r\n\t *    options</i>\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.stripeClasses\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"asStripeClasses\": null,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable automatic column width calculation. This can be disabled\r\n\t * as an optimisation (it takes some time to calculate the widths) if the\r\n\t * tables widths are passed in using `columns`.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.autoWidth\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"autoWidth\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bAutoWidth\": true,\r\n\r\n\r\n\t/**\r\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\r\n\t * are using an Ajax or JS data source for the table. This option, when set to\r\n\t * true, will cause DataTables to defer the creation of the table elements for\r\n\t * each row until they are needed for a draw - saving a significant amount of\r\n\t * time.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.deferRender\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajax\": \"sources/arrays.txt\",\r\n\t *        \"deferRender\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bDeferRender\": false,\r\n\r\n\r\n\t/**\r\n\t * Replace a DataTable which matches the given selector and replace it with\r\n\t * one which has the properties of the new initialisation object passed. If no\r\n\t * table matches the selector, then the new DataTable will be constructed as\r\n\t * per normal.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.destroy\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"srollY\": \"200px\",\r\n\t *        \"paginate\": false\r\n\t *      } );\r\n\t *\r\n\t *      // Some time later....\r\n\t *      $('#example').dataTable( {\r\n\t *        \"filter\": false,\r\n\t *        \"destroy\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bDestroy\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\r\n\t * that it allows the end user to input multiple words (space separated) and\r\n\t * will match a row containing those words, even if not in the order that was\r\n\t * specified (this allow matching across multiple columns). Note that if you\r\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\r\n\t * default filtering input box and retain filtering abilities, please use\r\n\t * {@link DataTable.defaults.dom}.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.searching\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searching\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bFilter\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the table information display. This shows information\r\n\t * about the data that is currently visible on the page, including information\r\n\t * about filtered data if that action is being performed.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.info\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"info\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bInfo\": true,\r\n\r\n\r\n\t/**\r\n\t * Allows the end user to select the size of a formatted page from a select\r\n\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.lengthChange\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"lengthChange\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bLengthChange\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable pagination.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.paging\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"paging\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bPaginate\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the display of a 'processing' indicator when the table is\r\n\t * being processed (e.g. a sort). This is particularly useful for tables with\r\n\t * large amounts of data where it can take a noticeable amount of time to sort\r\n\t * the entries.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.processing\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"processing\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bProcessing\": false,\r\n\r\n\r\n\t/**\r\n\t * Retrieve the DataTables object for the given selector. Note that if the\r\n\t * table has already been initialised, this parameter will cause DataTables\r\n\t * to simply return the object that has already been set up - it will not take\r\n\t * account of any changes you might have made to the initialisation object\r\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\r\n\t * that you understand this). `destroy` can be used to reinitialise a table if\r\n\t * you need.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.retrieve\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      initTable();\r\n\t *      tableActions();\r\n\t *    } );\r\n\t *\r\n\t *    function initTable ()\r\n\t *    {\r\n\t *      return $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200px\",\r\n\t *        \"paginate\": false,\r\n\t *        \"retrieve\": true\r\n\t *      } );\r\n\t *    }\r\n\t *\r\n\t *    function tableActions ()\r\n\t *    {\r\n\t *      var table = initTable();\r\n\t *      // perform API operations with oTable\r\n\t *    }\r\n\t */\r\n\t\"bRetrieve\": false,\r\n\r\n\r\n\t/**\r\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\r\n\t * the table's viewport to the given height at all times (useful for layout).\r\n\t * However, this can look odd when filtering data down to a small data set,\r\n\t * and the footer is left \"floating\" further down. This parameter (when\r\n\t * enabled) will cause DataTables to collapse the table's viewport down when\r\n\t * the result set will fit within the given Y height.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.scrollCollapse\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200\",\r\n\t *        \"scrollCollapse\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bScrollCollapse\": false,\r\n\r\n\r\n\t/**\r\n\t * Configure DataTables to use server-side processing. Note that the\r\n\t * `ajax` parameter must also be given in order to give DataTables a\r\n\t * source to obtain the required data for each draw.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverSide\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"xhr.php\"\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bServerSide\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\r\n\t * disabled by the `sortable` option for each column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.ordering\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ordering\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSort\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or display DataTables' ability to sort multiple columns at the\r\n\t * same time (activated by shift-click by the user).\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.orderMulti\r\n\t *\r\n\t *  @example\r\n\t *    // Disable multiple column sorting ability\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderMulti\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortMulti\": true,\r\n\r\n\r\n\t/**\r\n\t * Allows control over whether DataTables should use the top (true) unique\r\n\t * cell that is found for a single column, or the bottom (false - default).\r\n\t * This is useful when using complex headers.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.orderCellsTop\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderCellsTop\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortCellsTop\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\r\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\r\n\t * presented as a feature switch as it can increase processing time (while\r\n\t * classes are removed and added) so for large data sets you might want to\r\n\t * turn this off.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.orderClasses\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderClasses\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortClasses\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\r\n\t * used to save table display information such as pagination information,\r\n\t * display length, filtering and sorting. As such when the end user reloads\r\n\t * the page the display display will match what thy had previously set up.\r\n\t *\r\n\t * Due to the use of `localStorage` the default state saving is not supported\r\n\t * in IE6 or 7. If state saving is required in those browsers, use\r\n\t * `stateSaveCallback` to provide a storage solution such as cookies.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.stateSave\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bStateSave\": false,\r\n\r\n\r\n\t/**\r\n\t * This function is called when a TR element is created (and all TD child\r\n\t * elements have been inserted), or registered if using a DOM source, allowing\r\n\t * manipulation of the TR element (adding classes etc).\r\n\t *  @type function\r\n\t *  @param {node} row \"TR\" element for the current row\r\n\t *  @param {array} data Raw data array for this row\r\n\t *  @param {int} dataIndex The index of this row in the internal aoData array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.createdRow\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"createdRow\": function( row, data, dataIndex ) {\r\n\t *          // Bold the grade for all 'A' grade browsers\r\n\t *          if ( data[4] == \"A\" )\r\n\t *          {\r\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnCreatedRow\": null,\r\n\r\n\r\n\t/**\r\n\t * This function is called on every 'draw' event, and allows you to\r\n\t * dynamically modify any aspect you want about the created DOM.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.drawCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"drawCallback\": function( settings ) {\r\n\t *          alert( 'DataTables has redrawn the table' );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnDrawCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Identical to fnHeaderCallback() but for the table footer this function\r\n\t * allows you to modify the table footer on every 'draw' event.\r\n\t *  @type function\r\n\t *  @param {node} foot \"TR\" element for the footer\r\n\t *  @param {array} data Full table data (as derived from the original HTML)\r\n\t *  @param {int} start Index for the current display starting point in the\r\n\t *    display array\r\n\t *  @param {int} end Index for the current display ending point in the\r\n\t *    display array\r\n\t *  @param {array int} display Index array to translate the visual position\r\n\t *    to the full data array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.footerCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\r\n\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnFooterCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * When rendering large numbers in the information element for the table\r\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\r\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\r\n\t * rendered as \"1,000,000\") to help readability for the end user. This\r\n\t * function will override the default method DataTables uses.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {int} toFormat number to be formatted\r\n\t *  @returns {string} formatted string for DataTables to show the number\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.formatNumber\r\n\t *\r\n\t *  @example\r\n\t *    // Format a number using a single quote for the separator (note that\r\n\t *    // this can also be done with the language.thousands option)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"formatNumber\": function ( toFormat ) {\r\n\t *          return toFormat.toString().replace(\r\n\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\r\n\t *          );\r\n\t *        };\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnFormatNumber\": function ( toFormat ) {\r\n\t\treturn toFormat.toString().replace(\r\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\r\n\t\t\tthis.oLanguage.sThousands\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * This function is called on every 'draw' event, and allows you to\r\n\t * dynamically modify the header row. This can be used to calculate and\r\n\t * display useful information about the table.\r\n\t *  @type function\r\n\t *  @param {node} head \"TR\" element for the header\r\n\t *  @param {array} data Full table data (as derived from the original HTML)\r\n\t *  @param {int} start Index for the current display starting point in the\r\n\t *    display array\r\n\t *  @param {int} end Index for the current display ending point in the\r\n\t *    display array\r\n\t *  @param {array int} display Index array to translate the visual position\r\n\t *    to the full data array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.headerCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\r\n\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnHeaderCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * The information element can be used to convey information about the current\r\n\t * state of the table. Although the internationalisation options presented by\r\n\t * DataTables are quite capable of dealing with most customisations, there may\r\n\t * be times where you wish to customise the string further. This callback\r\n\t * allows you to do exactly that.\r\n\t *  @type function\r\n\t *  @param {object} oSettings DataTables settings object\r\n\t *  @param {int} start Starting position in data for the draw\r\n\t *  @param {int} end End position in data for the draw\r\n\t *  @param {int} max Total number of rows in the table (regardless of\r\n\t *    filtering)\r\n\t *  @param {int} total Total number of rows in the data set, after filtering\r\n\t *  @param {string} pre The string that DataTables has formatted using it's\r\n\t *    own rules\r\n\t *  @returns {string} The string to be displayed in the information element.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.infoCallback\r\n\t *\r\n\t *  @example\r\n\t *    $('#example').dataTable( {\r\n\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\r\n\t *        return start +\" to \"+ end;\r\n\t *      }\r\n\t *    } );\r\n\t */\r\n\t\"fnInfoCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Called when the table has been initialised. Normally DataTables will\r\n\t * initialise sequentially and there will be no need for this function,\r\n\t * however, this does not hold true when using external language information\r\n\t * since that is obtained using an async XHR call.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} json The JSON object request from the server - only\r\n\t *    present if client-side Ajax sourced data is used\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.initComplete\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"initComplete\": function(settings, json) {\r\n\t *          alert( 'DataTables has finished its initialisation.' );\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnInitComplete\": null,\r\n\r\n\r\n\t/**\r\n\t * Called at the very start of each table draw and can be used to cancel the\r\n\t * draw by returning false, any other return (including undefined) results in\r\n\t * the full draw occurring).\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @returns {boolean} False will cancel the draw, anything else (including no\r\n\t *    return) will allow it to complete.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.preDrawCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"preDrawCallback\": function( settings ) {\r\n\t *          if ( $('#test').val() == 1 ) {\r\n\t *            return false;\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnPreDrawCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * This function allows you to 'post process' each row after it have been\r\n\t * generated for each table draw, but before it is rendered on screen. This\r\n\t * function might be used for setting the row class name etc.\r\n\t *  @type function\r\n\t *  @param {node} row \"TR\" element for the current row\r\n\t *  @param {array} data Raw data array for this row\r\n\t *  @param {int} displayIndex The display index for the current table draw\r\n\t *  @param {int} displayIndexFull The index of the data in the full list of\r\n\t *    rows (after filtering)\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.rowCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\r\n\t *          // Bold the grade for all 'A' grade browsers\r\n\t *          if ( data[4] == \"A\" ) {\r\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnRowCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * This parameter allows you to override the default function which obtains\r\n\t * the data from the server so something more suitable for your application.\r\n\t * For example you could use POST data, or pull information from a Gears or\r\n\t * AIR database.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\r\n\t *  @param {array} data A key/value pair object containing the data to send\r\n\t *    to the server\r\n\t *  @param {function} callback to be called on completion of the data get\r\n\t *    process that will draw the data on the page.\r\n\t *  @param {object} settings DataTables settings object\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverData\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"fnServerData\": null,\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t *  It is often useful to send extra data to the server when making an Ajax\r\n\t * request - for example custom filtering information, and this callback\r\n\t * function makes it trivial to send extra information to the server. The\r\n\t * passed in parameter is the data set that has been constructed by\r\n\t * DataTables, and you can add to this or modify it as you require.\r\n\t *  @type function\r\n\t *  @param {array} data Data array (array of objects which are name/value\r\n\t *    pairs) that has been constructed by DataTables and will be sent to the\r\n\t *    server. In the case of Ajax sourced data with server-side processing\r\n\t *    this will be an empty array, for server-side processing there will be a\r\n\t *    significant number of parameters!\r\n\t *  @returns {undefined} Ensure that you modify the data array passed in,\r\n\t *    as this is passed by reference.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverParams\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"fnServerParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Load the table state. With this function you can define from where, and how, the\r\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\r\n\t * but you might wish to use a server-side database or cookies.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} callback Callback that can be executed when done. It\r\n\t *    should be passed the loaded state object.\r\n\t *  @return {object} The DataTables state object to be loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoadCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadCallback\": function (settings, callback) {\r\n\t *          $.ajax( {\r\n\t *            \"url\": \"/state_load\",\r\n\t *            \"dataType\": \"json\",\r\n\t *            \"success\": function (json) {\r\n\t *              callback( json );\r\n\t *            }\r\n\t *          } );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoadCallback\": function ( settings ) {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(\r\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\r\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Callback which allows modification of the saved state prior to loading that state.\r\n\t * This callback is called when the table is loading state from the stored data, but\r\n\t * prior to the settings object being modified by the saved state. Note that for\r\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\r\n\t * a plug-in.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object that is to be loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoadParams\r\n\t *\r\n\t *  @example\r\n\t *    // Remove a saved filter, so filtering is never loaded\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadParams\": function (settings, data) {\r\n\t *          data.oSearch.sSearch = \"\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Disallow state loading by returning false\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadParams\": function (settings, data) {\r\n\t *          return false;\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoadParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Callback that is called when the state has been loaded from the state saving method\r\n\t * and the DataTables settings object has been modified as a result of the loaded state.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object that was loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoaded\r\n\t *\r\n\t *  @example\r\n\t *    // Show an alert with the filtering value that was saved\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoaded\": function (settings, data) {\r\n\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoaded\": null,\r\n\r\n\r\n\t/**\r\n\t * Save the table state. This function allows you to define where and how the state\r\n\t * information for the table is stored By default DataTables will use `localStorage`\r\n\t * but you might wish to use a server-side database or cookies.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object to be saved\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateSaveCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateSaveCallback\": function (settings, data) {\r\n\t *          // Send an Ajax request to the server with the state object\r\n\t *          $.ajax( {\r\n\t *            \"url\": \"/state_save\",\r\n\t *            \"data\": data,\r\n\t *            \"dataType\": \"json\",\r\n\t *            \"method\": \"POST\"\r\n\t *            \"success\": function () {}\r\n\t *          } );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateSaveCallback\": function ( settings, data ) {\r\n\t\ttry {\r\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\r\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\r\n\t\t\t\tJSON.stringify( data )\r\n\t\t\t);\r\n\t\t} catch (e) {}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Callback which allows modification of the state to be saved. Called when the table\r\n\t * has changed state a new state save is required. This method allows modification of\r\n\t * the state saving object prior to actually doing the save, including addition or\r\n\t * other state properties or modification. Note that for plug-in authors, you should\r\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object to be saved\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateSaveParams\r\n\t *\r\n\t *  @example\r\n\t *    // Remove a saved filter, so filtering is never saved\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateSaveParams\": function (settings, data) {\r\n\t *          data.oSearch.sSearch = \"\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateSaveParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Duration for which the saved state information is considered valid. After this period\r\n\t * has elapsed the state will be returned to the default.\r\n\t * Value is given in seconds.\r\n\t *  @type int\r\n\t *  @default 7200 <i>(2 hours)</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.stateDuration\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateDuration\": 60*60*24; // 1 day\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iStateDuration\": 7200,\r\n\r\n\r\n\t/**\r\n\t * When enabled DataTables will not make a request to the server for the first\r\n\t * page draw - rather it will use the data already on the page (no sorting etc\r\n\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\r\n\t * is used to indicate that deferred loading is required, but it is also used\r\n\t * to tell DataTables how many records there are in the full table (allowing\r\n\t * the information element and pagination to be displayed correctly). In the case\r\n\t * where a filtering is applied to the table on initial load, this can be\r\n\t * indicated by giving the parameter as an array, where the first element is\r\n\t * the number of records available after filtering and the second element is the\r\n\t * number of records without filtering (allowing the table information element\r\n\t * to be shown correctly).\r\n\t *  @type int | array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.deferLoading\r\n\t *\r\n\t *  @example\r\n\t *    // 57 records available in the table, no filtering applied\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"scripts/server_processing.php\",\r\n\t *        \"deferLoading\": 57\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"scripts/server_processing.php\",\r\n\t *        \"deferLoading\": [ 57, 100 ],\r\n\t *        \"search\": {\r\n\t *          \"search\": \"my_filter\"\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"iDeferLoading\": null,\r\n\r\n\r\n\t/**\r\n\t * Number of rows to display on a single page when using pagination. If\r\n\t * feature enabled (`lengthChange`) then the end user will be able to override\r\n\t * this to a custom setting using a pop-up menu.\r\n\t *  @type int\r\n\t *  @default 10\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.pageLength\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"pageLength\": 50\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iDisplayLength\": 10,\r\n\r\n\r\n\t/**\r\n\t * Define the starting point for data display when using DataTables with\r\n\t * pagination. Note that this parameter is the number of records, rather than\r\n\t * the page number, so if you have 10 records per page and want to start on\r\n\t * the third page, it should be \"20\".\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.displayStart\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"displayStart\": 20\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iDisplayStart\": 0,\r\n\r\n\r\n\t/**\r\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\r\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\r\n\t * allows you to tab through the controls and press the enter key to activate them.\r\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\r\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\r\n\t * disable built-in keyboard navigation.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.tabIndex\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"tabIndex\": 1\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"iTabIndex\": 0,\r\n\r\n\r\n\t/**\r\n\t * Classes that DataTables assigns to the various components and features\r\n\t * that it adds to the HTML table. This allows classes to be configured\r\n\t * during initialisation in addition to through the static\r\n\t * {@link DataTable.ext.oStdClasses} object).\r\n\t *  @namespace\r\n\t *  @name DataTable.defaults.classes\r\n\t */\r\n\t\"oClasses\": {},\r\n\r\n\r\n\t/**\r\n\t * All strings that DataTables uses in the user interface that it creates\r\n\t * are defined in this object, allowing you to modified them individually or\r\n\t * completely replace them all as required.\r\n\t *  @namespace\r\n\t *  @name DataTable.defaults.language\r\n\t */\r\n\t\"oLanguage\": {\r\n\t\t/**\r\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\r\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\r\n\t\t * must be internationalised as well).\r\n\t\t *  @namespace\r\n\t\t *  @name DataTable.defaults.language.aria\r\n\t\t */\r\n\t\t\"oAria\": {\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column may be\r\n\t\t\t * sorted ascending by activing the column (click or return when focused).\r\n\t\t\t * Note that the column header is prefixed to this string.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default : activate to sort column ascending\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"aria\": {\r\n\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\r\n\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column may be\r\n\t\t\t * sorted descending by activing the column (click or return when focused).\r\n\t\t\t * Note that the column header is prefixed to this string.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default : activate to sort column ascending\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"aria\": {\r\n\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sSortDescending\": \": activate to sort column descending\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Pagination string used by DataTables for the built-in pagination\r\n\t\t * control types.\r\n\t\t *  @namespace\r\n\t\t *  @name DataTable.defaults.language.paginate\r\n\t\t */\r\n\t\t\"oPaginate\": {\r\n\t\t\t/**\r\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\r\n\t\t\t * button to take the user to the first page.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default First\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.first\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"first\": \"First page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sFirst\": \"First\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\r\n\t\t\t * button to take the user to the last page.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Last\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.last\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"last\": \"Last page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sLast\": \"Last\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use for the 'next' pagination button (to take the user to the\r\n\t\t\t * next page).\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Next\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.next\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"next\": \"Next page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sNext\": \"Next\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use for the 'previous' pagination button (to take the user to\r\n\t\t\t * the previous page).\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Previous\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.previous\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"previous\": \"Previous page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sPrevious\": \"Previous\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This string is shown in preference to `zeroRecords` when the table is\r\n\t\t * empty of data (regardless of filtering). Note that this is an optional\r\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\r\n\t\t * instead (either the default or given value).\r\n\t\t *  @type string\r\n\t\t *  @default No data available in table\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.emptyTable\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"emptyTable\": \"No data available in table\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sEmptyTable\": \"No data available in table\",\r\n\r\n\r\n\t\t/**\r\n\t\t * This string gives information to the end user about the information\r\n\t\t * that is current on display on the page. The following tokens can be\r\n\t\t * used in the string and will be dynamically replaced as the table\r\n\t\t * display updates. This tokens can be placed anywhere in the string, or\r\n\t\t * removed as needed by the language requires:\r\n\t\t *\r\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\r\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\r\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\r\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\r\n\t\t * * `\\_PAGE\\_` - Current page number\r\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\r\n\t\t *\r\n\t\t *  @type string\r\n\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.info\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Display information string for when the table is empty. Typically the\r\n\t\t * format of this string should match `info`.\r\n\t\t *  @type string\r\n\t\t *  @default Showing 0 to 0 of 0 entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoEmpty\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoEmpty\": \"No entries to show\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * When a user filters the information in a table, this string is appended\r\n\t\t * to the information (`info`) to give an idea of how strong the filtering\r\n\t\t * is. The variable _MAX_ is dynamically updated.\r\n\t\t *  @type string\r\n\t\t *  @default (filtered from _MAX_ total entries)\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoFiltered\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\r\n\r\n\r\n\t\t/**\r\n\t\t * If can be useful to append extra information to the info string at times,\r\n\t\t * and this variable does exactly that. This information will be appended to\r\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\r\n\t\t * being used) at all times.\r\n\t\t *  @type string\r\n\t\t *  @default <i>Empty string</i>\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoPostFix\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoPostFix\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * This decimal place operator is a little different from the other\r\n\t\t * language options since DataTables doesn't output floating point\r\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\r\n\t\t * what this parameter does is modify the sort methods of the table so\r\n\t\t * that numbers which are in a format which has a character other than\r\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\r\n\t\t *\r\n\t\t * Note that numbers with different decimal places cannot be shown in\r\n\t\t * the same table and still be sortable, the table must be consistent.\r\n\t\t * However, multiple different tables on the page can use different\r\n\t\t * decimal place characters.\r\n\t\t *  @type string\r\n\t\t *  @default \r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.decimal\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"decimal\": \",\"\r\n\t\t *          \"thousands\": \".\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sDecimal\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\r\n\t\t * used to format large numbers that are used in the table information.\r\n\t\t * By default a comma is used, but this can be trivially changed to any\r\n\t\t * character you wish with this parameter.\r\n\t\t *  @type string\r\n\t\t *  @default ,\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.thousands\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"thousands\": \"'\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sThousands\": \",\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Detail the action that will be taken when the drop down menu for the\r\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\r\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\r\n\t\t * with a custom select box if required.\r\n\t\t *  @type string\r\n\t\t *  @default Show _MENU_ entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.lengthMenu\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Language change only\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Language and options change\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"lengthMenu\": 'Display <select>'+\r\n\t\t *            '<option value=\"10\">10</option>'+\r\n\t\t *            '<option value=\"20\">20</option>'+\r\n\t\t *            '<option value=\"30\">30</option>'+\r\n\t\t *            '<option value=\"40\">40</option>'+\r\n\t\t *            '<option value=\"50\">50</option>'+\r\n\t\t *            '<option value=\"-1\">All</option>'+\r\n\t\t *            '</select> records'\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\r\n\t\t * gathering the data, this message is shown in an empty row in the table to\r\n\t\t * indicate to the end user the the data is being loaded. Note that this\r\n\t\t * parameter is not used when loading data by server-side processing, just\r\n\t\t * Ajax sourced data with client-side processing.\r\n\t\t *  @type string\r\n\t\t *  @default Loading...\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.loadingRecords\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"loadingRecords\": \"Please wait - loading...\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sLoadingRecords\": \"Loading...\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Text which is displayed when the table is processing a user action\r\n\t\t * (usually a sort command or similar).\r\n\t\t *  @type string\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.processing\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"processing\": \"DataTables is currently busy\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sProcessing\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Details the actions that will be taken when the user types into the\r\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\r\n\t\t * is replaced with the HTML text box for the filtering input allowing\r\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\r\n\t\t * then the input box is appended to the string automatically.\r\n\t\t *  @type string\r\n\t\t *  @default Search:\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.search\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Input text box will be appended at the end automatically\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"search\": \"Filter records:\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Specify where the filter should appear\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sSearch\": \"Search:\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Assign a `placeholder` attribute to the search `input` element\r\n\t\t *  @type string\r\n\t\t *  @default \r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\r\n\t\t */\r\n\t\t\"sSearchPlaceholder\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * All of the language information can be stored in a file on the\r\n\t\t * server-side, which DataTables will look up if this parameter is passed.\r\n\t\t * It must store the URL of the language file, which is in a JSON format,\r\n\t\t * and the object has the same properties as the oLanguage object in the\r\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\r\n\t\t * the example language files to see how this works in action.\r\n\t\t *  @type string\r\n\t\t *  @default <i>Empty string - i.e. disabled</i>\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.url\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"url\": \"https://www.sprymedia.co.uk/dataTables/lang.txt\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sUrl\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Text shown inside the table records when the is no information to be\r\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\r\n\t\t * information in the table at all (regardless of filtering).\r\n\t\t *  @type string\r\n\t\t *  @default No matching records found\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.zeroRecords\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"zeroRecords\": \"No records to display\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sZeroRecords\": \"No matching records found\"\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * This parameter allows you to have define the global filtering state at\r\n\t * initialisation time. As an object the `search` parameter must be\r\n\t * defined, but all other parameters are optional. When `regex` is true,\r\n\t * the search string will be treated as a regular expression, when false\r\n\t * (default) it will be treated as a straight string. When `smart`\r\n\t * DataTables will use it's smart filtering methods (to word match at\r\n\t * any point in the data), when false this will not be done.\r\n\t *  @namespace\r\n\t *  @extends DataTable.models.oSearch\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.search\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"search\": {\"search\": \"Initial search\"}\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * By default DataTables will look for the property `data` (or `aaData` for\r\n\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\r\n\t * source or for server-side processing - this parameter allows that\r\n\t * property to be changed. You can use Javascript dotted object notation to\r\n\t * get a data source for multiple levels of nesting.\r\n\t *  @type string\r\n\t *  @default data\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.ajaxDataProp\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sAjaxDataProp\": \"data\",\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * You can instruct DataTables to load data from an external\r\n\t * source using this parameter (use aData if you want to pass data in you\r\n\t * already have). Simply provide a url a JSON object can be obtained from.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.ajaxSource\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sAjaxSource\": null,\r\n\r\n\r\n\t/**\r\n\t * This initialisation variable allows you to specify exactly where in the\r\n\t * DOM you want DataTables to inject the various controls it adds to the page\r\n\t * (for example you might want the pagination controls at the top of the\r\n\t * table). DIV elements (with or without a custom class) can also be added to\r\n\t * aid styling. The follow syntax is used:\r\n\t *   <ul>\r\n\t *     <li>The following options are allowed:\r\n\t *       <ul>\r\n\t *         <li>'l' - Length changing</li>\r\n\t *         <li>'f' - Filtering input</li>\r\n\t *         <li>'t' - The table!</li>\r\n\t *         <li>'i' - Information</li>\r\n\t *         <li>'p' - Pagination</li>\r\n\t *         <li>'r' - pRocessing</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>The following constants are allowed:\r\n\t *       <ul>\r\n\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\r\n\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>The following syntax is expected:\r\n\t *       <ul>\r\n\t *         <li>'&lt;' and '&gt;' - div elements</li>\r\n\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\r\n\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>Examples:\r\n\t *       <ul>\r\n\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\r\n\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *   </ul>\r\n\t *  @type string\r\n\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\r\n\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.dom\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sDom\": \"lfrtip\",\r\n\r\n\r\n\t/**\r\n\t * Search delay option. This will throttle full table searches that use the\r\n\t * DataTables provided search input element (it does not effect calls to\r\n\t * `dt-api search()`, providing a delay before the search is made.\r\n\t *  @type integer\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.searchDelay\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searchDelay\": 200\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"searchDelay\": null,\r\n\r\n\r\n\t/**\r\n\t * DataTables features six different built-in options for the buttons to\r\n\t * display for pagination control:\r\n\t *\r\n\t * * `numbers` - Page number buttons only\r\n\t * * `simple` - 'Previous' and 'Next' buttons only\r\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\r\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\r\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\r\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\r\n\t *  \r\n\t * Further methods can be added using {@link DataTable.ext.oPagination}.\r\n\t *  @type string\r\n\t *  @default simple_numbers\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.pagingType\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"pagingType\": \"full_numbers\"\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"sPaginationType\": \"simple_numbers\",\r\n\r\n\r\n\t/**\r\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\r\n\t * certain layout, or you have a large number of columns in the table, you\r\n\t * can enable x-scrolling to show the table in a viewport, which can be\r\n\t * scrolled. This property can be `true` which will allow the table to\r\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\r\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\r\n\t * is recommended.\r\n\t *  @type boolean|string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.scrollX\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollX\": true,\r\n\t *        \"scrollCollapse\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollX\": \"\",\r\n\r\n\r\n\t/**\r\n\t * This property can be used to force a DataTable to use more width than it\r\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\r\n\t * table which requires to be well spaced, this parameter is useful for\r\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\r\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\r\n\t * measurement).\r\n\t *  @type string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.scrollXInner\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollX\": \"100%\",\r\n\t *        \"scrollXInner\": \"110%\"\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollXInner\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\r\n\t * to the given height, and enable scrolling for any data which overflows the\r\n\t * current viewport. This can be used as an alternative to paging to display\r\n\t * a lot of data in a small area (although paging and scrolling can both be\r\n\t * enabled at the same time). This property can be any CSS unit, or a number\r\n\t * (in which case it will be treated as a pixel measurement).\r\n\t *  @type string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.scrollY\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200px\",\r\n\t *        \"paginate\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollY\": \"\",\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * Set the HTTP method that is used to make the Ajax call for server-side\r\n\t * processing or Ajax sourced data.\r\n\t *  @type string\r\n\t *  @default GET\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverMethod\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sServerMethod\": \"GET\",\r\n\r\n\r\n\t/**\r\n\t * DataTables makes use of renderers when displaying HTML elements for\r\n\t * a table. These renderers can be added or modified by plug-ins to\r\n\t * generate suitable mark-up for a site. For example the Bootstrap\r\n\t * integration plug-in for DataTables uses a paging button renderer to\r\n\t * display pagination buttons in the mark-up required by Bootstrap.\r\n\t *\r\n\t * For further information about the renderers available see\r\n\t * DataTable.ext.renderer\r\n\t *  @type string|object\r\n\t *  @default null\r\n\t *\r\n\t *  @name DataTable.defaults.renderer\r\n\t *\r\n\t */\r\n\t\"renderer\": null,\r\n\r\n\r\n\t/**\r\n\t * Set the data property name that DataTables should use to get a row's id\r\n\t * to set as the `id` property in the node.\r\n\t *  @type string\r\n\t *  @default DT_RowId\r\n\t *\r\n\t *  @name DataTable.defaults.rowId\r\n\t */\r\n\t\"rowId\": \"DT_RowId\"\r\n};\r\n\r\n_fnHungarianMap( DataTable.defaults );\r\n\r\n\r\n\r\n/*\r\n * Developer note - See note in model.defaults.js about the use of Hungarian\r\n * notation and camel case.\r\n */\r\n\r\n/**\r\n * Column options that can be given to DataTables at initialisation time.\r\n *  @namespace\r\n */\r\nDataTable.defaults.column = {\r\n\t/**\r\n\t * Define which column(s) an order will occur on for this column. This\r\n\t * allows a column's ordering to take multiple columns into account when\r\n\t * doing a sort or use the data from a different column. For example first\r\n\t * name / last name columns make sense to do a multi-column sort over the\r\n\t * two columns.\r\n\t *  @type array|int\r\n\t *  @default null <i>Takes the value of the column index automatically</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderData\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\r\n\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\r\n\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"orderData\": [ 0, 1 ] },\r\n\t *          { \"orderData\": [ 1, 0 ] },\r\n\t *          { \"orderData\": 2 },\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aDataSort\": null,\r\n\t\"iDataSort\": -1,\r\n\r\n\r\n\t/**\r\n\t * You can control the default ordering direction, and even alter the\r\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\r\n\t * using this parameter.\r\n\t *  @type array\r\n\t *  @default [ 'asc', 'desc' ]\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderSequence\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\r\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\r\n\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          { \"orderSequence\": [ \"asc\" ] },\r\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\r\n\t *          { \"orderSequence\": [ \"desc\" ] },\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"asSorting\": [ 'asc', 'desc' ],\r\n\r\n\r\n\t/**\r\n\t * Enable or disable filtering on the data in this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.searchable\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"searchable\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"searchable\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bSearchable\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable ordering on this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderable\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderable\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"orderable\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortable\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the display of this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.visible\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"visible\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"visible\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bVisible\": true,\r\n\r\n\r\n\t/**\r\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\r\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n\t * allowing you to modify the DOM element (add background colour for example) when the\r\n\t * element is available.\r\n\t *  @type function\r\n\t *  @param {element} td The TD node that has been created\r\n\t *  @param {*} cellData The Data for the cell\r\n\t *  @param {array|object} rowData The data for the whole row\r\n\t *  @param {int} row The row index for the aoData data store\r\n\t *  @param {int} col The column index for aoColumns\r\n\t *\r\n\t *  @name DataTable.defaults.column.createdCell\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [3],\r\n\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\r\n\t *            if ( cellData == \"1.7\" ) {\r\n\t *              $(td).css('color', 'blue')\r\n\t *            }\r\n\t *          }\r\n\t *        } ]\r\n\t *      });\r\n\t *    } );\r\n\t */\r\n\t\"fnCreatedCell\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter has been replaced by `data` in DataTables to ensure naming\r\n\t * consistency. `dataProp` can still be used, as there is backwards\r\n\t * compatibility in DataTables for this option, but it is strongly\r\n\t * recommended that you use `data` in preference to `dataProp`.\r\n\t *  @name DataTable.defaults.column.dataProp\r\n\t */\r\n\r\n\r\n\t/**\r\n\t * This property can be used to read data from any data source property,\r\n\t * including deeply nested objects / properties. `data` can be given in a\r\n\t * number of different ways which effect its behaviour:\r\n\t *\r\n\t * * `integer` - treated as an array index for the data source. This is the\r\n\t *   default that DataTables uses (incrementally increased for each column).\r\n\t * * `string` - read an object property from the data source. There are\r\n\t *   three 'special' options that can be used in the string to alter how\r\n\t *   DataTables reads the data from the source object:\r\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n\t *      Javascript to read from nested objects, so to can the options\r\n\t *      specified in `data`. For example: `browser.version` or\r\n\t *      `browser.name`. If your object parameter name contains a period, use\r\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n\t *    * `[]` - Array notation. DataTables can automatically combine data\r\n\t *      from and array source, joining the data with the characters provided\r\n\t *      between the two brackets. For example: `name[, ]` would provide a\r\n\t *      comma-space separated list from the source array. If no characters\r\n\t *      are provided between the brackets, the original array source is\r\n\t *      returned.\r\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n\t *      execute a function of the name given. For example: `browser()` for a\r\n\t *      simple function on the data source, `browser.version()` for a\r\n\t *      function in a nested property or even `browser().version` to get an\r\n\t *      object property if the function called returns an object. Note that\r\n\t *      function notation is recommended for use in `render` rather than\r\n\t *      `data` as it is much simpler to use as a renderer.\r\n\t * * `null` - use the original data source for the row rather than plucking\r\n\t *   data directly from it. This action has effects on two other\r\n\t *   initialisation options:\r\n\t *    * `defaultContent` - When null is given as the `data` option and\r\n\t *      `defaultContent` is specified for the column, the value defined by\r\n\t *      `defaultContent` will be used for the cell.\r\n\t *    * `render` - When null is used for the `data` option and the `render`\r\n\t *      option is specified for the column, the whole data source for the\r\n\t *      row is used for the renderer.\r\n\t * * `function` - the function given will be executed whenever DataTables\r\n\t *   needs to set or get the data for a cell in the column. The function\r\n\t *   takes three parameters:\r\n\t *    * Parameters:\r\n\t *      * `{array|object}` The data source for the row\r\n\t *      * `{string}` The type call data requested - this will be 'set' when\r\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\r\n\t *        when gathering data. Note that when `undefined` is given for the\r\n\t *        type DataTables expects to get the raw data for the object back<\r\n\t *      * `{*}` Data to set when the second parameter is 'set'.\r\n\t *    * Return:\r\n\t *      * The return value from the function is not required when 'set' is\r\n\t *        the type of call, but otherwise the return is what will be used\r\n\t *        for the data requested.\r\n\t *\r\n\t * Note that `data` is a getter and setter option. If you just require\r\n\t * formatting of data for output, you will likely want to use `render` which\r\n\t * is simply a getter and thus simpler to use.\r\n\t *\r\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\r\n\t * name change reflects the flexibility of this property and is consistent\r\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\r\n\t * be used by DataTables, as it automatically maps the old name to the new\r\n\t * if required.\r\n\t *\r\n\t *  @type string|int|function|null\r\n\t *  @default null <i>Use automatically calculated column index</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.data\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Read table data from objects\r\n\t *    // JSON structure for each row:\r\n\t *    //   {\r\n\t *    //      \"engine\": {value},\r\n\t *    //      \"browser\": {value},\r\n\t *    //      \"platform\": {value},\r\n\t *    //      \"version\": {value},\r\n\t *    //      \"grade\": {value}\r\n\t *    //   }\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/objects.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          { \"data\": \"platform\" },\r\n\t *          { \"data\": \"version\" },\r\n\t *          { \"data\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Read information from deeply nested objects\r\n\t *    // JSON structure for each row:\r\n\t *    //   {\r\n\t *    //      \"engine\": {value},\r\n\t *    //      \"browser\": {value},\r\n\t *    //      \"platform\": {\r\n\t *    //         \"inner\": {value}\r\n\t *    //      },\r\n\t *    //      \"details\": [\r\n\t *    //         {value}, {value}\r\n\t *    //      ]\r\n\t *    //   }\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/deep.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          { \"data\": \"platform.inner\" },\r\n\t *          { \"data\": \"details.0\" },\r\n\t *          { \"data\": \"details.1\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `data` as a function to provide different information for\r\n\t *    // sorting, filtering and display. In this case, currency (price)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": function ( source, type, val ) {\r\n\t *            if (type === 'set') {\r\n\t *              source.price = val;\r\n\t *              // Store the computed display and filter values for efficiency\r\n\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\r\n\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\r\n\t *              return;\r\n\t *            }\r\n\t *            else if (type === 'display') {\r\n\t *              return source.price_display;\r\n\t *            }\r\n\t *            else if (type === 'filter') {\r\n\t *              return source.price_filter;\r\n\t *            }\r\n\t *            // 'sort', 'type' and undefined all just use the integer\r\n\t *            return source.price;\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using default content\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null,\r\n\t *          \"defaultContent\": \"Click to edit\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using array notation - outputting a list from an array\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": \"name[, ]\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t */\r\n\t\"mData\": null,\r\n\r\n\r\n\t/**\r\n\t * This property is the rendering partner to `data` and it is suggested that\r\n\t * when you want to manipulate data for display (including filtering,\r\n\t * sorting etc) without altering the underlying data for the table, use this\r\n\t * property. `render` can be considered to be the the read only companion to\r\n\t * `data` which is read / write (then as such more complex). Like `data`\r\n\t * this option can be given in a number of different ways to effect its\r\n\t * behaviour:\r\n\t *\r\n\t * * `integer` - treated as an array index for the data source. This is the\r\n\t *   default that DataTables uses (incrementally increased for each column).\r\n\t * * `string` - read an object property from the data source. There are\r\n\t *   three 'special' options that can be used in the string to alter how\r\n\t *   DataTables reads the data from the source object:\r\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n\t *      Javascript to read from nested objects, so to can the options\r\n\t *      specified in `data`. For example: `browser.version` or\r\n\t *      `browser.name`. If your object parameter name contains a period, use\r\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n\t *    * `[]` - Array notation. DataTables can automatically combine data\r\n\t *      from and array source, joining the data with the characters provided\r\n\t *      between the two brackets. For example: `name[, ]` would provide a\r\n\t *      comma-space separated list from the source array. If no characters\r\n\t *      are provided between the brackets, the original array source is\r\n\t *      returned.\r\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n\t *      execute a function of the name given. For example: `browser()` for a\r\n\t *      simple function on the data source, `browser.version()` for a\r\n\t *      function in a nested property or even `browser().version` to get an\r\n\t *      object property if the function called returns an object.\r\n\t * * `object` - use different data for the different data types requested by\r\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\r\n\t *   of the object is the data type the property refers to and the value can\r\n\t *   defined using an integer, string or function using the same rules as\r\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\r\n\t *   This is the default value to use if you haven't specified a value for\r\n\t *   the data type requested by DataTables.\r\n\t * * `function` - the function given will be executed whenever DataTables\r\n\t *   needs to set or get the data for a cell in the column. The function\r\n\t *   takes three parameters:\r\n\t *    * Parameters:\r\n\t *      * {array|object} The data source for the row (based on `data`)\r\n\t *      * {string} The type call data requested - this will be 'filter',\r\n\t *        'display', 'type' or 'sort'.\r\n\t *      * {array|object} The full data source for the row (not based on\r\n\t *        `data`)\r\n\t *    * Return:\r\n\t *      * The return value from the function is what will be used for the\r\n\t *        data requested.\r\n\t *\r\n\t *  @type string|int|function|object|null\r\n\t *  @default null Use the data source value.\r\n\t *\r\n\t *  @name DataTable.defaults.column.render\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Create a comma separated list from an array of objects\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/deep.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          {\r\n\t *            \"data\": \"platform\",\r\n\t *            \"render\": \"[, ].name\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Execute a function to obtain data\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null, // Use the full data source object for the renderer's source\r\n\t *          \"render\": \"browserName()\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // As an object, extracting different data for the different types\r\n\t *    // This would be used with a data source such as:\r\n\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\r\n\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\r\n\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\r\n\t *    // the formatted phone number is the one that is shown in the table.\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null, // Use the full data source object for the renderer's source\r\n\t *          \"render\": {\r\n\t *            \"_\": \"phone\",\r\n\t *            \"filter\": \"phone_filter\",\r\n\t *            \"display\": \"phone_display\"\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Use as a function to create a link from the data source\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": \"download_link\",\r\n\t *          \"render\": function ( data, type, full ) {\r\n\t *            return '<a href=\"'+data+'\">Download</a>';\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"mRender\": null,\r\n\r\n\r\n\t/**\r\n\t * Change the cell type created for the column - either TD cells or TH cells. This\r\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\r\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\r\n\t *  @type string\r\n\t *  @default td\r\n\t *\r\n\t *  @name DataTable.defaults.column.cellType\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Make the first column use TH cells\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"cellType\": \"th\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sCellType\": \"td\",\r\n\r\n\r\n\t/**\r\n\t * Class to give to each cell in this column.\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.class\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"class\": \"my_class\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sClass\": \"\",\r\n\r\n\t/**\r\n\t * When DataTables calculates the column widths to assign to each column,\r\n\t * it finds the longest string in each column and then constructs a\r\n\t * temporary table and reads the widths from that. The problem with this\r\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n\t * string - thus the calculation can go wrong (doing it properly and putting\r\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n\t * a \"work around\" we provide this option. It will append its value to the\r\n\t * text that is found to be the longest string for the column - i.e. padding.\r\n\t * Generally you shouldn't need this!\r\n\t *  @type string\r\n\t *  @default <i>Empty string<i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.contentPadding\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          {\r\n\t *            \"contentPadding\": \"mmm\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sContentPadding\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Allows a default value to be given for a column's data, and will be used\r\n\t * whenever a null data source is encountered (this can be because `data`\r\n\t * is set to null, or because the data source itself is null).\r\n\t *  @type string\r\n\t *  @default null\r\n\t *\r\n\t *  @name DataTable.defaults.column.defaultContent\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          {\r\n\t *            \"data\": null,\r\n\t *            \"defaultContent\": \"Edit\",\r\n\t *            \"targets\": [ -1 ]\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          {\r\n\t *            \"data\": null,\r\n\t *            \"defaultContent\": \"Edit\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sDefaultContent\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter is only used in DataTables' server-side processing. It can\r\n\t * be exceptionally useful to know what columns are being displayed on the\r\n\t * client side, and to map these to database fields. When defined, the names\r\n\t * also allow DataTables to reorder information from the server if it comes\r\n\t * back in an unexpected order (i.e. if you switch your columns around on the\r\n\t * client-side, your server-side code does not also need updating).\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.name\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\r\n\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\r\n\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\r\n\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\r\n\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"name\": \"engine\" },\r\n\t *          { \"name\": \"browser\" },\r\n\t *          { \"name\": \"platform\" },\r\n\t *          { \"name\": \"version\" },\r\n\t *          { \"name\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sName\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Defines a data source type for the ordering which can be used to read\r\n\t * real-time information from the table (updating the internally cached\r\n\t * version) prior to ordering. This allows ordering to occur on user\r\n\t * editable elements such as form inputs.\r\n\t *  @type string\r\n\t *  @default std\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderDataType\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\r\n\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\r\n\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\r\n\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          { \"orderDataType\": \"dom-text\" },\r\n\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\r\n\t *          { \"orderDataType\": \"dom-select\" },\r\n\t *          { \"orderDataType\": \"dom-checkbox\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sSortDataType\": \"std\",\r\n\r\n\r\n\t/**\r\n\t * The title of this column.\r\n\t *  @type string\r\n\t *  @default null <i>Derived from the 'TH' value for this column in the\r\n\t *    original HTML table.</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.title\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"My column title\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sTitle\": null,\r\n\r\n\r\n\t/**\r\n\t * The type allows you to specify how the data for this column will be\r\n\t * ordered. Four types (string, numeric, date and html (which will strip\r\n\t * HTML tags before ordering)) are currently available. Note that only date\r\n\t * formats understood by Javascript's Date() object will be accepted as type\r\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\r\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\r\n\t * through plug-ins.\r\n\t *  @type string\r\n\t *  @default null <i>Auto-detected from raw data</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.type\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"type\": \"html\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sType\": null,\r\n\r\n\r\n\t/**\r\n\t * Defining the width of the column, this parameter may take any CSS value\r\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\r\n\t * been given a specific width through this interface ensuring that the table\r\n\t * remains readable.\r\n\t *  @type string\r\n\t *  @default null <i>Automatic</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.width\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"width\": \"20%\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sWidth\": null\r\n};\r\n\r\n_fnHungarianMap( DataTable.defaults.column );\r\n\r\n\r\n\r\n/**\r\n * DataTables settings object - this holds all the information needed for a\r\n * given table, including configuration, data and current application of the\r\n * table options. DataTables does not have a single instance for each DataTable\r\n * with the settings attached to that instance, but rather instances of the\r\n * DataTable \"class\" are created on-the-fly as needed (typically by a\r\n * $().dataTable() call) and the settings object is then applied to that\r\n * instance.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults} but this\r\n * one is the internal data store for DataTables's cache of columns. It should\r\n * NOT be manipulated outside of DataTables. Any configuration should be done\r\n * through the initialisation options.\r\n *  @namespace\r\n *  @todo Really should attach the settings object to individual instances so we\r\n *    don't need to create new instances on each $().dataTable() call (if the\r\n *    table already exists). It would also save passing oSettings around and\r\n *    into every single function. However, this is a very significant\r\n *    architecture change for DataTables and will almost certainly break\r\n *    backwards compatibility with older installations. This is something that\r\n *    will be done in 2.0.\r\n */\r\nDataTable.models.oSettings = {\r\n\t/**\r\n\t * Primary features of DataTables and their enablement state.\r\n\t *  @namespace\r\n\t */\r\n\t\"oFeatures\": {\r\n\r\n\t\t/**\r\n\t\t * Flag to say if DataTables should automatically try to calculate the\r\n\t\t * optimum table and columns widths (true) or not (false).\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bAutoWidth\": null,\r\n\r\n\t\t/**\r\n\t\t * Delay the creation of TR and TD elements until they are actually\r\n\t\t * needed by a driven page draw. This can give a significant speed\r\n\t\t * increase for Ajax source and Javascript source data, but makes no\r\n\t\t * difference at all for DOM and server-side processing tables.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bDeferRender\": null,\r\n\r\n\t\t/**\r\n\t\t * Enable filtering on the table or not. Note that if this is disabled\r\n\t\t * then there is no filtering at all on the table, including fnFilter.\r\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bFilter\": null,\r\n\r\n\t\t/**\r\n\t\t * Table information element (the 'Showing x of y records' div) enable\r\n\t\t * flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bInfo\": null,\r\n\r\n\t\t/**\r\n\t\t * Present a user control allowing the end user to change the page size\r\n\t\t * when pagination is enabled.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bLengthChange\": null,\r\n\r\n\t\t/**\r\n\t\t * Pagination enabled or not. Note that if this is disabled then length\r\n\t\t * changing must also be disabled.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bPaginate\": null,\r\n\r\n\t\t/**\r\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\r\n\t\t * user request - typically an Ajax request for server-side processing.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bProcessing\": null,\r\n\r\n\t\t/**\r\n\t\t * Server-side processing enabled flag - when enabled DataTables will\r\n\t\t * get all data from the server for every draw - there is no filtering,\r\n\t\t * sorting or paging done on the client-side.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bServerSide\": null,\r\n\r\n\t\t/**\r\n\t\t * Sorting enablement flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSort\": null,\r\n\r\n\t\t/**\r\n\t\t * Multi-column sorting\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSortMulti\": null,\r\n\r\n\t\t/**\r\n\t\t * Apply a class to the columns which are being sorted to provide a\r\n\t\t * visual highlight or not. This can slow things down when enabled since\r\n\t\t * there is a lot of DOM interaction.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSortClasses\": null,\r\n\r\n\t\t/**\r\n\t\t * State saving enablement flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bStateSave\": null\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Scrolling settings for a table.\r\n\t *  @namespace\r\n\t */\r\n\t\"oScroll\": {\r\n\t\t/**\r\n\t\t * When the table is shorter in height than sScrollY, collapse the\r\n\t\t * table container down to the height of the table (when true).\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bCollapse\": null,\r\n\r\n\t\t/**\r\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\r\n\t\t * during table initialisation.\r\n\t\t *  @type int\r\n\t\t *  @default 0\r\n\t\t */\r\n\t\t\"iBarWidth\": 0,\r\n\r\n\t\t/**\r\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\r\n\t\t * disabled if an empty string.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t */\r\n\t\t\"sX\": null,\r\n\r\n\t\t/**\r\n\t\t * Width to expand the table to when using x-scrolling. Typically you\r\n\t\t * should not need to use this.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t *  @deprecated\r\n\t\t */\r\n\t\t\"sXInner\": null,\r\n\r\n\t\t/**\r\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\r\n\t\t * if an empty string.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t */\r\n\t\t\"sY\": null\r\n\t},\r\n\r\n\t/**\r\n\t * Language information for the table.\r\n\t *  @namespace\r\n\t *  @extends DataTable.defaults.oLanguage\r\n\t */\r\n\t\"oLanguage\": {\r\n\t\t/**\r\n\t\t * Information callback function. See\r\n\t\t * {@link DataTable.defaults.fnInfoCallback}\r\n\t\t *  @type function\r\n\t\t *  @default null\r\n\t\t */\r\n\t\t\"fnInfoCallback\": null\r\n\t},\r\n\r\n\t/**\r\n\t * Browser support parameters\r\n\t *  @namespace\r\n\t */\r\n\t\"oBrowser\": {\r\n\t\t/**\r\n\t\t * Indicate if the browser incorrectly calculates width:100% inside a\r\n\t\t * scrolling element (IE6/7)\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bScrollOversize\": false,\r\n\r\n\t\t/**\r\n\t\t * Determine if the vertical scrollbar is on the right or left of the\r\n\t\t * scrolling container - needed for rtl language layout, although not\r\n\t\t * all browsers move the scrollbar (Safari).\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bScrollbarLeft\": false,\r\n\r\n\t\t/**\r\n\t\t * Flag for if `getBoundingClientRect` is fully supported or not\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bBounding\": false,\r\n\r\n\t\t/**\r\n\t\t * Browser scrollbar width\r\n\t\t *  @type integer\r\n\t\t *  @default 0\r\n\t\t */\r\n\t\t\"barWidth\": 0\r\n\t},\r\n\r\n\r\n\t\"ajax\": null,\r\n\r\n\r\n\t/**\r\n\t * Array referencing the nodes which are used for the features. The\r\n\t * parameters of this object match what is allowed by sDom - i.e.\r\n\t *   <ul>\r\n\t *     <li>'l' - Length changing</li>\r\n\t *     <li>'f' - Filtering input</li>\r\n\t *     <li>'t' - The table!</li>\r\n\t *     <li>'i' - Information</li>\r\n\t *     <li>'p' - Pagination</li>\r\n\t *     <li>'r' - pRocessing</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aanFeatures\": [],\r\n\r\n\t/**\r\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\r\n\t * information.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoData\": [],\r\n\r\n\t/**\r\n\t * Array of indexes which are in the current display (after filtering etc)\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aiDisplay\": [],\r\n\r\n\t/**\r\n\t * Array of indexes for display - no filtering\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aiDisplayMaster\": [],\r\n\r\n\t/**\r\n\t * Map of row ids to data indexes\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"aIds\": {},\r\n\r\n\t/**\r\n\t * Store information about each column that is in use\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoColumns\": [],\r\n\r\n\t/**\r\n\t * Store information about the table's header\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoHeader\": [],\r\n\r\n\t/**\r\n\t * Store information about the table's footer\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoFooter\": [],\r\n\r\n\t/**\r\n\t * Store the applied global search information in case we want to force a\r\n\t * research or compare the old search to a new one.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @namespace\r\n\t *  @extends DataTable.models.oSearch\r\n\t */\r\n\t\"oPreviousSearch\": {},\r\n\r\n\t/**\r\n\t * Store the applied search for each column - see\r\n\t * {@link DataTable.models.oSearch} for the format that is used for the\r\n\t * filtering information for each column.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoPreSearchCols\": [],\r\n\r\n\t/**\r\n\t * Sorting that is applied to the table. Note that the inner arrays are\r\n\t * used in the following manner:\r\n\t * <ul>\r\n\t *   <li>Index 0 - column number</li>\r\n\t *   <li>Index 1 - current sorting direction</li>\r\n\t * </ul>\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @todo These inner arrays should really be objects\r\n\t */\r\n\t\"aaSorting\": null,\r\n\r\n\t/**\r\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\r\n\t * aaSorting).\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aaSortingFixed\": [],\r\n\r\n\t/**\r\n\t * Classes to use for the striping of a table.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"asStripeClasses\": null,\r\n\r\n\t/**\r\n\t * If restoring a table - we should restore its striping classes as well\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"asDestroyStripes\": [],\r\n\r\n\t/**\r\n\t * If restoring a table - we should restore its width\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"sDestroyWidth\": 0,\r\n\r\n\t/**\r\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoRowCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for the header on each draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoHeaderCallback\": [],\r\n\r\n\t/**\r\n\t * Callback function for the footer on each draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoFooterCallback\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for draw callback functions\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoDrawCallback\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for row created function\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoRowCreatedCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for just before the table is redrawn. A return of\r\n\t * false will be used to cancel the draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoPreDrawCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for when the table has been initialised.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoInitComplete\": [],\r\n\r\n\r\n\t/**\r\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\r\n\t * saving state.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateSaveParams\": [],\r\n\r\n\t/**\r\n\t * Callbacks for modifying the settings that have been stored for state saving\r\n\t * prior to using the stored values to restore the state.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoadParams\": [],\r\n\r\n\t/**\r\n\t * Callbacks for operating on the settings object once the saved state has been\r\n\t * loaded\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoaded\": [],\r\n\r\n\t/**\r\n\t * Cache the table ID for quick access\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t */\r\n\t\"sTableId\": \"\",\r\n\r\n\t/**\r\n\t * The TABLE node for the main table\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTable\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the thead element\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTHead\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the tfoot element - if it exists\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTFoot\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the tbody element\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTBody\": null,\r\n\r\n\t/**\r\n\t * Cache the wrapper node (contains all DataTables controlled elements)\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTableWrapper\": null,\r\n\r\n\t/**\r\n\t * Indicate if when using server-side processing the loading of data\r\n\t * should be deferred until the second draw.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bDeferLoading\": false,\r\n\r\n\t/**\r\n\t * Indicate if all required information has been read in\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bInitialised\": false,\r\n\r\n\t/**\r\n\t * Information about open rows. Each object in the array has the parameters\r\n\t * 'nTr' and 'nParent'\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoOpenRows\": [],\r\n\r\n\t/**\r\n\t * Dictate the positioning of DataTables' control elements - see\r\n\t * {@link DataTable.model.oInit.sDom}.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sDom\": null,\r\n\r\n\t/**\r\n\t * Search delay (in mS)\r\n\t *  @type integer\r\n\t *  @default null\r\n\t */\r\n\t\"searchDelay\": null,\r\n\r\n\t/**\r\n\t * Which type of pagination should be used.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default two_button\r\n\t */\r\n\t\"sPaginationType\": \"two_button\",\r\n\r\n\t/**\r\n\t * The state duration (for `stateSave`) in seconds.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"iStateDuration\": 0,\r\n\r\n\t/**\r\n\t * Array of callback functions for state saving. Each array element is an\r\n\t * object with the following parameters:\r\n\t *   <ul>\r\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n\t *       and the JSON string to save that has been thus far created. Returns\r\n\t *       a JSON string to be inserted into a json object\r\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\r\n\t *     <li>string:sName - name of callback</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateSave\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for state loading. Each array element is an\r\n\t * object with the following parameters:\r\n\t *   <ul>\r\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n\t *       and the object stored. May return false to cancel state loading</li>\r\n\t *     <li>string:sName - name of callback</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoad\": [],\r\n\r\n\t/**\r\n\t * State that was saved. Useful for back reference\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oSavedState\": null,\r\n\r\n\t/**\r\n\t * State that was loaded. Useful for back reference\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oLoadedState\": null,\r\n\r\n\t/**\r\n\t * Source url for AJAX data for the table.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sAjaxSource\": null,\r\n\r\n\t/**\r\n\t * Property from a given object from which to read the table data from. This\r\n\t * can be an empty string (when not server-side processing), in which case\r\n\t * it is  assumed an an array is given directly.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t */\r\n\t\"sAjaxDataProp\": null,\r\n\r\n\t/**\r\n\t * The last jQuery XHR object that was used for server-side data gathering.\r\n\t * This can be used for working with the XHR information in one of the\r\n\t * callbacks\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"jqXHR\": null,\r\n\r\n\t/**\r\n\t * JSON returned from the server in the last Ajax request\r\n\t *  @type object\r\n\t *  @default undefined\r\n\t */\r\n\t\"json\": undefined,\r\n\r\n\t/**\r\n\t * Data submitted as part of the last Ajax request\r\n\t *  @type object\r\n\t *  @default undefined\r\n\t */\r\n\t\"oAjaxData\": undefined,\r\n\r\n\t/**\r\n\t * Function to get the server-side data.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type function\r\n\t */\r\n\t\"fnServerData\": null,\r\n\r\n\t/**\r\n\t * Functions which are called prior to sending an Ajax request so extra\r\n\t * parameters can easily be sent to the server\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoServerParams\": [],\r\n\r\n\t/**\r\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\r\n\t * required).\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t */\r\n\t\"sServerMethod\": null,\r\n\r\n\t/**\r\n\t * Format numbers for display.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type function\r\n\t */\r\n\t\"fnFormatNumber\": null,\r\n\r\n\t/**\r\n\t * List of options that can be used for the user selectable length menu.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aLengthMenu\": null,\r\n\r\n\t/**\r\n\t * Counter for the draws that the table does. Also used as a tracker for\r\n\t * server-side processing\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"iDraw\": 0,\r\n\r\n\t/**\r\n\t * Indicate if a redraw is being done - useful for Ajax\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bDrawing\": false,\r\n\r\n\t/**\r\n\t * Draw index (iDraw) of the last error when parsing the returned data\r\n\t *  @type int\r\n\t *  @default -1\r\n\t */\r\n\t\"iDrawError\": -1,\r\n\r\n\t/**\r\n\t * Paging display length\r\n\t *  @type int\r\n\t *  @default 10\r\n\t */\r\n\t\"_iDisplayLength\": 10,\r\n\r\n\t/**\r\n\t * Paging start point - aiDisplay index\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"_iDisplayStart\": 0,\r\n\r\n\t/**\r\n\t * Server-side processing - number of records in the result set\r\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\r\n\t * this property to get the value of the number of records, regardless of\r\n\t * the server-side processing setting.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *  @private\r\n\t */\r\n\t\"_iRecordsTotal\": 0,\r\n\r\n\t/**\r\n\t * Server-side processing - number of records in the current display set\r\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\r\n\t * this property to get the value of the number of records, regardless of\r\n\t * the server-side processing setting.\r\n\t *  @type boolean\r\n\t *  @default 0\r\n\t *  @private\r\n\t */\r\n\t\"_iRecordsDisplay\": 0,\r\n\r\n\t/**\r\n\t * The classes to use for the table\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"oClasses\": {},\r\n\r\n\t/**\r\n\t * Flag attached to the settings object so you can check in the draw\r\n\t * callback if filtering has been done in the draw. Deprecated in favour of\r\n\t * events.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @deprecated\r\n\t */\r\n\t\"bFiltered\": false,\r\n\r\n\t/**\r\n\t * Flag attached to the settings object so you can check in the draw\r\n\t * callback if sorting has been done in the draw. Deprecated in favour of\r\n\t * events.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @deprecated\r\n\t */\r\n\t\"bSorted\": false,\r\n\r\n\t/**\r\n\t * Indicate that if multiple rows are in the header and there is more than\r\n\t * one unique cell per column, if the top one (true) or bottom one (false)\r\n\t * should be used for sorting / title by DataTables.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSortCellsTop\": null,\r\n\r\n\t/**\r\n\t * Initialisation object that is used for the table\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oInit\": null,\r\n\r\n\t/**\r\n\t * Destroy callback functions - for plug-ins to attach themselves to the\r\n\t * destroy so they can clean up markup and events.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoDestroyCallback\": [],\r\n\r\n\r\n\t/**\r\n\t * Get the number of records in the current record set, before filtering\r\n\t *  @type function\r\n\t */\r\n\t\"fnRecordsTotal\": function ()\r\n\t{\r\n\t\treturn _fnDataSource( this ) == 'ssp' ?\r\n\t\t\tthis._iRecordsTotal * 1 :\r\n\t\t\tthis.aiDisplayMaster.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the number of records in the current record set, after filtering\r\n\t *  @type function\r\n\t */\r\n\t\"fnRecordsDisplay\": function ()\r\n\t{\r\n\t\treturn _fnDataSource( this ) == 'ssp' ?\r\n\t\t\tthis._iRecordsDisplay * 1 :\r\n\t\t\tthis.aiDisplay.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the display end point - aiDisplay index\r\n\t *  @type function\r\n\t */\r\n\t\"fnDisplayEnd\": function ()\r\n\t{\r\n\t\tvar\r\n\t\t\tlen      = this._iDisplayLength,\r\n\t\t\tstart    = this._iDisplayStart,\r\n\t\t\tcalc     = start + len,\r\n\t\t\trecords  = this.aiDisplay.length,\r\n\t\t\tfeatures = this.oFeatures,\r\n\t\t\tpaginate = features.bPaginate;\r\n\r\n\t\tif ( features.bServerSide ) {\r\n\t\t\treturn paginate === false || len === -1 ?\r\n\t\t\t\tstart + records :\r\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ! paginate || calc>records || len===-1 ?\r\n\t\t\t\trecords :\r\n\t\t\t\tcalc;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * The DataTables object for this table\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oInstance\": null,\r\n\r\n\t/**\r\n\t * Unique identifier for each instance of the DataTables object. If there\r\n\t * is an ID on the table node, then it takes that value, otherwise an\r\n\t * incrementing internal counter is used.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sInstance\": null,\r\n\r\n\t/**\r\n\t * tabindex attribute value that is added to DataTables control elements, allowing\r\n\t * keyboard navigation of the table and its controls.\r\n\t */\r\n\t\"iTabIndex\": 0,\r\n\r\n\t/**\r\n\t * DIV container for the footer scrolling table if scrolling\r\n\t */\r\n\t\"nScrollHead\": null,\r\n\r\n\t/**\r\n\t * DIV container for the footer scrolling table if scrolling\r\n\t */\r\n\t\"nScrollFoot\": null,\r\n\r\n\t/**\r\n\t * Last applied sort\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aLastSort\": [],\r\n\r\n\t/**\r\n\t * Stored plug-in instances\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"oPlugins\": {},\r\n\r\n\t/**\r\n\t * Function used to get a row's id from the row's data\r\n\t *  @type function\r\n\t *  @default null\r\n\t */\r\n\t\"rowIdFn\": null,\r\n\r\n\t/**\r\n\t * Data location where to store a row's id\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"rowId\": null\r\n};\r\n\r\n/**\r\n * Extension object for DataTables that is used to provide all extension\r\n * options.\r\n *\r\n * Note that the `DataTable.ext` object is available through\r\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\r\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\r\n *  @namespace\r\n *  @extends DataTable.models.ext\r\n */\r\n\r\n\r\n/**\r\n * DataTables extensions\r\n * \r\n * This namespace acts as a collection area for plug-ins that can be used to\r\n * extend DataTables capabilities. Indeed many of the build in methods\r\n * use this method to provide their own capabilities (sorting methods for\r\n * example).\r\n *\r\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\r\n * reasons\r\n *\r\n *  @namespace\r\n */\r\nDataTable.ext = _ext = {\r\n\t/**\r\n\t * Buttons. For use with the Buttons extension for DataTables. This is\r\n\t * defined here so other extensions can define buttons regardless of load\r\n\t * order. It is _not_ used by DataTables core.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tbuttons: {},\r\n\r\n\r\n\t/**\r\n\t * Element class names\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tclasses: {},\r\n\r\n\r\n\t/**\r\n\t * DataTables build type (expanded by the download builder)\r\n\t *\r\n\t *  @type string\r\n\t */\r\n\tbuilder: \"-source-\",\r\n\r\n\r\n\t/**\r\n\t * Error reporting.\r\n\t * \r\n\t * How should DataTables report an error. Can take the value 'alert',\r\n\t * 'throw', 'none' or a function.\r\n\t *\r\n\t *  @type string|function\r\n\t *  @default alert\r\n\t */\r\n\terrMode: \"alert\",\r\n\r\n\r\n\t/**\r\n\t * Feature plug-ins.\r\n\t * \r\n\t * This is an array of objects which describe the feature plug-ins that are\r\n\t * available to DataTables. These feature plug-ins are then available for\r\n\t * use through the `dom` initialisation option.\r\n\t * \r\n\t * Each feature plug-in is described by an object which must have the\r\n\t * following properties:\r\n\t * \r\n\t * * `fnInit` - function that is used to initialise the plug-in,\r\n\t * * `cFeature` - a character so the feature can be enabled by the `dom`\r\n\t *   instillation option. This is case sensitive.\r\n\t *\r\n\t * The `fnInit` function has the following input parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t *\r\n\t * And the following return is expected:\r\n\t * \r\n\t * * {node|null} The element which contains your feature. Note that the\r\n\t *   return may also be void if your plug-in does not require to inject any\r\n\t *   DOM elements into DataTables control (`dom`) - for example this might\r\n\t *   be useful when developing a plug-in which allows table control via\r\n\t *   keyboard entry\r\n\t *\r\n\t *  @type array\r\n\t *\r\n\t *  @example\r\n\t *    $.fn.dataTable.ext.features.push( {\r\n\t *      \"fnInit\": function( oSettings ) {\r\n\t *        return new TableTools( { \"oDTSettings\": oSettings } );\r\n\t *      },\r\n\t *      \"cFeature\": \"T\"\r\n\t *    } );\r\n\t */\r\n\tfeature: [],\r\n\r\n\r\n\t/**\r\n\t * Row searching.\r\n\t * \r\n\t * This method of searching is complimentary to the default type based\r\n\t * searching, and a lot more comprehensive as it allows you complete control\r\n\t * over the searching logic. Each element in this array is a function\r\n\t * (parameters described below) that is called for every row in the table,\r\n\t * and your logic decides if it should be included in the searching data set\r\n\t * or not.\r\n\t *\r\n\t * Searching functions have the following input parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t * 2. `{array|object}` Data for the row to be processed (same as the\r\n\t *    original format that was passed in as the data source, or an array\r\n\t *    from a DOM data source\r\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\r\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\r\n\t *\r\n\t * And the following return is expected:\r\n\t *\r\n\t * * {boolean} Include the row in the searched result set (true) or not\r\n\t *   (false)\r\n\t *\r\n\t * Note that as with the main search ability in DataTables, technically this\r\n\t * is \"filtering\", since it is subtractive. However, for consistency in\r\n\t * naming we call it searching here.\r\n\t *\r\n\t *  @type array\r\n\t *  @default []\r\n\t *\r\n\t *  @example\r\n\t *    // The following example shows custom search being applied to the\r\n\t *    // fourth column (i.e. the data[3] index) based on two input values\r\n\t *    // from the end-user, matching the data in a certain range.\r\n\t *    $.fn.dataTable.ext.search.push(\r\n\t *      function( settings, data, dataIndex ) {\r\n\t *        var min = document.getElementById('min').value * 1;\r\n\t *        var max = document.getElementById('max').value * 1;\r\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\r\n\t *\r\n\t *        if ( min == \"\" && max == \"\" ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min == \"\" && version < max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min < version && \"\" == max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min < version && version < max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        return false;\r\n\t *      }\r\n\t *    );\r\n\t */\r\n\tsearch: [],\r\n\r\n\r\n\t/**\r\n\t * Selector extensions\r\n\t *\r\n\t * The `selector` option can be used to extend the options available for the\r\n\t * selector modifier options (`selector-modifier` object data type) that\r\n\t * each of the three built in selector types offer (row, column and cell +\r\n\t * their plural counterparts). For example the Select extension uses this\r\n\t * mechanism to provide an option to select only rows, columns and cells\r\n\t * that have been marked as selected by the end user (`{selected: true}`),\r\n\t * which can be used in conjunction with the existing built in selector\r\n\t * options.\r\n\t *\r\n\t * Each property is an array to which functions can be pushed. The functions\r\n\t * take three attributes:\r\n\t *\r\n\t * * Settings object for the host table\r\n\t * * Options object (`selector-modifier` object type)\r\n\t * * Array of selected item indexes\r\n\t *\r\n\t * The return is an array of the resulting item indexes after the custom\r\n\t * selector has been applied.\r\n\t *\r\n\t *  @type object\r\n\t */\r\n\tselector: {\r\n\t\tcell: [],\r\n\t\tcolumn: [],\r\n\t\trow: []\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Internal functions, exposed for used in plug-ins.\r\n\t * \r\n\t * Please note that you should not need to use the internal methods for\r\n\t * anything other than a plug-in (and even then, try to avoid if possible).\r\n\t * The internal function may change between releases.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tinternal: {},\r\n\r\n\r\n\t/**\r\n\t * Legacy configuration options. Enable and disable legacy options that\r\n\t * are available in DataTables.\r\n\t *\r\n\t *  @type object\r\n\t */\r\n\tlegacy: {\r\n\t\t/**\r\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\r\n\t\t * requests\r\n\t\t *\r\n\t\t *  @type boolean\r\n\t\t *  @default null\r\n\t\t */\r\n\t\tajax: null\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Pagination plug-in methods.\r\n\t * \r\n\t * Each entry in this object is a function and defines which buttons should\r\n\t * be shown by the pagination rendering method that is used for the table:\r\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\r\n\t * buttons are displayed in the document, while the functions here tell it\r\n\t * what buttons to display. This is done by returning an array of button\r\n\t * descriptions (what each button will do).\r\n\t *\r\n\t * Pagination types (the four built in options and any additional plug-in\r\n\t * options defined here) can be used through the `paginationType`\r\n\t * initialisation parameter.\r\n\t *\r\n\t * The functions defined take two parameters:\r\n\t *\r\n\t * 1. `{int} page` The current page index\r\n\t * 2. `{int} pages` The number of pages in the table\r\n\t *\r\n\t * Each function is expected to return an array where each element of the\r\n\t * array can be one of:\r\n\t *\r\n\t * * `first` - Jump to first page when activated\r\n\t * * `last` - Jump to last page when activated\r\n\t * * `previous` - Show previous page when activated\r\n\t * * `next` - Show next page when activated\r\n\t * * `{int}` - Show page of the index given\r\n\t * * `{array}` - A nested array containing the above elements to add a\r\n\t *   containing 'DIV' element (might be useful for styling).\r\n\t *\r\n\t * Note that DataTables v1.9- used this object slightly differently whereby\r\n\t * an object with two functions would be defined for each plug-in. That\r\n\t * ability is still supported by DataTables 1.10+ to provide backwards\r\n\t * compatibility, but this option of use is now decremented and no longer\r\n\t * documented in DataTables 1.10+.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t *\r\n\t *  @example\r\n\t *    // Show previous, next and current page buttons only\r\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\r\n\t *      return [ 'previous', page, 'next' ];\r\n\t *    };\r\n\t */\r\n\tpager: {},\r\n\r\n\r\n\trenderer: {\r\n\t\tpageButton: {},\r\n\t\theader: {}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Ordering plug-ins - custom data source\r\n\t * \r\n\t * The extension options for ordering of data available here is complimentary\r\n\t * to the default type based ordering that DataTables typically uses. It\r\n\t * allows much greater control over the the data that is being used to\r\n\t * order a column, but is necessarily therefore more complex.\r\n\t * \r\n\t * This type of ordering is useful if you want to do ordering based on data\r\n\t * live from the DOM (for example the contents of an 'input' element) rather\r\n\t * than just the static string that DataTables knows of.\r\n\t * \r\n\t * The way these plug-ins work is that you create an array of the values you\r\n\t * wish to be ordering for the column in question and then return that\r\n\t * array. The data in the array much be in the index order of the rows in\r\n\t * the table (not the currently ordering order!). Which order data gathering\r\n\t * function is run here depends on the `dt-init columns.orderDataType`\r\n\t * parameter that is used for the column (if any).\r\n\t *\r\n\t * The functions defined take two parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t * 2. `{int}` Target column index\r\n\t *\r\n\t * Each function is expected to return an array:\r\n\t *\r\n\t * * `{array}` Data for the column to be ordering upon\r\n\t *\r\n\t *  @type array\r\n\t *\r\n\t *  @example\r\n\t *    // Ordering using `input` node values\r\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\r\n\t *    {\r\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\r\n\t *        return $('input', td).val();\r\n\t *      } );\r\n\t *    }\r\n\t */\r\n\torder: {},\r\n\r\n\r\n\t/**\r\n\t * Type based plug-ins.\r\n\t *\r\n\t * Each column in DataTables has a type assigned to it, either by automatic\r\n\t * detection or by direct assignment using the `type` option for the column.\r\n\t * The type of a column will effect how it is ordering and search (plug-ins\r\n\t * can also make use of the column type if required).\r\n\t *\r\n\t * @namespace\r\n\t */\r\n\ttype: {\r\n\t\t/**\r\n\t\t * Type detection functions.\r\n\t\t *\r\n\t\t * The functions defined in this object are used to automatically detect\r\n\t\t * a column's type, making initialisation of DataTables super easy, even\r\n\t\t * when complex data is in the table.\r\n\t\t *\r\n\t\t * The functions defined take two parameters:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be analysed\r\n\t     *  2. `{settings}` DataTables settings object. This can be used to\r\n\t     *     perform context specific type detection - for example detection\r\n\t     *     based on language settings such as using a comma for a decimal\r\n\t     *     place. Generally speaking the options from the settings will not\r\n\t     *     be required\r\n\t\t *\r\n\t\t * Each function is expected to return:\r\n\t\t *\r\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\r\n\t\t *   pass it on to the other type detection functions.\r\n\t\t *\r\n\t\t *  @type array\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Currency type detection plug-in:\r\n\t\t *    $.fn.dataTable.ext.type.detect.push(\r\n\t\t *      function ( data, settings ) {\r\n\t\t *        // Check the numeric part\r\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\r\n\t\t *          return null;\r\n\t\t *        }\r\n\t\t *\r\n\t\t *        // Check prefixed by currency\r\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\r\n\t\t *          return 'currency';\r\n\t\t *        }\r\n\t\t *        return null;\r\n\t\t *      }\r\n\t\t *    );\r\n\t\t */\r\n\t\tdetect: [],\r\n\r\n\r\n\t\t/**\r\n\t\t * Type based search formatting.\r\n\t\t *\r\n\t\t * The type based searching functions can be used to pre-format the\r\n\t\t * data to be search on. For example, it can be used to strip HTML\r\n\t\t * tags or to de-format telephone numbers for numeric only searching.\r\n\t\t *\r\n\t\t * Note that is a search is not defined for a column of a given type,\r\n\t\t * no search formatting will be performed.\r\n\t\t * \r\n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\r\n\t\t * for a column (or have it automatically detected for you by DataTables\r\n\t\t * or a type detection plug-in), you will typically be using this for\r\n\t\t * custom sorting, but it can also be used to provide custom searching\r\n\t\t * by allowing you to pre-processing the data and returning the data in\r\n\t\t * the format that should be searched upon. This is done by adding\r\n\t\t * functions this object with a parameter name which matches the sType\r\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\r\n\t\t * for searching data.\r\n\t\t *\r\n\t\t * The functions defined take a single parameter:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\r\n\t\t *\r\n\t\t * Each function is expected to return:\r\n\t\t *\r\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\r\n\t\t *\r\n\t\t *  @type object\r\n\t\t *  @default {}\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\r\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\r\n\t\t *    }\r\n\t\t */\r\n\t\tsearch: {},\r\n\r\n\r\n\t\t/**\r\n\t\t * Type based ordering.\r\n\t\t *\r\n\t\t * The column type tells DataTables what ordering to apply to the table\r\n\t\t * when a column is sorted upon. The order for each type that is defined,\r\n\t\t * is defined by the functions available in this object.\r\n\t\t *\r\n\t\t * Each ordering option can be described by three properties added to\r\n\t\t * this object:\r\n\t\t *\r\n\t\t * * `{type}-pre` - Pre-formatting function\r\n\t\t * * `{type}-asc` - Ascending order function\r\n\t\t * * `{type}-desc` - Descending order function\r\n\t\t *\r\n\t\t * All three can be used together, only `{type}-pre` or only\r\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\r\n\t\t * that only `{type}-pre` is used, as this provides the optimal\r\n\t\t * implementation in terms of speed, although the others are provided\r\n\t\t * for compatibility with existing Javascript sort functions.\r\n\t\t *\r\n\t\t * `{type}-pre`: Functions defined take a single parameter:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\r\n\t\t *\r\n\t\t * And return:\r\n\t\t *\r\n\t\t * * `{*}` Data to be sorted upon\r\n\t\t *\r\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\r\n\t\t * functions, taking two parameters:\r\n\t\t *\r\n\t     *  1. `{*}` Data to compare to the second parameter\r\n\t     *  2. `{*}` Data to compare to the first parameter\r\n\t\t *\r\n\t\t * And returning:\r\n\t\t *\r\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\r\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\r\n\t\t *   >0 if the first parameter should be sorted height than the second\r\n\t\t *   parameter.\r\n\t\t * \r\n\t\t *  @type object\r\n\t\t *  @default {}\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\r\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\r\n\t\t *      \"string-pre\": function(x) {\r\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\r\n\t\t *        return parseFloat( a );\r\n\t\t *      }\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\r\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\r\n\t\t *      \"string-case-asc\": function(x,y) {\r\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n\t\t *      },\r\n\t\t *      \"string-case-desc\": function(x,y) {\r\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\t\t *      }\r\n\t\t *    } );\r\n\t\t */\r\n\t\torder: {}\r\n\t},\r\n\r\n\t/**\r\n\t * Unique DataTables instance counter\r\n\t *\r\n\t * @type int\r\n\t * @private\r\n\t */\r\n\t_unique: 0,\r\n\r\n\r\n\t//\r\n\t// Depreciated\r\n\t// The following properties are retained for backwards compatibility only.\r\n\t// The should not be used in new projects and will be removed in a future\r\n\t// version\r\n\t//\r\n\r\n\t/**\r\n\t * Version check function.\r\n\t *  @type function\r\n\t *  @depreciated Since 1.10\r\n\t */\r\n\tfnVersionCheck: DataTable.fnVersionCheck,\r\n\r\n\r\n\t/**\r\n\t * Index for what 'this' index API functions should use\r\n\t *  @type int\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\tiApiIndex: 0,\r\n\r\n\r\n\t/**\r\n\t * jQuery UI class container\r\n\t *  @type object\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\toJUIClasses: {},\r\n\r\n\r\n\t/**\r\n\t * Software version\r\n\t *  @type string\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\tsVersion: DataTable.version\r\n};\r\n\r\n\r\n//\r\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\r\n//\r\n$.extend( _ext, {\r\n\tafnFiltering: _ext.search,\r\n\taTypes:       _ext.type.detect,\r\n\tofnSearch:    _ext.type.search,\r\n\toSort:        _ext.type.order,\r\n\tafnSortData:  _ext.order,\r\n\taoFeatures:   _ext.feature,\r\n\toApi:         _ext.internal,\r\n\toStdClasses:  _ext.classes,\r\n\toPagination:  _ext.pager\r\n} );\r\n\r\n\r\n$.extend( DataTable.ext.classes, {\r\n\t\"sTable\": \"dataTable\",\r\n\t\"sNoFooter\": \"no-footer\",\r\n\r\n\t/* Paging buttons */\r\n\t\"sPageButton\": \"paginate_button\",\r\n\t\"sPageButtonActive\": \"current\",\r\n\t\"sPageButtonDisabled\": \"disabled\",\r\n\r\n\t/* Striping classes */\r\n\t\"sStripeOdd\": \"odd\",\r\n\t\"sStripeEven\": \"even\",\r\n\r\n\t/* Empty row */\r\n\t\"sRowEmpty\": \"dataTables_empty\",\r\n\r\n\t/* Features */\r\n\t\"sWrapper\": \"dataTables_wrapper\",\r\n\t\"sFilter\": \"dataTables_filter\",\r\n\t\"sInfo\": \"dataTables_info\",\r\n\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\r\n\t\"sLength\": \"dataTables_length\",\r\n\t\"sProcessing\": \"dataTables_processing\",\r\n\r\n\t/* Sorting */\r\n\t\"sSortAsc\": \"sorting_asc\",\r\n\t\"sSortDesc\": \"sorting_desc\",\r\n\t\"sSortable\": \"sorting\", /* Sortable in both directions */\r\n\t\"sSortableAsc\": \"sorting_desc_disabled\",\r\n\t\"sSortableDesc\": \"sorting_asc_disabled\",\r\n\t\"sSortableNone\": \"sorting_disabled\",\r\n\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\r\n\r\n\t/* Filtering */\r\n\t\"sFilterInput\": \"\",\r\n\r\n\t/* Page length */\r\n\t\"sLengthSelect\": \"\",\r\n\r\n\t/* Scrolling */\r\n\t\"sScrollWrapper\": \"dataTables_scroll\",\r\n\t\"sScrollHead\": \"dataTables_scrollHead\",\r\n\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\r\n\t\"sScrollBody\": \"dataTables_scrollBody\",\r\n\t\"sScrollFoot\": \"dataTables_scrollFoot\",\r\n\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\r\n\r\n\t/* Misc */\r\n\t\"sHeaderTH\": \"\",\r\n\t\"sFooterTH\": \"\",\r\n\r\n\t// Deprecated\r\n\t\"sSortJUIAsc\": \"\",\r\n\t\"sSortJUIDesc\": \"\",\r\n\t\"sSortJUI\": \"\",\r\n\t\"sSortJUIAscAllowed\": \"\",\r\n\t\"sSortJUIDescAllowed\": \"\",\r\n\t\"sSortJUIWrapper\": \"\",\r\n\t\"sSortIcon\": \"\",\r\n\t\"sJUIHeader\": \"\",\r\n\t\"sJUIFooter\": \"\"\r\n} );\r\n\r\n\r\nvar extPagination = DataTable.ext.pager;\r\n\r\nfunction _numbers ( page, pages ) {\r\n\tvar\r\n\t\tnumbers = [],\r\n\t\tbuttons = extPagination.numbers_length,\r\n\t\thalf = Math.floor( buttons / 2 ),\r\n\t\ti = 1;\r\n\r\n\tif ( pages <= buttons ) {\r\n\t\tnumbers = _range( 0, pages );\r\n\t}\r\n\telse if ( page <= half ) {\r\n\t\tnumbers = _range( 0, buttons-2 );\r\n\t\tnumbers.push( 'ellipsis' );\r\n\t\tnumbers.push( pages-1 );\r\n\t}\r\n\telse if ( page >= pages - 1 - half ) {\r\n\t\tnumbers = _range( pages-(buttons-2), pages );\r\n\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\r\n\t\tnumbers.splice( 0, 0, 0 );\r\n\t}\r\n\telse {\r\n\t\tnumbers = _range( page-half+2, page+half-1 );\r\n\t\tnumbers.push( 'ellipsis' );\r\n\t\tnumbers.push( pages-1 );\r\n\t\tnumbers.splice( 0, 0, 'ellipsis' );\r\n\t\tnumbers.splice( 0, 0, 0 );\r\n\t}\r\n\r\n\tnumbers.DT_el = 'span';\r\n\treturn numbers;\r\n}\r\n\r\n\r\n$.extend( extPagination, {\r\n\tsimple: function ( page, pages ) {\r\n\t\treturn [ 'previous', 'next' ];\r\n\t},\r\n\r\n\tfull: function ( page, pages ) {\r\n\t\treturn [  'first', 'previous', 'next', 'last' ];\r\n\t},\r\n\r\n\tnumbers: function ( page, pages ) {\r\n\t\treturn [ _numbers(page, pages) ];\r\n\t},\r\n\r\n\tsimple_numbers: function ( page, pages ) {\r\n\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\r\n\t},\r\n\r\n\tfull_numbers: function ( page, pages ) {\r\n\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\r\n\t},\r\n\t\r\n\tfirst_last_numbers: function (page, pages) {\r\n \t\treturn ['first', _numbers(page, pages), 'last'];\r\n \t},\r\n\r\n\t// For testing and plug-ins to use\r\n\t_numbers: _numbers,\r\n\r\n\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\r\n\tnumbers_length: 7\r\n} );\r\n\r\n\r\n$.extend( true, DataTable.ext.renderer, {\r\n\tpageButton: {\r\n\t\t_: function ( settings, host, idx, buttons, page, pages ) {\r\n\t\t\tvar classes = settings.oClasses;\r\n\t\t\tvar lang = settings.oLanguage.oPaginate;\r\n\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\r\n\t\t\tvar btnDisplay, btnClass;\r\n\r\n\t\t\tvar attach = function( container, buttons ) {\r\n\t\t\t\tvar i, ien, node, button;\r\n\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\r\n\t\t\t\tvar clickHandler = function ( e ) {\r\n\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tbutton = buttons[i];\r\n\r\n\t\t\t\t\tif ( Array.isArray( button ) ) {\r\n\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\r\n\t\t\t\t\t\t\t.appendTo( container );\r\n\t\t\t\t\t\tattach( inner, button );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvar disabled = false;\r\n\r\n\t\t\t\t\t\tbtnDisplay = null;\r\n\t\t\t\t\t\tbtnClass = button;\r\n\r\n\t\t\t\t\t\tswitch ( button ) {\r\n\t\t\t\t\t\t\tcase 'ellipsis':\r\n\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'first':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\r\n\r\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\r\n\t\t\t\t\t\t\t\t\tdisabled = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'previous':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\r\n\r\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\r\n\t\t\t\t\t\t\t\t\tdisabled = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'next':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\r\n\r\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\r\n\t\t\t\t\t\t\t\t\tdisabled = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'last':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\r\n\r\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\r\n\t\t\t\t\t\t\t\t\tdisabled = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\r\n\t\t\t\t\t\t\t\tbtnClass = page === button ?\r\n\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( btnDisplay !== null ) {\r\n\t\t\t\t\t\t\tvar tag = settings.oInit.pagingTag || 'a';\r\n\r\n\t\t\t\t\t\t\tif (disabled) {\r\n\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tnode = $('<'+tag+'>', {\r\n\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\r\n\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\r\n\t\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\r\n\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\r\n\t\t\t\t\t\t\t\t\t'role': 'link',\r\n\t\t\t\t\t\t\t\t\t'aria-current': btnClass === classes.sPageButtonActive ? 'page' : null,\r\n\t\t\t\t\t\t\t\t\t'data-dt-idx': button,\r\n\t\t\t\t\t\t\t\t\t'tabindex': disabled ? -1 : settings.iTabIndex,\r\n\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\r\n\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\t\t.html( btnDisplay )\r\n\t\t\t\t\t\t\t\t.appendTo( container );\r\n\r\n\t\t\t\t\t\t\t_fnBindAction(\r\n\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\r\n\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\r\n\t\t\t// accessibility, but neither are frames.\r\n\t\t\tvar activeEl;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Because this approach is destroying and recreating the paging\r\n\t\t\t\t// elements, focus is lost on the select button which is bad for\r\n\t\t\t\t// accessibility. So we want to restore focus once the draw has\r\n\t\t\t\t// completed\r\n\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\r\n\t\t\t}\r\n\t\t\tcatch (e) {}\r\n\r\n\t\t\tattach( $(host).empty(), buttons );\r\n\r\n\t\t\tif ( activeEl !== undefined ) {\r\n\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\n\r\n// Built in type detection. See model.ext.aTypes for information about\r\n// what is required from this methods.\r\n$.extend( DataTable.ext.type.detect, [\r\n\t// Plain numbers - first since V8 detects some plain numbers as dates\r\n\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\r\n\t},\r\n\r\n\t// Dates (only those recognised by the browser's Date.parse)\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\r\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\r\n\t\t// plug-in for anything other than ISO8601 style strings\r\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar parsed = Date.parse(d);\r\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\r\n\t},\r\n\r\n\t// Formatted numbers\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\r\n\t},\r\n\r\n\t// HTML numeric\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\r\n\t},\r\n\r\n\t// HTML numeric, formatted\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\r\n\t},\r\n\r\n\t// HTML (this is strict checking - there must be html)\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\r\n\t\t\t'html' : null;\r\n\t}\r\n] );\r\n\r\n\r\n\r\n// Filter formatting functions. See model.ext.ofnSearch for information about\r\n// what is required from these methods.\r\n// \r\n// Note that additional search methods are added for the html numbers and\r\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\r\n// place is\r\n\r\n\r\n$.extend( DataTable.ext.type.search, {\r\n\thtml: function ( data ) {\r\n\t\treturn _empty(data) ?\r\n\t\t\tdata :\r\n\t\t\ttypeof data === 'string' ?\r\n\t\t\t\tdata\r\n\t\t\t\t\t.replace( _re_new_lines, \" \" )\r\n\t\t\t\t\t.replace( _re_html, \"\" ) :\r\n\t\t\t\t'';\r\n\t},\r\n\r\n\tstring: function ( data ) {\r\n\t\treturn _empty(data) ?\r\n\t\t\tdata :\r\n\t\t\ttypeof data === 'string' ?\r\n\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\r\n\t\t\t\tdata;\r\n\t}\r\n} );\r\n\r\n\r\n\r\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\r\n\tif ( d !== 0 && (!d || d === '-') ) {\r\n\t\treturn -Infinity;\r\n\t}\r\n\t\r\n\tvar type = typeof d;\r\n\r\n\tif (type === 'number' || type === 'bigint') {\r\n\t\treturn d;\r\n\t}\r\n\r\n\t// If a decimal place other than `.` is used, it needs to be given to the\r\n\t// function so we can detect it and replace with a `.` which is the only\r\n\t// decimal place Javascript recognises - it is not locale aware.\r\n\tif ( decimalPlace ) {\r\n\t\td = _numToDecimal( d, decimalPlace );\r\n\t}\r\n\r\n\tif ( d.replace ) {\r\n\t\tif ( re1 ) {\r\n\t\t\td = d.replace( re1, '' );\r\n\t\t}\r\n\r\n\t\tif ( re2 ) {\r\n\t\t\td = d.replace( re2, '' );\r\n\t\t}\r\n\t}\r\n\r\n\treturn d * 1;\r\n};\r\n\r\n\r\n// Add the numeric 'deformatting' functions for sorting and search. This is done\r\n// in a function to provide an easy ability for the language options to add\r\n// additional methods if a non-period decimal place is used.\r\nfunction _addNumericSort ( decimalPlace ) {\r\n\t$.each(\r\n\t\t{\r\n\t\t\t// Plain numbers\r\n\t\t\t\"num\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace );\r\n\t\t\t},\r\n\r\n\t\t\t// Formatted numbers\r\n\t\t\t\"num-fmt\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\r\n\t\t\t},\r\n\r\n\t\t\t// HTML numeric\r\n\t\t\t\"html-num\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\r\n\t\t\t},\r\n\r\n\t\t\t// HTML numeric, formatted\r\n\t\t\t\"html-num-fmt\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction ( key, fn ) {\r\n\t\t\t// Add the ordering method\r\n\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\r\n\r\n\t\t\t// For HTML types add a search formatter that will strip the HTML\r\n\t\t\tif ( key.match(/^html\\-/) ) {\r\n\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n}\r\n\r\n\r\n// Default sort methods\r\n$.extend( _ext.type.order, {\r\n\t// Dates\r\n\t\"date-pre\": function ( d ) {\r\n\t\tvar ts = Date.parse( d );\r\n\t\treturn isNaN(ts) ? -Infinity : ts;\r\n\t},\r\n\r\n\t// html\r\n\t\"html-pre\": function ( a ) {\r\n\t\treturn _empty(a) ?\r\n\t\t\t'' :\r\n\t\t\ta.replace ?\r\n\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\r\n\t\t\t\ta+'';\r\n\t},\r\n\r\n\t// string\r\n\t\"string-pre\": function ( a ) {\r\n\t\t// This is a little complex, but faster than always calling toString,\r\n\t\t// https://jsperf.com/tostring-v-check\r\n\t\treturn _empty(a) ?\r\n\t\t\t'' :\r\n\t\t\ttypeof a === 'string' ?\r\n\t\t\t\ta.toLowerCase() :\r\n\t\t\t\t! a.toString ?\r\n\t\t\t\t\t'' :\r\n\t\t\t\t\ta.toString();\r\n\t},\r\n\r\n\t// string-asc and -desc are retained only for compatibility with the old\r\n\t// sort methods\r\n\t\"string-asc\": function ( x, y ) {\r\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n\t},\r\n\r\n\t\"string-desc\": function ( x, y ) {\r\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\t}\r\n} );\r\n\r\n\r\n// Numeric sorting types - order doesn't matter here\r\n_addNumericSort( '' );\r\n\r\n\r\n$.extend( true, DataTable.ext.renderer, {\r\n\theader: {\r\n\t\t_: function ( settings, cell, column, classes ) {\r\n\t\t\t// No additional mark-up required\r\n\t\t\t// Attach a sort listener to update on sort - note that using the\r\n\t\t\t// `DT` namespace will allow the event to be removed automatically\r\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\r\n\t\t\t// listening for\r\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\r\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\r\n\t\t\t\t\treturn;               // table, not a nested one\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar colIdx = column.idx;\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.removeClass(\r\n\t\t\t\t\t\tclasses.sSortAsc +' '+\r\n\t\t\t\t\t\tclasses.sSortDesc\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClass\r\n\t\t\t\t\t);\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\tjqueryui: function ( settings, cell, column, classes ) {\r\n\t\t\t$('<div/>')\r\n\t\t\t\t.addClass( classes.sSortJUIWrapper )\r\n\t\t\t\t.append( cell.contents() )\r\n\t\t\t\t.append( $('<span/>')\r\n\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\r\n\t\t\t\t)\r\n\t\t\t\t.appendTo( cell );\r\n\r\n\t\t\t// Attach a sort listener to update on sort\r\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\r\n\t\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar colIdx = column.idx;\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClass\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\r\n\t\t\t\t\t.removeClass(\r\n\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUI +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIDescAllowed\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortJUIDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClassJUI\r\n\t\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n/*\r\n * Public helper functions. These aren't used internally by DataTables, or\r\n * called by any of the options passed into DataTables, but they can be used\r\n * externally by developers working with DataTables. They are helper functions\r\n * to make working with DataTables a little bit easier.\r\n */\r\n\r\nvar __htmlEscapeEntities = function ( d ) {\r\n\tif (Array.isArray(d)) {\r\n\t\td = d.join(',');\r\n\t}\r\n\r\n\treturn typeof d === 'string' ?\r\n\t\td\r\n\t\t\t.replace(/&/g, '&amp;')\r\n\t\t\t.replace(/</g, '&lt;')\r\n\t\t\t.replace(/>/g, '&gt;')\r\n\t\t\t.replace(/\"/g, '&quot;') :\r\n\t\td;\r\n};\r\n\r\n// Common logic for moment, luxon or a date action\r\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\r\n\tif (window.moment) {\r\n\t\treturn dt[momentFn]( arg1 );\r\n\t}\r\n\telse if (window.luxon) {\r\n\t\treturn dt[luxonFn]( arg1 );\r\n\t}\r\n\t\r\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\r\n}\r\n\r\n\r\nvar __mlWarning = false;\r\nfunction __mldObj (d, format, locale) {\r\n\tvar dt;\r\n\r\n\tif (window.moment) {\r\n\t\tdt = window.moment.utc( d, format, locale, true );\r\n\r\n\t\tif (! dt.isValid()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\telse if (window.luxon) {\r\n\t\tdt = format && typeof d === 'string'\r\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\r\n\t\t\t: window.luxon.DateTime.fromISO( d );\r\n\r\n\t\tif (! dt.isValid) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tdt.setLocale(locale);\r\n\t}\r\n\telse if (! format) {\r\n\t\t// No format given, must be ISO\r\n\t\tdt = new Date(d);\r\n\t}\r\n\telse {\r\n\t\tif (! __mlWarning) {\r\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\r\n\t\t}\r\n\r\n\t\t__mlWarning = true;\r\n\t}\r\n\r\n\treturn dt;\r\n}\r\n\r\n// Wrapper for date, datetime and time which all operate the same way with the exception of\r\n// the output string for auto locale support\r\nfunction __mlHelper (localeString) {\r\n\treturn function ( from, to, locale, def ) {\r\n\t\t// Luxon and Moment support\r\n\t\t// Argument shifting\r\n\t\tif ( arguments.length === 0 ) {\r\n\t\t\tlocale = 'en';\r\n\t\t\tto = null; // means toLocaleString\r\n\t\t\tfrom = null; // means iso8601\r\n\t\t}\r\n\t\telse if ( arguments.length === 1 ) {\r\n\t\t\tlocale = 'en';\r\n\t\t\tto = from;\r\n\t\t\tfrom = null;\r\n\t\t}\r\n\t\telse if ( arguments.length === 2 ) {\r\n\t\t\tlocale = to;\r\n\t\t\tto = from;\r\n\t\t\tfrom = null;\r\n\t\t}\r\n\r\n\t\tvar typeName = 'datetime-' + to;\r\n\r\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\r\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\r\n\t\tif (! DataTable.ext.type.order[typeName]) {\r\n\t\t\t// The renderer will give the value to type detect as the type!\r\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\r\n\t\t\t\treturn d === typeName ? typeName : false;\r\n\t\t\t});\r\n\r\n\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\r\n\t\t\t// `valueOf` which gives milliseconds epoch\r\n\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\r\n\t\t\t\tvar x = a.valueOf();\r\n\t\t\t\tvar y = b.valueOf();\r\n\r\n\t\t\t\treturn x === y\r\n\t\t\t\t\t? 0\r\n\t\t\t\t\t: x < y\r\n\t\t\t\t\t\t? -1\r\n\t\t\t\t\t\t: 1;\r\n\t\t\t}\r\n\r\n\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\r\n\t\t\t\tvar x = a.valueOf();\r\n\t\t\t\tvar y = b.valueOf();\r\n\r\n\t\t\t\treturn x === y\r\n\t\t\t\t\t? 0\r\n\t\t\t\t\t: x > y\r\n\t\t\t\t\t\t? -1\r\n\t\t\t\t\t\t: 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn function ( d, type ) {\r\n\t\t\t// Allow for a default value\r\n\t\t\tif (d === null || d === undefined) {\r\n\t\t\t\tif (def === '--now') {\r\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\r\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\r\n\t\t\t\t\t// UTC\r\n\t\t\t\t\tvar local = new Date();\r\n\t\t\t\t\td = new Date( Date.UTC(\r\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\r\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\r\n\t\t\t\t\t) );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'type') {\r\n\t\t\t\t// Typing uses the type name for fast matching\r\n\t\t\t\treturn typeName;\r\n\t\t\t}\r\n\r\n\t\t\tif (d === '') {\r\n\t\t\t\treturn type !== 'sort'\r\n\t\t\t\t\t? ''\r\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\r\n\t\t\t}\r\n\r\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\r\n\t\t\t// format for ordering, not display - its already in the display format.\r\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tvar dt = __mldObj(d, from, locale);\r\n\r\n\t\t\tif (dt === null) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'sort') {\r\n\t\t\t\treturn dt;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar formatted = to === null\r\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\r\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\r\n\r\n\t\t\t// XSS protection\r\n\t\t\treturn type === 'display' ?\r\n\t\t\t\t__htmlEscapeEntities( formatted ) :\r\n\t\t\t\tformatted;\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// Based on locale, determine standard number formatting\r\n// Fallback for legacy browsers is US English\r\nvar __thousands = ',';\r\nvar __decimal = '.';\r\n\r\nif (window.Intl !== undefined) {\r\n\ttry {\r\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\r\n\t\r\n\t\tfor (var i=0 ; i<num.length ; i++) {\r\n\t\t\tif (num[i].type === 'group') {\r\n\t\t\t\t__thousands = num[i].value;\r\n\t\t\t}\r\n\t\t\telse if (num[i].type === 'decimal') {\r\n\t\t\t\t__decimal = num[i].value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcatch (e) {\r\n\t\t// noop\r\n\t}\r\n}\r\n\r\n// Formatted date time detection - use by declaring the formats you are going to use\r\nDataTable.datetime = function ( format, locale ) {\r\n\tvar typeName = 'datetime-detect-' + format;\r\n\r\n\tif (! locale) {\r\n\t\tlocale = 'en';\r\n\t}\r\n\r\n\tif (! DataTable.ext.type.order[typeName]) {\r\n\t\tDataTable.ext.type.detect.unshift(function (d) {\r\n\t\t\tvar dt = __mldObj(d, format, locale);\r\n\t\t\treturn d === '' || dt ? typeName : false;\r\n\t\t});\r\n\r\n\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\r\n\t\t\treturn __mldObj(d, format, locale) || 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Helpers for `columns.render`.\r\n *\r\n * The options defined here can be used with the `columns.render` initialisation\r\n * option to provide a display renderer. The following functions are defined:\r\n *\r\n * * `number` - Will format numeric data (defined by `columns.data`) for\r\n *   display, retaining the original unformatted data for sorting and filtering.\r\n *   It takes 5 parameters:\r\n *   * `string` - Thousands grouping separator\r\n *   * `string` - Decimal point indicator\r\n *   * `integer` - Number of decimal points to show\r\n *   * `string` (optional) - Prefix.\r\n *   * `string` (optional) - Postfix (/suffix).\r\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\r\n *   parameters.\r\n *\r\n * @example\r\n *   // Column definition using the number renderer\r\n *   {\r\n *     data: \"salary\",\r\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\r\n *   }\r\n *\r\n * @namespace\r\n */\r\nDataTable.render = {\r\n\tdate: __mlHelper('toLocaleDateString'),\r\n\tdatetime: __mlHelper('toLocaleString'),\r\n\ttime: __mlHelper('toLocaleTimeString'),\r\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\r\n\t\t// Auto locale detection\r\n\t\tif (thousands === null || thousands === undefined) {\r\n\t\t\tthousands = __thousands;\r\n\t\t}\r\n\r\n\t\tif (decimal === null || decimal === undefined) {\r\n\t\t\tdecimal = __decimal;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdisplay: function ( d ) {\r\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (d === '' || d === null) {\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar negative = d < 0 ? '-' : '';\r\n\t\t\t\tvar flo = parseFloat( d );\r\n\r\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\r\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\r\n\t\t\t\t// be a number after all)\r\n\t\t\t\tif ( isNaN( flo ) ) {\r\n\t\t\t\t\treturn __htmlEscapeEntities( d );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tflo = flo.toFixed( precision );\r\n\t\t\t\td = Math.abs( flo );\r\n\r\n\t\t\t\tvar intPart = parseInt( d, 10 );\r\n\t\t\t\tvar floatPart = precision ?\r\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\r\n\t\t\t\t\t'';\r\n\r\n\t\t\t\t// If zero, then can't have a negative prefix\r\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\r\n\t\t\t\t\tnegative = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn negative + (prefix||'') +\r\n\t\t\t\t\tintPart.toString().replace(\r\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\r\n\t\t\t\t\t) +\r\n\t\t\t\t\tfloatPart +\r\n\t\t\t\t\t(postfix||'');\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\ttext: function () {\r\n\t\treturn {\r\n\t\t\tdisplay: __htmlEscapeEntities,\r\n\t\t\tfilter: __htmlEscapeEntities\r\n\t\t};\r\n\t}\r\n};\r\n\r\n\r\n/*\r\n * This is really a good bit rubbish this method of exposing the internal methods\r\n * publicly... - To be fixed in 2.0 using methods on the prototype\r\n */\r\n\r\n\r\n/**\r\n * Create a wrapper function for exporting an internal functions to an external API.\r\n *  @param {string} fn API function name\r\n *  @returns {function} wrapped function\r\n *  @memberof DataTable#internal\r\n */\r\nfunction _fnExternApiFunc (fn)\r\n{\r\n\treturn function() {\r\n\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\r\n\t\t\tArray.prototype.slice.call(arguments)\r\n\t\t);\r\n\t\treturn DataTable.ext.internal[fn].apply( this, args );\r\n\t};\r\n}\r\n\r\n\r\n/**\r\n * Reference to internal functions for use by plug-in developers. Note that\r\n * these methods are references to internal functions and are considered to be\r\n * private. If you use these methods, be aware that they are liable to change\r\n * between versions.\r\n *  @namespace\r\n */\r\n$.extend( DataTable.ext.internal, {\r\n\t_fnExternApiFunc: _fnExternApiFunc,\r\n\t_fnBuildAjax: _fnBuildAjax,\r\n\t_fnAjaxUpdate: _fnAjaxUpdate,\r\n\t_fnAjaxParameters: _fnAjaxParameters,\r\n\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\r\n\t_fnAjaxDataSrc: _fnAjaxDataSrc,\r\n\t_fnAddColumn: _fnAddColumn,\r\n\t_fnColumnOptions: _fnColumnOptions,\r\n\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\r\n\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\r\n\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\r\n\t_fnVisbleColumns: _fnVisbleColumns,\r\n\t_fnGetColumns: _fnGetColumns,\r\n\t_fnColumnTypes: _fnColumnTypes,\r\n\t_fnApplyColumnDefs: _fnApplyColumnDefs,\r\n\t_fnHungarianMap: _fnHungarianMap,\r\n\t_fnCamelToHungarian: _fnCamelToHungarian,\r\n\t_fnLanguageCompat: _fnLanguageCompat,\r\n\t_fnBrowserDetect: _fnBrowserDetect,\r\n\t_fnAddData: _fnAddData,\r\n\t_fnAddTr: _fnAddTr,\r\n\t_fnNodeToDataIndex: _fnNodeToDataIndex,\r\n\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\r\n\t_fnGetCellData: _fnGetCellData,\r\n\t_fnSetCellData: _fnSetCellData,\r\n\t_fnSplitObjNotation: _fnSplitObjNotation,\r\n\t_fnGetObjectDataFn: _fnGetObjectDataFn,\r\n\t_fnSetObjectDataFn: _fnSetObjectDataFn,\r\n\t_fnGetDataMaster: _fnGetDataMaster,\r\n\t_fnClearTable: _fnClearTable,\r\n\t_fnDeleteIndex: _fnDeleteIndex,\r\n\t_fnInvalidate: _fnInvalidate,\r\n\t_fnGetRowElements: _fnGetRowElements,\r\n\t_fnCreateTr: _fnCreateTr,\r\n\t_fnBuildHead: _fnBuildHead,\r\n\t_fnDrawHead: _fnDrawHead,\r\n\t_fnDraw: _fnDraw,\r\n\t_fnReDraw: _fnReDraw,\r\n\t_fnAddOptionsHtml: _fnAddOptionsHtml,\r\n\t_fnDetectHeader: _fnDetectHeader,\r\n\t_fnGetUniqueThs: _fnGetUniqueThs,\r\n\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\r\n\t_fnFilterComplete: _fnFilterComplete,\r\n\t_fnFilterCustom: _fnFilterCustom,\r\n\t_fnFilterColumn: _fnFilterColumn,\r\n\t_fnFilter: _fnFilter,\r\n\t_fnFilterCreateSearch: _fnFilterCreateSearch,\r\n\t_fnEscapeRegex: _fnEscapeRegex,\r\n\t_fnFilterData: _fnFilterData,\r\n\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\r\n\t_fnUpdateInfo: _fnUpdateInfo,\r\n\t_fnInfoMacros: _fnInfoMacros,\r\n\t_fnInitialise: _fnInitialise,\r\n\t_fnInitComplete: _fnInitComplete,\r\n\t_fnLengthChange: _fnLengthChange,\r\n\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\r\n\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\r\n\t_fnPageChange: _fnPageChange,\r\n\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\r\n\t_fnProcessingDisplay: _fnProcessingDisplay,\r\n\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\r\n\t_fnScrollDraw: _fnScrollDraw,\r\n\t_fnApplyToChildren: _fnApplyToChildren,\r\n\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\r\n\t_fnThrottle: _fnThrottle,\r\n\t_fnConvertToWidth: _fnConvertToWidth,\r\n\t_fnGetWidestNode: _fnGetWidestNode,\r\n\t_fnGetMaxLenString: _fnGetMaxLenString,\r\n\t_fnStringToCss: _fnStringToCss,\r\n\t_fnSortFlatten: _fnSortFlatten,\r\n\t_fnSort: _fnSort,\r\n\t_fnSortAria: _fnSortAria,\r\n\t_fnSortListener: _fnSortListener,\r\n\t_fnSortAttachListener: _fnSortAttachListener,\r\n\t_fnSortingClasses: _fnSortingClasses,\r\n\t_fnSortData: _fnSortData,\r\n\t_fnSaveState: _fnSaveState,\r\n\t_fnLoadState: _fnLoadState,\r\n\t_fnImplementState: _fnImplementState,\r\n\t_fnSettingsFromNode: _fnSettingsFromNode,\r\n\t_fnLog: _fnLog,\r\n\t_fnMap: _fnMap,\r\n\t_fnBindAction: _fnBindAction,\r\n\t_fnCallbackReg: _fnCallbackReg,\r\n\t_fnCallbackFire: _fnCallbackFire,\r\n\t_fnLengthOverflow: _fnLengthOverflow,\r\n\t_fnRenderer: _fnRenderer,\r\n\t_fnDataSource: _fnDataSource,\r\n\t_fnRowAttributes: _fnRowAttributes,\r\n\t_fnExtend: _fnExtend,\r\n\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\r\n\t                                // in 1.10, so this dead-end function is\r\n\t                                // added to prevent errors\r\n} );\r\n\r\n\r\n// jQuery access\r\n$.fn.dataTable = DataTable;\r\n\r\n// Provide access to the host jQuery object (circular reference)\r\nDataTable.$ = $;\r\n\r\n// Legacy aliases\r\n$.fn.dataTableSettings = DataTable.settings;\r\n$.fn.dataTableExt = DataTable.ext;\r\n\r\n// With a capital `D` we return a DataTables API instance rather than a\r\n// jQuery object\r\n$.fn.DataTable = function ( opts ) {\r\n\treturn $(this).dataTable( opts ).api();\r\n};\r\n\r\n// All properties that are available to $.fn.dataTable should also be\r\n// available on $.fn.DataTable\r\n$.each( DataTable, function ( prop, val ) {\r\n\t$.fn.DataTable[ prop ] = val;\r\n} );\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DataTable);\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/datatables.net/js/jquery.dataTables.mjs?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/has-cors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/has-cors.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasCORS: () => (/* binding */ hasCORS)\n/* harmony export */ });\n// imported from https://github.com/component/has-cors\r\nlet value = false;\r\ntry {\r\n    value = typeof XMLHttpRequest !== 'undefined' &&\r\n        'withCredentials' in new XMLHttpRequest();\r\n}\r\ncatch (err) {\r\n    // if XMLHttp support is disabled in IE then it will throw\r\n    // when trying to create\r\n}\r\nconst hasCORS = value;\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/contrib/has-cors.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/parseqs.js":
/*!********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/parseqs.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// imported from https://github.com/galkn/querystring\r\n/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\nfunction encode(obj) {\r\n    let str = '';\r\n    for (let i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            if (str.length)\r\n                str += '&';\r\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n        }\r\n    }\r\n    return str;\r\n}\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\nfunction decode(qs) {\r\n    let qry = {};\r\n    let pairs = qs.split('&');\r\n    for (let i = 0, l = pairs.length; i < l; i++) {\r\n        let pair = pairs[i].split('=');\r\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n    }\r\n    return qry;\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/contrib/parseqs.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/parseuri.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/parseuri.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n// imported from https://github.com/galkn/parseuri\r\n/**\r\n * Parses a URI\r\n *\r\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\r\n *\r\n * See:\r\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\r\n * - https://caniuse.com/url\r\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\r\n *\r\n * History of the parse() method:\r\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\r\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\r\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\nconst parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\nfunction parse(str) {\r\n    if (str.length > 2000) {\r\n        throw \"URI too long\";\r\n    }\r\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n    let m = re.exec(str || ''), uri = {}, i = 14;\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n    uri.pathNames = pathNames(uri, uri['path']);\r\n    uri.queryKey = queryKey(uri, uri['query']);\r\n    return uri;\r\n}\r\nfunction pathNames(obj, path) {\r\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\r\n    if (path.slice(0, 1) == '/' || path.length === 0) {\r\n        names.splice(0, 1);\r\n    }\r\n    if (path.slice(-1) == '/') {\r\n        names.splice(names.length - 1, 1);\r\n    }\r\n    return names;\r\n}\r\nfunction queryKey(uri, query) {\r\n    const data = {};\r\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\r\n        if ($1) {\r\n            data[$1] = $2;\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/contrib/parseuri.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/contrib/yeast.js":
/*!******************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/contrib/yeast.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   yeast: () => (/* binding */ yeast)\n/* harmony export */ });\n// imported from https://github.com/unshiftio/yeast\r\n\r\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\r\nlet seed = 0, i = 0, prev;\r\n/**\r\n * Return a string representing the specified number.\r\n *\r\n * @param {Number} num The number to convert.\r\n * @returns {String} The string representation of the number.\r\n * @api public\r\n */\r\nfunction encode(num) {\r\n    let encoded = '';\r\n    do {\r\n        encoded = alphabet[num % length] + encoded;\r\n        num = Math.floor(num / length);\r\n    } while (num > 0);\r\n    return encoded;\r\n}\r\n/**\r\n * Return the integer value specified by the given string.\r\n *\r\n * @param {String} str The string to convert.\r\n * @returns {Number} The integer value represented by the string.\r\n * @api public\r\n */\r\nfunction decode(str) {\r\n    let decoded = 0;\r\n    for (i = 0; i < str.length; i++) {\r\n        decoded = decoded * length + map[str.charAt(i)];\r\n    }\r\n    return decoded;\r\n}\r\n/**\r\n * Yeast: A tiny growing id generator.\r\n *\r\n * @returns {String} A unique id.\r\n * @api public\r\n */\r\nfunction yeast() {\r\n    const now = encode(+new Date());\r\n    if (now !== prev)\r\n        return seed = 0, prev = now;\r\n    return now + '.' + encode(seed++);\r\n}\r\n//\r\n// Map each character to its index.\r\n//\r\nfor (; i < length; i++)\r\n    map[alphabet[i]] = i;\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/contrib/yeast.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/globalThis.browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/globalThis.browser.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   globalThisShim: () => (/* binding */ globalThisShim)\n/* harmony export */ });\nconst globalThisShim = (() => {\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    else if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    else {\r\n        return Function(\"return this\")();\r\n    }\r\n})();\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/globalThis.browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Socket: () => (/* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket),\n/* harmony export */   Transport: () => (/* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.Transport),\n/* harmony export */   TransportError: () => (/* reexport safe */ _transport_js__WEBPACK_IMPORTED_MODULE_1__.TransportError),\n/* harmony export */   installTimerFunctions: () => (/* reexport safe */ _util_js__WEBPACK_IMPORTED_MODULE_3__.installTimerFunctions),\n/* harmony export */   nextTick: () => (/* reexport safe */ _transports_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_5__.nextTick),\n/* harmony export */   parse: () => (/* reexport safe */ _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__.parse),\n/* harmony export */   protocol: () => (/* binding */ protocol),\n/* harmony export */   transports: () => (/* reexport safe */ _transports_index_js__WEBPACK_IMPORTED_MODULE_2__.transports)\n/* harmony export */ });\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/engine.io-client/build/esm/socket.js\");\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _transports_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transports/index.js */ \"./node_modules/engine.io-client/build/esm/transports/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/parseuri.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseuri.js\");\n/* harmony import */ var _transports_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./transports/websocket-constructor.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\");\n\r\n\r\nconst protocol = _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket.protocol;\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/socket.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Socket: () => (/* binding */ Socket)\n/* harmony export */ });\n/* harmony import */ var _transports_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transports/index.js */ \"./node_modules/engine.io-client/build/esm/transports/index.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n/* harmony import */ var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contrib/parseuri.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseuri.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _transports_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transports/websocket-constructor.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Socket extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__.Emitter {\r\n    /**\r\n     * Socket constructor.\r\n     *\r\n     * @param {String|Object} uri - uri or options\r\n     * @param {Object} opts - options\r\n     */\r\n    constructor(uri, opts = {}) {\r\n        super();\r\n        this.binaryType = _transports_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_6__.defaultBinaryType;\r\n        this.writeBuffer = [];\r\n        if (uri && \"object\" === typeof uri) {\r\n            opts = uri;\r\n            uri = null;\r\n        }\r\n        if (uri) {\r\n            uri = (0,_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(uri);\r\n            opts.hostname = uri.host;\r\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\r\n            opts.port = uri.port;\r\n            if (uri.query)\r\n                opts.query = uri.query;\r\n        }\r\n        else if (opts.host) {\r\n            opts.hostname = (0,_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(opts.host).host;\r\n        }\r\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.installTimerFunctions)(this, opts);\r\n        this.secure =\r\n            null != opts.secure\r\n                ? opts.secure\r\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\r\n        if (opts.hostname && !opts.port) {\r\n            // if no port is specified manually, use the protocol default\r\n            opts.port = this.secure ? \"443\" : \"80\";\r\n        }\r\n        this.hostname =\r\n            opts.hostname ||\r\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\r\n        this.port =\r\n            opts.port ||\r\n                (typeof location !== \"undefined\" && location.port\r\n                    ? location.port\r\n                    : this.secure\r\n                        ? \"443\"\r\n                        : \"80\");\r\n        this.transports = opts.transports || [\r\n            \"polling\",\r\n            \"websocket\",\r\n            \"webtransport\",\r\n        ];\r\n        this.writeBuffer = [];\r\n        this.prevBufferLen = 0;\r\n        this.opts = Object.assign({\r\n            path: \"/engine.io\",\r\n            agent: false,\r\n            withCredentials: false,\r\n            upgrade: true,\r\n            timestampParam: \"t\",\r\n            rememberUpgrade: false,\r\n            addTrailingSlash: true,\r\n            rejectUnauthorized: true,\r\n            perMessageDeflate: {\r\n                threshold: 1024,\r\n            },\r\n            transportOptions: {},\r\n            closeOnBeforeunload: false,\r\n        }, opts);\r\n        this.opts.path =\r\n            this.opts.path.replace(/\\/$/, \"\") +\r\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\r\n        if (typeof this.opts.query === \"string\") {\r\n            this.opts.query = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__.decode)(this.opts.query);\r\n        }\r\n        // set on handshake\r\n        this.id = null;\r\n        this.upgrades = null;\r\n        this.pingInterval = null;\r\n        this.pingTimeout = null;\r\n        // set on heartbeat\r\n        this.pingTimeoutTimer = null;\r\n        if (typeof addEventListener === \"function\") {\r\n            if (this.opts.closeOnBeforeunload) {\r\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\r\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\r\n                // closed/reloaded)\r\n                this.beforeunloadEventListener = () => {\r\n                    if (this.transport) {\r\n                        // silently close the transport\r\n                        this.transport.removeAllListeners();\r\n                        this.transport.close();\r\n                    }\r\n                };\r\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\r\n            }\r\n            if (this.hostname !== \"localhost\") {\r\n                this.offlineEventListener = () => {\r\n                    this.onClose(\"transport close\", {\r\n                        description: \"network connection lost\",\r\n                    });\r\n                };\r\n                addEventListener(\"offline\", this.offlineEventListener, false);\r\n            }\r\n        }\r\n        this.open();\r\n    }\r\n    /**\r\n     * Creates transport of the given type.\r\n     *\r\n     * @param {String} name - transport name\r\n     * @return {Transport}\r\n     * @private\r\n     */\r\n    createTransport(name) {\r\n        const query = Object.assign({}, this.opts.query);\r\n        // append engine.io protocol identifier\r\n        query.EIO = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;\r\n        // transport name\r\n        query.transport = name;\r\n        // session id if we already have one\r\n        if (this.id)\r\n            query.sid = this.id;\r\n        const opts = Object.assign({}, this.opts, {\r\n            query,\r\n            socket: this,\r\n            hostname: this.hostname,\r\n            secure: this.secure,\r\n            port: this.port,\r\n        }, this.opts.transportOptions[name]);\r\n        return new _transports_index_js__WEBPACK_IMPORTED_MODULE_0__.transports[name](opts);\r\n    }\r\n    /**\r\n     * Initializes transport to use and starts probe.\r\n     *\r\n     * @private\r\n     */\r\n    open() {\r\n        let transport;\r\n        if (this.opts.rememberUpgrade &&\r\n            Socket.priorWebsocketSuccess &&\r\n            this.transports.indexOf(\"websocket\") !== -1) {\r\n            transport = \"websocket\";\r\n        }\r\n        else if (0 === this.transports.length) {\r\n            // Emit error on next tick so it can be listened to\r\n            this.setTimeoutFn(() => {\r\n                this.emitReserved(\"error\", \"No transports available\");\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n            transport = this.transports[0];\r\n        }\r\n        this.readyState = \"opening\";\r\n        // Retry with the next transport if the transport is disabled (jsonp: false)\r\n        try {\r\n            transport = this.createTransport(transport);\r\n        }\r\n        catch (e) {\r\n            this.transports.shift();\r\n            this.open();\r\n            return;\r\n        }\r\n        transport.open();\r\n        this.setTransport(transport);\r\n    }\r\n    /**\r\n     * Sets the current transport. Disables the existing one (if any).\r\n     *\r\n     * @private\r\n     */\r\n    setTransport(transport) {\r\n        if (this.transport) {\r\n            this.transport.removeAllListeners();\r\n        }\r\n        // set up transport\r\n        this.transport = transport;\r\n        // set up transport listeners\r\n        transport\r\n            .on(\"drain\", this.onDrain.bind(this))\r\n            .on(\"packet\", this.onPacket.bind(this))\r\n            .on(\"error\", this.onError.bind(this))\r\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\r\n    }\r\n    /**\r\n     * Probes a transport.\r\n     *\r\n     * @param {String} name - transport name\r\n     * @private\r\n     */\r\n    probe(name) {\r\n        let transport = this.createTransport(name);\r\n        let failed = false;\r\n        Socket.priorWebsocketSuccess = false;\r\n        const onTransportOpen = () => {\r\n            if (failed)\r\n                return;\r\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\r\n            transport.once(\"packet\", (msg) => {\r\n                if (failed)\r\n                    return;\r\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\r\n                    this.upgrading = true;\r\n                    this.emitReserved(\"upgrading\", transport);\r\n                    if (!transport)\r\n                        return;\r\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\r\n                    this.transport.pause(() => {\r\n                        if (failed)\r\n                            return;\r\n                        if (\"closed\" === this.readyState)\r\n                            return;\r\n                        cleanup();\r\n                        this.setTransport(transport);\r\n                        transport.send([{ type: \"upgrade\" }]);\r\n                        this.emitReserved(\"upgrade\", transport);\r\n                        transport = null;\r\n                        this.upgrading = false;\r\n                        this.flush();\r\n                    });\r\n                }\r\n                else {\r\n                    const err = new Error(\"probe error\");\r\n                    // @ts-ignore\r\n                    err.transport = transport.name;\r\n                    this.emitReserved(\"upgradeError\", err);\r\n                }\r\n            });\r\n        };\r\n        function freezeTransport() {\r\n            if (failed)\r\n                return;\r\n            // Any callback called by transport should be ignored since now\r\n            failed = true;\r\n            cleanup();\r\n            transport.close();\r\n            transport = null;\r\n        }\r\n        // Handle any error that happens while probing\r\n        const onerror = (err) => {\r\n            const error = new Error(\"probe error: \" + err);\r\n            // @ts-ignore\r\n            error.transport = transport.name;\r\n            freezeTransport();\r\n            this.emitReserved(\"upgradeError\", error);\r\n        };\r\n        function onTransportClose() {\r\n            onerror(\"transport closed\");\r\n        }\r\n        // When the socket is closed while we're probing\r\n        function onclose() {\r\n            onerror(\"socket closed\");\r\n        }\r\n        // When the socket is upgraded while we're probing\r\n        function onupgrade(to) {\r\n            if (transport && to.name !== transport.name) {\r\n                freezeTransport();\r\n            }\r\n        }\r\n        // Remove all listeners on the transport and on self\r\n        const cleanup = () => {\r\n            transport.removeListener(\"open\", onTransportOpen);\r\n            transport.removeListener(\"error\", onerror);\r\n            transport.removeListener(\"close\", onTransportClose);\r\n            this.off(\"close\", onclose);\r\n            this.off(\"upgrading\", onupgrade);\r\n        };\r\n        transport.once(\"open\", onTransportOpen);\r\n        transport.once(\"error\", onerror);\r\n        transport.once(\"close\", onTransportClose);\r\n        this.once(\"close\", onclose);\r\n        this.once(\"upgrading\", onupgrade);\r\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\r\n            name !== \"webtransport\") {\r\n            // favor WebTransport\r\n            this.setTimeoutFn(() => {\r\n                if (!failed) {\r\n                    transport.open();\r\n                }\r\n            }, 200);\r\n        }\r\n        else {\r\n            transport.open();\r\n        }\r\n    }\r\n    /**\r\n     * Called when connection is deemed open.\r\n     *\r\n     * @private\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\r\n        this.emitReserved(\"open\");\r\n        this.flush();\r\n        // we check for `readyState` in case an `open`\r\n        // listener already closed the socket\r\n        if (\"open\" === this.readyState && this.opts.upgrade) {\r\n            let i = 0;\r\n            const l = this.upgrades.length;\r\n            for (; i < l; i++) {\r\n                this.probe(this.upgrades[i]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handles a packet.\r\n     *\r\n     * @private\r\n     */\r\n    onPacket(packet) {\r\n        if (\"opening\" === this.readyState ||\r\n            \"open\" === this.readyState ||\r\n            \"closing\" === this.readyState) {\r\n            this.emitReserved(\"packet\", packet);\r\n            // Socket is live - any packet counts\r\n            this.emitReserved(\"heartbeat\");\r\n            this.resetPingTimeout();\r\n            switch (packet.type) {\r\n                case \"open\":\r\n                    this.onHandshake(JSON.parse(packet.data));\r\n                    break;\r\n                case \"ping\":\r\n                    this.sendPacket(\"pong\");\r\n                    this.emitReserved(\"ping\");\r\n                    this.emitReserved(\"pong\");\r\n                    break;\r\n                case \"error\":\r\n                    const err = new Error(\"server error\");\r\n                    // @ts-ignore\r\n                    err.code = packet.data;\r\n                    this.onError(err);\r\n                    break;\r\n                case \"message\":\r\n                    this.emitReserved(\"data\", packet.data);\r\n                    this.emitReserved(\"message\", packet.data);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    /**\r\n     * Called upon handshake completion.\r\n     *\r\n     * @param {Object} data - handshake obj\r\n     * @private\r\n     */\r\n    onHandshake(data) {\r\n        this.emitReserved(\"handshake\", data);\r\n        this.id = data.sid;\r\n        this.transport.query.sid = data.sid;\r\n        this.upgrades = this.filterUpgrades(data.upgrades);\r\n        this.pingInterval = data.pingInterval;\r\n        this.pingTimeout = data.pingTimeout;\r\n        this.maxPayload = data.maxPayload;\r\n        this.onOpen();\r\n        // In case open handler closes socket\r\n        if (\"closed\" === this.readyState)\r\n            return;\r\n        this.resetPingTimeout();\r\n    }\r\n    /**\r\n     * Sets and resets ping timeout timer based on server pings.\r\n     *\r\n     * @private\r\n     */\r\n    resetPingTimeout() {\r\n        this.clearTimeoutFn(this.pingTimeoutTimer);\r\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\r\n            this.onClose(\"ping timeout\");\r\n        }, this.pingInterval + this.pingTimeout);\r\n        if (this.opts.autoUnref) {\r\n            this.pingTimeoutTimer.unref();\r\n        }\r\n    }\r\n    /**\r\n     * Called on `drain` event\r\n     *\r\n     * @private\r\n     */\r\n    onDrain() {\r\n        this.writeBuffer.splice(0, this.prevBufferLen);\r\n        // setting prevBufferLen = 0 is very important\r\n        // for example, when upgrading, upgrade packet is sent over,\r\n        // and a nonzero prevBufferLen could cause problems on `drain`\r\n        this.prevBufferLen = 0;\r\n        if (0 === this.writeBuffer.length) {\r\n            this.emitReserved(\"drain\");\r\n        }\r\n        else {\r\n            this.flush();\r\n        }\r\n    }\r\n    /**\r\n     * Flush write buffers.\r\n     *\r\n     * @private\r\n     */\r\n    flush() {\r\n        if (\"closed\" !== this.readyState &&\r\n            this.transport.writable &&\r\n            !this.upgrading &&\r\n            this.writeBuffer.length) {\r\n            const packets = this.getWritablePackets();\r\n            this.transport.send(packets);\r\n            // keep track of current length of writeBuffer\r\n            // splice writeBuffer and callbackBuffer on `drain`\r\n            this.prevBufferLen = packets.length;\r\n            this.emitReserved(\"flush\");\r\n        }\r\n    }\r\n    /**\r\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\r\n     * long-polling)\r\n     *\r\n     * @private\r\n     */\r\n    getWritablePackets() {\r\n        const shouldCheckPayloadSize = this.maxPayload &&\r\n            this.transport.name === \"polling\" &&\r\n            this.writeBuffer.length > 1;\r\n        if (!shouldCheckPayloadSize) {\r\n            return this.writeBuffer;\r\n        }\r\n        let payloadSize = 1; // first packet type\r\n        for (let i = 0; i < this.writeBuffer.length; i++) {\r\n            const data = this.writeBuffer[i].data;\r\n            if (data) {\r\n                payloadSize += (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.byteLength)(data);\r\n            }\r\n            if (i > 0 && payloadSize > this.maxPayload) {\r\n                return this.writeBuffer.slice(0, i);\r\n            }\r\n            payloadSize += 2; // separator + packet type\r\n        }\r\n        return this.writeBuffer;\r\n    }\r\n    /**\r\n     * Sends a message.\r\n     *\r\n     * @param {String} msg - message.\r\n     * @param {Object} options.\r\n     * @param {Function} callback function.\r\n     * @return {Socket} for chaining.\r\n     */\r\n    write(msg, options, fn) {\r\n        this.sendPacket(\"message\", msg, options, fn);\r\n        return this;\r\n    }\r\n    send(msg, options, fn) {\r\n        this.sendPacket(\"message\", msg, options, fn);\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends a packet.\r\n     *\r\n     * @param {String} type: packet type.\r\n     * @param {String} data.\r\n     * @param {Object} options.\r\n     * @param {Function} fn - callback function.\r\n     * @private\r\n     */\r\n    sendPacket(type, data, options, fn) {\r\n        if (\"function\" === typeof data) {\r\n            fn = data;\r\n            data = undefined;\r\n        }\r\n        if (\"function\" === typeof options) {\r\n            fn = options;\r\n            options = null;\r\n        }\r\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\r\n            return;\r\n        }\r\n        options = options || {};\r\n        options.compress = false !== options.compress;\r\n        const packet = {\r\n            type: type,\r\n            data: data,\r\n            options: options,\r\n        };\r\n        this.emitReserved(\"packetCreate\", packet);\r\n        this.writeBuffer.push(packet);\r\n        if (fn)\r\n            this.once(\"flush\", fn);\r\n        this.flush();\r\n    }\r\n    /**\r\n     * Closes the connection.\r\n     */\r\n    close() {\r\n        const close = () => {\r\n            this.onClose(\"forced close\");\r\n            this.transport.close();\r\n        };\r\n        const cleanupAndClose = () => {\r\n            this.off(\"upgrade\", cleanupAndClose);\r\n            this.off(\"upgradeError\", cleanupAndClose);\r\n            close();\r\n        };\r\n        const waitForUpgrade = () => {\r\n            // wait for upgrade to finish since we can't send packets while pausing a transport\r\n            this.once(\"upgrade\", cleanupAndClose);\r\n            this.once(\"upgradeError\", cleanupAndClose);\r\n        };\r\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n            this.readyState = \"closing\";\r\n            if (this.writeBuffer.length) {\r\n                this.once(\"drain\", () => {\r\n                    if (this.upgrading) {\r\n                        waitForUpgrade();\r\n                    }\r\n                    else {\r\n                        close();\r\n                    }\r\n                });\r\n            }\r\n            else if (this.upgrading) {\r\n                waitForUpgrade();\r\n            }\r\n            else {\r\n                close();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Called upon transport error\r\n     *\r\n     * @private\r\n     */\r\n    onError(err) {\r\n        Socket.priorWebsocketSuccess = false;\r\n        this.emitReserved(\"error\", err);\r\n        this.onClose(\"transport error\", err);\r\n    }\r\n    /**\r\n     * Called upon transport close.\r\n     *\r\n     * @private\r\n     */\r\n    onClose(reason, description) {\r\n        if (\"opening\" === this.readyState ||\r\n            \"open\" === this.readyState ||\r\n            \"closing\" === this.readyState) {\r\n            // clear timers\r\n            this.clearTimeoutFn(this.pingTimeoutTimer);\r\n            // stop event from firing again for transport\r\n            this.transport.removeAllListeners(\"close\");\r\n            // ensure transport won't stay open\r\n            this.transport.close();\r\n            // ignore further transport communication\r\n            this.transport.removeAllListeners();\r\n            if (typeof removeEventListener === \"function\") {\r\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\r\n                removeEventListener(\"offline\", this.offlineEventListener, false);\r\n            }\r\n            // set ready state\r\n            this.readyState = \"closed\";\r\n            // clear session id\r\n            this.id = null;\r\n            // emit close event\r\n            this.emitReserved(\"close\", reason, description);\r\n            // clean buffers after, so users can still\r\n            // grab the buffers on `close` event\r\n            this.writeBuffer = [];\r\n            this.prevBufferLen = 0;\r\n        }\r\n    }\r\n    /**\r\n     * Filters upgrades, returning only those matching client transports.\r\n     *\r\n     * @param {Array} upgrades - server upgrades\r\n     * @private\r\n     */\r\n    filterUpgrades(upgrades) {\r\n        const filteredUpgrades = [];\r\n        let i = 0;\r\n        const j = upgrades.length;\r\n        for (; i < j; i++) {\r\n            if (~this.transports.indexOf(upgrades[i]))\r\n                filteredUpgrades.push(upgrades[i]);\r\n        }\r\n        return filteredUpgrades;\r\n    }\r\n}\r\nSocket.protocol = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/socket.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transport.js":
/*!**************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transport.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transport: () => (/* binding */ Transport),\n/* harmony export */   TransportError: () => (/* binding */ TransportError)\n/* harmony export */ });\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contrib/parseqs.js */ \"./node_modules/engine.io-client/build/esm/contrib/parseqs.js\");\n\r\n\r\n\r\n\r\nclass TransportError extends Error {\r\n    constructor(reason, description, context) {\r\n        super(reason);\r\n        this.description = description;\r\n        this.context = context;\r\n        this.type = \"TransportError\";\r\n    }\r\n}\r\nclass Transport extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter {\r\n    /**\r\n     * Transport abstract constructor.\r\n     *\r\n     * @param {Object} opts - options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        super();\r\n        this.writable = false;\r\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.installTimerFunctions)(this, opts);\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n        this.socket = opts.socket;\r\n    }\r\n    /**\r\n     * Emits an error.\r\n     *\r\n     * @param {String} reason\r\n     * @param description\r\n     * @param context - the error context\r\n     * @return {Transport} for chaining\r\n     * @protected\r\n     */\r\n    onError(reason, description, context) {\r\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\r\n        return this;\r\n    }\r\n    /**\r\n     * Opens the transport.\r\n     */\r\n    open() {\r\n        this.readyState = \"opening\";\r\n        this.doOpen();\r\n        return this;\r\n    }\r\n    /**\r\n     * Closes the transport.\r\n     */\r\n    close() {\r\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\r\n            this.doClose();\r\n            this.onClose();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     */\r\n    send(packets) {\r\n        if (this.readyState === \"open\") {\r\n            this.write(packets);\r\n        }\r\n        else {\r\n            // this might happen if the transport was silently closed in the beforeunload event handler\r\n        }\r\n    }\r\n    /**\r\n     * Called upon open\r\n     *\r\n     * @protected\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        this.writable = true;\r\n        super.emitReserved(\"open\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const packet = (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_0__.decodePacket)(data, this.socket.binaryType);\r\n        this.onPacket(packet);\r\n    }\r\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @protected\r\n     */\r\n    onPacket(packet) {\r\n        super.emitReserved(\"packet\", packet);\r\n    }\r\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @protected\r\n     */\r\n    onClose(details) {\r\n        this.readyState = \"closed\";\r\n        super.emitReserved(\"close\", details);\r\n    }\r\n    /**\r\n     * Pauses the transport, in order not to lose packets during an upgrade.\r\n     *\r\n     * @param onPause\r\n     */\r\n    pause(onPause) { }\r\n    createUri(schema, query = {}) {\r\n        return (schema +\r\n            \"://\" +\r\n            this._hostname() +\r\n            this._port() +\r\n            this.opts.path +\r\n            this._query(query));\r\n    }\r\n    _hostname() {\r\n        const hostname = this.opts.hostname;\r\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\r\n    }\r\n    _port() {\r\n        if (this.opts.port &&\r\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\r\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\r\n            return \":\" + this.opts.port;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n    _query(query) {\r\n        const encodedQuery = (0,_contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_3__.encode)(query);\r\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/transport.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transports: () => (/* binding */ transports)\n/* harmony export */ });\n/* harmony import */ var _polling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polling.js */ \"./node_modules/engine.io-client/build/esm/transports/polling.js\");\n/* harmony import */ var _websocket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./websocket.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket.js\");\n/* harmony import */ var _webtransport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webtransport.js */ \"./node_modules/engine.io-client/build/esm/transports/webtransport.js\");\n\r\n\r\n\r\nconst transports = {\r\n    websocket: _websocket_js__WEBPACK_IMPORTED_MODULE_1__.WS,\r\n    webtransport: _webtransport_js__WEBPACK_IMPORTED_MODULE_2__.WT,\r\n    polling: _polling_js__WEBPACK_IMPORTED_MODULE_0__.Polling,\r\n};\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/transports/index.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/polling.js":
/*!***********************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/polling.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Polling: () => (/* binding */ Polling),\n/* harmony export */   Request: () => (/* binding */ Request)\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contrib/yeast.js */ \"./node_modules/engine.io-client/build/esm/contrib/yeast.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n/* harmony import */ var _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./xmlhttprequest.js */ \"./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction empty() { }\r\nconst hasXHR2 = (function () {\r\n    const xhr = new _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_3__.XHR({\r\n        xdomain: false,\r\n    });\r\n    return null != xhr.responseType;\r\n})();\r\nclass Polling extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\r\n    /**\r\n     * XHR Polling constructor.\r\n     *\r\n     * @param {Object} opts\r\n     * @package\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.polling = false;\r\n        if (typeof location !== \"undefined\") {\r\n            const isSSL = \"https:\" === location.protocol;\r\n            let port = location.port;\r\n            // some user agents have empty `location.port`\r\n            if (!port) {\r\n                port = isSSL ? \"443\" : \"80\";\r\n            }\r\n            this.xd =\r\n                (typeof location !== \"undefined\" &&\r\n                    opts.hostname !== location.hostname) ||\r\n                    port !== opts.port;\r\n        }\r\n        /**\r\n         * XHR supports binary\r\n         */\r\n        const forceBase64 = opts && opts.forceBase64;\r\n        this.supportsBinary = hasXHR2 && !forceBase64;\r\n        if (this.opts.withCredentials) {\r\n            this.cookieJar = (0,_xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_3__.createCookieJar)();\r\n        }\r\n    }\r\n    get name() {\r\n        return \"polling\";\r\n    }\r\n    /**\r\n     * Opens the socket (triggers polling). We write a PING message to determine\r\n     * when the transport is open.\r\n     *\r\n     * @protected\r\n     */\r\n    doOpen() {\r\n        this.poll();\r\n    }\r\n    /**\r\n     * Pauses polling.\r\n     *\r\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\r\n     * @package\r\n     */\r\n    pause(onPause) {\r\n        this.readyState = \"pausing\";\r\n        const pause = () => {\r\n            this.readyState = \"paused\";\r\n            onPause();\r\n        };\r\n        if (this.polling || !this.writable) {\r\n            let total = 0;\r\n            if (this.polling) {\r\n                total++;\r\n                this.once(\"pollComplete\", function () {\r\n                    --total || pause();\r\n                });\r\n            }\r\n            if (!this.writable) {\r\n                total++;\r\n                this.once(\"drain\", function () {\r\n                    --total || pause();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            pause();\r\n        }\r\n    }\r\n    /**\r\n     * Starts polling cycle.\r\n     *\r\n     * @private\r\n     */\r\n    poll() {\r\n        this.polling = true;\r\n        this.doPoll();\r\n        this.emitReserved(\"poll\");\r\n    }\r\n    /**\r\n     * Overloads onData to detect payloads.\r\n     *\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const callback = (packet) => {\r\n            // if its the first message we consider the transport open\r\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\r\n                this.onOpen();\r\n            }\r\n            // if its a close packet, we close the ongoing requests\r\n            if (\"close\" === packet.type) {\r\n                this.onClose({ description: \"transport closed by the server\" });\r\n                return false;\r\n            }\r\n            // otherwise bypass onData and handle the message\r\n            this.onPacket(packet);\r\n        };\r\n        // decode payload\r\n        (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.decodePayload)(data, this.socket.binaryType).forEach(callback);\r\n        // if an event did not trigger closing\r\n        if (\"closed\" !== this.readyState) {\r\n            // if we got data we're not polling\r\n            this.polling = false;\r\n            this.emitReserved(\"pollComplete\");\r\n            if (\"open\" === this.readyState) {\r\n                this.poll();\r\n            }\r\n            else {\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * For polling, send a close packet.\r\n     *\r\n     * @protected\r\n     */\r\n    doClose() {\r\n        const close = () => {\r\n            this.write([{ type: \"close\" }]);\r\n        };\r\n        if (\"open\" === this.readyState) {\r\n            close();\r\n        }\r\n        else {\r\n            // in case we're trying to close while\r\n            // handshaking is in progress (GH-164)\r\n            this.once(\"open\", close);\r\n        }\r\n    }\r\n    /**\r\n     * Writes a packets payload.\r\n     *\r\n     * @param {Array} packets - data packets\r\n     * @protected\r\n     */\r\n    write(packets) {\r\n        this.writable = false;\r\n        (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.encodePayload)(packets, (data) => {\r\n            this.doWrite(data, () => {\r\n                this.writable = true;\r\n                this.emitReserved(\"drain\");\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"https\" : \"http\";\r\n        const query = this.query || {};\r\n        // cache busting is forced\r\n        if (false !== this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = (0,_contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__.yeast)();\r\n        }\r\n        if (!this.supportsBinary && !query.sid) {\r\n            query.b64 = 1;\r\n        }\r\n        return this.createUri(schema, query);\r\n    }\r\n    /**\r\n     * Creates a request.\r\n     *\r\n     * @param {String} method\r\n     * @private\r\n     */\r\n    request(opts = {}) {\r\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\r\n        return new Request(this.uri(), opts);\r\n    }\r\n    /**\r\n     * Sends data.\r\n     *\r\n     * @param {String} data to send.\r\n     * @param {Function} called upon flush.\r\n     * @private\r\n     */\r\n    doWrite(data, fn) {\r\n        const req = this.request({\r\n            method: \"POST\",\r\n            data: data,\r\n        });\r\n        req.on(\"success\", fn);\r\n        req.on(\"error\", (xhrStatus, context) => {\r\n            this.onError(\"xhr post error\", xhrStatus, context);\r\n        });\r\n    }\r\n    /**\r\n     * Starts a poll cycle.\r\n     *\r\n     * @private\r\n     */\r\n    doPoll() {\r\n        const req = this.request();\r\n        req.on(\"data\", this.onData.bind(this));\r\n        req.on(\"error\", (xhrStatus, context) => {\r\n            this.onError(\"xhr poll error\", xhrStatus, context);\r\n        });\r\n        this.pollXhr = req;\r\n    }\r\n}\r\nclass Request extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__.Emitter {\r\n    /**\r\n     * Request constructor\r\n     *\r\n     * @param {Object} options\r\n     * @package\r\n     */\r\n    constructor(uri, opts) {\r\n        super();\r\n        (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.installTimerFunctions)(this, opts);\r\n        this.opts = opts;\r\n        this.method = opts.method || \"GET\";\r\n        this.uri = uri;\r\n        this.data = undefined !== opts.data ? opts.data : null;\r\n        this.create();\r\n    }\r\n    /**\r\n     * Creates the XHR object and sends the request.\r\n     *\r\n     * @private\r\n     */\r\n    create() {\r\n        var _a;\r\n        const opts = (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\r\n        opts.xdomain = !!this.opts.xd;\r\n        const xhr = (this.xhr = new _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_3__.XHR(opts));\r\n        try {\r\n            xhr.open(this.method, this.uri, true);\r\n            try {\r\n                if (this.opts.extraHeaders) {\r\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n                    for (let i in this.opts.extraHeaders) {\r\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\r\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) { }\r\n            if (\"POST\" === this.method) {\r\n                try {\r\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n                catch (e) { }\r\n            }\r\n            try {\r\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n            }\r\n            catch (e) { }\r\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\r\n            // ie6 check\r\n            if (\"withCredentials\" in xhr) {\r\n                xhr.withCredentials = this.opts.withCredentials;\r\n            }\r\n            if (this.opts.requestTimeout) {\r\n                xhr.timeout = this.opts.requestTimeout;\r\n            }\r\n            xhr.onreadystatechange = () => {\r\n                var _a;\r\n                if (xhr.readyState === 3) {\r\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\r\n                }\r\n                if (4 !== xhr.readyState)\r\n                    return;\r\n                if (200 === xhr.status || 1223 === xhr.status) {\r\n                    this.onLoad();\r\n                }\r\n                else {\r\n                    // make sure the `error` event handler that's user-set\r\n                    // does not throw in the same tick and gets caught here\r\n                    this.setTimeoutFn(() => {\r\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\r\n                    }, 0);\r\n                }\r\n            };\r\n            xhr.send(this.data);\r\n        }\r\n        catch (e) {\r\n            // Need to defer since .create() is called directly from the constructor\r\n            // and thus the 'error' event can only be only bound *after* this exception\r\n            // occurs.  Therefore, also, we cannot throw here at all.\r\n            this.setTimeoutFn(() => {\r\n                this.onError(e);\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            this.index = Request.requestsCount++;\r\n            Request.requests[this.index] = this;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon error.\r\n     *\r\n     * @private\r\n     */\r\n    onError(err) {\r\n        this.emitReserved(\"error\", err, this.xhr);\r\n        this.cleanup(true);\r\n    }\r\n    /**\r\n     * Cleans up house.\r\n     *\r\n     * @private\r\n     */\r\n    cleanup(fromError) {\r\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\r\n            return;\r\n        }\r\n        this.xhr.onreadystatechange = empty;\r\n        if (fromError) {\r\n            try {\r\n                this.xhr.abort();\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            delete Request.requests[this.index];\r\n        }\r\n        this.xhr = null;\r\n    }\r\n    /**\r\n     * Called upon load.\r\n     *\r\n     * @private\r\n     */\r\n    onLoad() {\r\n        const data = this.xhr.responseText;\r\n        if (data !== null) {\r\n            this.emitReserved(\"data\", data);\r\n            this.emitReserved(\"success\");\r\n            this.cleanup();\r\n        }\r\n    }\r\n    /**\r\n     * Aborts the request.\r\n     *\r\n     * @package\r\n     */\r\n    abort() {\r\n        this.cleanup();\r\n    }\r\n}\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\nif (typeof document !== \"undefined\") {\r\n    // @ts-ignore\r\n    if (typeof attachEvent === \"function\") {\r\n        // @ts-ignore\r\n        attachEvent(\"onunload\", unloadHandler);\r\n    }\r\n    else if (typeof addEventListener === \"function\") {\r\n        const terminationEvent = \"onpagehide\" in _globalThis_js__WEBPACK_IMPORTED_MODULE_6__.globalThisShim ? \"pagehide\" : \"unload\";\r\n        addEventListener(terminationEvent, unloadHandler, false);\r\n    }\r\n}\r\nfunction unloadHandler() {\r\n    for (let i in Request.requests) {\r\n        if (Request.requests.hasOwnProperty(i)) {\r\n            Request.requests[i].abort();\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/transports/polling.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocket: () => (/* binding */ WebSocket),\n/* harmony export */   defaultBinaryType: () => (/* binding */ defaultBinaryType),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   usingBrowserWebSocket: () => (/* binding */ usingBrowserWebSocket)\n/* harmony export */ });\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\r\nconst nextTick = (() => {\r\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\r\n    if (isPromiseAvailable) {\r\n        return (cb) => Promise.resolve().then(cb);\r\n    }\r\n    else {\r\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\r\n    }\r\n})();\r\nconst WebSocket = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.WebSocket || _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.MozWebSocket;\r\nconst usingBrowserWebSocket = true;\r\nconst defaultBinaryType = \"arraybuffer\";\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/websocket.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/websocket.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WS: () => (/* binding */ WS)\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contrib/yeast.js */ \"./node_modules/engine.io-client/build/esm/contrib/yeast.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ \"./node_modules/engine.io-client/build/esm/util.js\");\n/* harmony import */ var _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./websocket-constructor.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n\r\n\r\n\r\n\r\n\r\n// detect ReactNative environment\r\nconst isReactNative = typeof navigator !== \"undefined\" &&\r\n    typeof navigator.product === \"string\" &&\r\n    navigator.product.toLowerCase() === \"reactnative\";\r\nclass WS extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\r\n    /**\r\n     * WebSocket transport constructor.\r\n     *\r\n     * @param {Object} opts - connection options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.supportsBinary = !opts.forceBase64;\r\n    }\r\n    get name() {\r\n        return \"websocket\";\r\n    }\r\n    doOpen() {\r\n        if (!this.check()) {\r\n            // let probe timeout\r\n            return;\r\n        }\r\n        const uri = this.uri();\r\n        const protocols = this.opts.protocols;\r\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\r\n        const opts = isReactNative\r\n            ? {}\r\n            : (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\r\n        if (this.opts.extraHeaders) {\r\n            opts.headers = this.opts.extraHeaders;\r\n        }\r\n        try {\r\n            this.ws =\r\n                _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.usingBrowserWebSocket && !isReactNative\r\n                    ? protocols\r\n                        ? new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.WebSocket(uri, protocols)\r\n                        : new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.WebSocket(uri)\r\n                    : new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.WebSocket(uri, protocols, opts);\r\n        }\r\n        catch (err) {\r\n            return this.emitReserved(\"error\", err);\r\n        }\r\n        this.ws.binaryType = this.socket.binaryType;\r\n        this.addEventListeners();\r\n    }\r\n    /**\r\n     * Adds event listeners to the socket\r\n     *\r\n     * @private\r\n     */\r\n    addEventListeners() {\r\n        this.ws.onopen = () => {\r\n            if (this.opts.autoUnref) {\r\n                this.ws._socket.unref();\r\n            }\r\n            this.onOpen();\r\n        };\r\n        this.ws.onclose = (closeEvent) => this.onClose({\r\n            description: \"websocket connection closed\",\r\n            context: closeEvent,\r\n        });\r\n        this.ws.onmessage = (ev) => this.onData(ev.data);\r\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\r\n    }\r\n    write(packets) {\r\n        this.writable = false;\r\n        // encodePacket efficient as it uses WS framing\r\n        // no need for encodePayload\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_4__.encodePacket)(packet, this.supportsBinary, (data) => {\r\n                // always create a new object (GH-437)\r\n                const opts = {};\r\n                if (!_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.usingBrowserWebSocket) {\r\n                    if (packet.options) {\r\n                        opts.compress = packet.options.compress;\r\n                    }\r\n                    if (this.opts.perMessageDeflate) {\r\n                        const len = \r\n                        // @ts-ignore\r\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\r\n                        if (len < this.opts.perMessageDeflate.threshold) {\r\n                            opts.compress = false;\r\n                        }\r\n                    }\r\n                }\r\n                // Sometimes the websocket has already been closed but the browser didn't\r\n                // have a chance of informing us about it yet, in that case send will\r\n                // throw an error\r\n                try {\r\n                    if (_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.usingBrowserWebSocket) {\r\n                        // TypeError is thrown when passing the second argument on Safari\r\n                        this.ws.send(data);\r\n                    }\r\n                    else {\r\n                        this.ws.send(data, opts);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                }\r\n                if (lastPacket) {\r\n                    // fake drain\r\n                    // defer to next tick to allow Socket to clear writeBuffer\r\n                    (0,_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.nextTick)(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    doClose() {\r\n        if (typeof this.ws !== \"undefined\") {\r\n            this.ws.close();\r\n            this.ws = null;\r\n        }\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\r\n        const query = this.query || {};\r\n        // append timestamp to URI\r\n        if (this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = (0,_contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__.yeast)();\r\n        }\r\n        // communicate binary support capabilities\r\n        if (!this.supportsBinary) {\r\n            query.b64 = 1;\r\n        }\r\n        return this.createUri(schema, query);\r\n    }\r\n    /**\r\n     * Feature detection for WebSocket.\r\n     *\r\n     * @return {Boolean} whether this transport is available.\r\n     * @private\r\n     */\r\n    check() {\r\n        return !!_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_3__.WebSocket;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/transports/websocket.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/webtransport.js":
/*!****************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/webtransport.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WT: () => (/* binding */ WT)\n/* harmony export */ });\n/* harmony import */ var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transport.js */ \"./node_modules/engine.io-client/build/esm/transport.js\");\n/* harmony import */ var _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./websocket-constructor.js */ \"./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js\");\n/* harmony import */ var engine_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! engine.io-parser */ \"./node_modules/engine.io-parser/build/esm/index.js\");\n\r\n\r\n\r\nclass WT extends _transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport {\r\n    get name() {\r\n        return \"webtransport\";\r\n    }\r\n    doOpen() {\r\n        // @ts-ignore\r\n        if (typeof WebTransport !== \"function\") {\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\r\n        this.transport.closed\r\n            .then(() => {\r\n            this.onClose();\r\n        })\r\n            .catch((err) => {\r\n            this.onError(\"webtransport error\", err);\r\n        });\r\n        // note: we could have used async/await, but that would require some additional polyfills\r\n        this.transport.ready.then(() => {\r\n            this.transport.createBidirectionalStream().then((stream) => {\r\n                const decoderStream = (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.createPacketDecoderStream)(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\r\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\r\n                const encoderStream = (0,engine_io_parser__WEBPACK_IMPORTED_MODULE_2__.createPacketEncoderStream)();\r\n                encoderStream.readable.pipeTo(stream.writable);\r\n                this.writer = encoderStream.writable.getWriter();\r\n                const read = () => {\r\n                    reader\r\n                        .read()\r\n                        .then(({ done, value }) => {\r\n                        if (done) {\r\n                            return;\r\n                        }\r\n                        this.onPacket(value);\r\n                        read();\r\n                    })\r\n                        .catch((err) => {\r\n                    });\r\n                };\r\n                read();\r\n                const packet = { type: \"open\" };\r\n                if (this.query.sid) {\r\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\r\n                }\r\n                this.writer.write(packet).then(() => this.onOpen());\r\n            });\r\n        });\r\n    }\r\n    write(packets) {\r\n        this.writable = false;\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            this.writer.write(packet).then(() => {\r\n                if (lastPacket) {\r\n                    (0,_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    doClose() {\r\n        var _a;\r\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/transports/webtransport.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XHR: () => (/* binding */ XHR),\n/* harmony export */   createCookieJar: () => (/* binding */ createCookieJar)\n/* harmony export */ });\n/* harmony import */ var _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../contrib/has-cors.js */ \"./node_modules/engine.io-client/build/esm/contrib/has-cors.js\");\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n// browser shim for xmlhttprequest module\r\n\r\n\r\nfunction XHR(opts) {\r\n    const xdomain = opts.xdomain;\r\n    // XMLHttpRequest can be disabled on IE\r\n    try {\r\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_0__.hasCORS)) {\r\n            return new XMLHttpRequest();\r\n        }\r\n    }\r\n    catch (e) { }\r\n    if (!xdomain) {\r\n        try {\r\n            return new _globalThis_js__WEBPACK_IMPORTED_MODULE_1__.globalThisShim[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\r\n        }\r\n        catch (e) { }\r\n    }\r\n}\r\nfunction createCookieJar() { }\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-client/build/esm/util.js":
/*!*********************************************************!*\
  !*** ./node_modules/engine.io-client/build/esm/util.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byteLength: () => (/* binding */ byteLength),\n/* harmony export */   installTimerFunctions: () => (/* binding */ installTimerFunctions),\n/* harmony export */   pick: () => (/* binding */ pick)\n/* harmony export */ });\n/* harmony import */ var _globalThis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalThis.js */ \"./node_modules/engine.io-client/build/esm/globalThis.browser.js\");\n\r\nfunction pick(obj, ...attr) {\r\n    return attr.reduce((acc, k) => {\r\n        if (obj.hasOwnProperty(k)) {\r\n            acc[k] = obj[k];\r\n        }\r\n        return acc;\r\n    }, {});\r\n}\r\n// Keep a reference to the real timeout functions so they can be used when overridden\r\nconst NATIVE_SET_TIMEOUT = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.setTimeout;\r\nconst NATIVE_CLEAR_TIMEOUT = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.clearTimeout;\r\nfunction installTimerFunctions(obj, opts) {\r\n    if (opts.useNativeTimers) {\r\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\r\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\r\n    }\r\n    else {\r\n        obj.setTimeoutFn = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.setTimeout.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\r\n        obj.clearTimeoutFn = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.clearTimeout.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);\r\n    }\r\n}\r\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\r\nconst BASE64_OVERHEAD = 1.33;\r\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\r\nfunction byteLength(obj) {\r\n    if (typeof obj === \"string\") {\r\n        return utf8Length(obj);\r\n    }\r\n    // arraybuffer or blob\r\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\r\n}\r\nfunction utf8Length(str) {\r\n    let c = 0, length = 0;\r\n    for (let i = 0, l = str.length; i < l; i++) {\r\n        c = str.charCodeAt(i);\r\n        if (c < 0x80) {\r\n            length += 1;\r\n        }\r\n        else if (c < 0x800) {\r\n            length += 2;\r\n        }\r\n        else if (c < 0xd800 || c >= 0xe000) {\r\n            length += 3;\r\n        }\r\n        else {\r\n            i++;\r\n            length += 4;\r\n        }\r\n    }\r\n    return length;\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-client/build/esm/util.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/commons.js":
/*!************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/commons.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERROR_PACKET: () => (/* binding */ ERROR_PACKET),\n/* harmony export */   PACKET_TYPES: () => (/* binding */ PACKET_TYPES),\n/* harmony export */   PACKET_TYPES_REVERSE: () => (/* binding */ PACKET_TYPES_REVERSE)\n/* harmony export */ });\nconst PACKET_TYPES = Object.create(null); // no Map = no polyfill\r\nPACKET_TYPES[\"open\"] = \"0\";\r\nPACKET_TYPES[\"close\"] = \"1\";\r\nPACKET_TYPES[\"ping\"] = \"2\";\r\nPACKET_TYPES[\"pong\"] = \"3\";\r\nPACKET_TYPES[\"message\"] = \"4\";\r\nPACKET_TYPES[\"upgrade\"] = \"5\";\r\nPACKET_TYPES[\"noop\"] = \"6\";\r\nconst PACKET_TYPES_REVERSE = Object.create(null);\r\nObject.keys(PACKET_TYPES).forEach(key => {\r\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\r\n});\r\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\r\n\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-parser/build/esm/commons.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// imported from https://github.com/socketio/base64-arraybuffer\r\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n// Use a lookup table to find the index.\r\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\r\nfor (let i = 0; i < chars.length; i++) {\r\n    lookup[chars.charCodeAt(i)] = i;\r\n}\r\nconst encode = (arraybuffer) => {\r\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\r\n    for (i = 0; i < len; i += 3) {\r\n        base64 += chars[bytes[i] >> 2];\r\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n        base64 += chars[bytes[i + 2] & 63];\r\n    }\r\n    if (len % 3 === 2) {\r\n        base64 = base64.substring(0, base64.length - 1) + '=';\r\n    }\r\n    else if (len % 3 === 1) {\r\n        base64 = base64.substring(0, base64.length - 2) + '==';\r\n    }\r\n    return base64;\r\n};\r\nconst decode = (base64) => {\r\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\r\n    if (base64[base64.length - 1] === '=') {\r\n        bufferLength--;\r\n        if (base64[base64.length - 2] === '=') {\r\n            bufferLength--;\r\n        }\r\n    }\r\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\r\n    for (i = 0; i < len; i += 4) {\r\n        encoded1 = lookup[base64.charCodeAt(i)];\r\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\r\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\r\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\r\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n    }\r\n    return arraybuffer;\r\n};\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/decodePacket.browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/decodePacket.browser.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodePacket: () => (/* binding */ decodePacket)\n/* harmony export */ });\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n/* harmony import */ var _contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contrib/base64-arraybuffer.js */ \"./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js\");\n\r\n\r\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\nconst decodePacket = (encodedPacket, binaryType) => {\r\n    if (typeof encodedPacket !== \"string\") {\r\n        return {\r\n            type: \"message\",\r\n            data: mapBinary(encodedPacket, binaryType)\r\n        };\r\n    }\r\n    const type = encodedPacket.charAt(0);\r\n    if (type === \"b\") {\r\n        return {\r\n            type: \"message\",\r\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\r\n        };\r\n    }\r\n    const packetType = _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type];\r\n    if (!packetType) {\r\n        return _commons_js__WEBPACK_IMPORTED_MODULE_0__.ERROR_PACKET;\r\n    }\r\n    return encodedPacket.length > 1\r\n        ? {\r\n            type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type],\r\n            data: encodedPacket.substring(1)\r\n        }\r\n        : {\r\n            type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type]\r\n        };\r\n};\r\nconst decodeBase64Packet = (data, binaryType) => {\r\n    if (withNativeArrayBuffer) {\r\n        const decoded = (0,_contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__.decode)(data);\r\n        return mapBinary(decoded, binaryType);\r\n    }\r\n    else {\r\n        return { base64: true, data }; // fallback for old browsers\r\n    }\r\n};\r\nconst mapBinary = (data, binaryType) => {\r\n    switch (binaryType) {\r\n        case \"blob\":\r\n            if (data instanceof Blob) {\r\n                // from WebSocket + binaryType \"blob\"\r\n                return data;\r\n            }\r\n            else {\r\n                // from HTTP long-polling or WebTransport\r\n                return new Blob([data]);\r\n            }\r\n        case \"arraybuffer\":\r\n        default:\r\n            if (data instanceof ArrayBuffer) {\r\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\r\n                return data;\r\n            }\r\n            else {\r\n                // from WebTransport (Uint8Array)\r\n                return data.buffer;\r\n            }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/encodePacket.browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/encodePacket.browser.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacket: () => (/* binding */ encodePacket),\n/* harmony export */   encodePacketToBinary: () => (/* binding */ encodePacketToBinary)\n/* harmony export */ });\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n\r\nconst withNativeBlob = typeof Blob === \"function\" ||\r\n    (typeof Blob !== \"undefined\" &&\r\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\r\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\n// ArrayBuffer.isView method is not defined in IE10\r\nconst isView = obj => {\r\n    return typeof ArrayBuffer.isView === \"function\"\r\n        ? ArrayBuffer.isView(obj)\r\n        : obj && obj.buffer instanceof ArrayBuffer;\r\n};\r\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\r\n    if (withNativeBlob && data instanceof Blob) {\r\n        if (supportsBinary) {\r\n            return callback(data);\r\n        }\r\n        else {\r\n            return encodeBlobAsBase64(data, callback);\r\n        }\r\n    }\r\n    else if (withNativeArrayBuffer &&\r\n        (data instanceof ArrayBuffer || isView(data))) {\r\n        if (supportsBinary) {\r\n            return callback(data);\r\n        }\r\n        else {\r\n            return encodeBlobAsBase64(new Blob([data]), callback);\r\n        }\r\n    }\r\n    // plain string\r\n    return callback(_commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES[type] + (data || \"\"));\r\n};\r\nconst encodeBlobAsBase64 = (data, callback) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = function () {\r\n        const content = fileReader.result.split(\",\")[1];\r\n        callback(\"b\" + (content || \"\"));\r\n    };\r\n    return fileReader.readAsDataURL(data);\r\n};\r\nfunction toArray(data) {\r\n    if (data instanceof Uint8Array) {\r\n        return data;\r\n    }\r\n    else if (data instanceof ArrayBuffer) {\r\n        return new Uint8Array(data);\r\n    }\r\n    else {\r\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\r\n    }\r\n}\r\nlet TEXT_ENCODER;\r\nfunction encodePacketToBinary(packet, callback) {\r\n    if (withNativeBlob && packet.data instanceof Blob) {\r\n        return packet.data\r\n            .arrayBuffer()\r\n            .then(toArray)\r\n            .then(callback);\r\n    }\r\n    else if (withNativeArrayBuffer &&\r\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\r\n        return callback(toArray(packet.data));\r\n    }\r\n    encodePacket(packet, false, encoded => {\r\n        if (!TEXT_ENCODER) {\r\n            TEXT_ENCODER = new TextEncoder();\r\n        }\r\n        callback(TEXT_ENCODER.encode(encoded));\r\n    });\r\n}\r\n\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js?");

/***/ }),

/***/ "./node_modules/engine.io-parser/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/engine.io-parser/build/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPacketDecoderStream: () => (/* binding */ createPacketDecoderStream),\n/* harmony export */   createPacketEncoderStream: () => (/* binding */ createPacketEncoderStream),\n/* harmony export */   decodePacket: () => (/* reexport safe */ _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket),\n/* harmony export */   decodePayload: () => (/* binding */ decodePayload),\n/* harmony export */   encodePacket: () => (/* reexport safe */ _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacket),\n/* harmony export */   encodePayload: () => (/* binding */ encodePayload),\n/* harmony export */   protocol: () => (/* binding */ protocol)\n/* harmony export */ });\n/* harmony import */ var _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encodePacket.js */ \"./node_modules/engine.io-parser/build/esm/encodePacket.browser.js\");\n/* harmony import */ var _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodePacket.js */ \"./node_modules/engine.io-parser/build/esm/decodePacket.browser.js\");\n/* harmony import */ var _commons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commons.js */ \"./node_modules/engine.io-parser/build/esm/commons.js\");\n\r\n\r\n\r\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\r\nconst encodePayload = (packets, callback) => {\r\n    // some packets may be added to the array while encoding, so the initial length must be saved\r\n    const length = packets.length;\r\n    const encodedPackets = new Array(length);\r\n    let count = 0;\r\n    packets.forEach((packet, i) => {\r\n        // force base64 encoding for binary packets\r\n        (0,_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacket)(packet, false, encodedPacket => {\r\n            encodedPackets[i] = encodedPacket;\r\n            if (++count === length) {\r\n                callback(encodedPackets.join(SEPARATOR));\r\n            }\r\n        });\r\n    });\r\n};\r\nconst decodePayload = (encodedPayload, binaryType) => {\r\n    const encodedPackets = encodedPayload.split(SEPARATOR);\r\n    const packets = [];\r\n    for (let i = 0; i < encodedPackets.length; i++) {\r\n        const decodedPacket = (0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket)(encodedPackets[i], binaryType);\r\n        packets.push(decodedPacket);\r\n        if (decodedPacket.type === \"error\") {\r\n            break;\r\n        }\r\n    }\r\n    return packets;\r\n};\r\nfunction createPacketEncoderStream() {\r\n    return new TransformStream({\r\n        transform(packet, controller) {\r\n            (0,_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__.encodePacketToBinary)(packet, encodedPacket => {\r\n                const payloadLength = encodedPacket.length;\r\n                let header;\r\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\r\n                if (payloadLength < 126) {\r\n                    header = new Uint8Array(1);\r\n                    new DataView(header.buffer).setUint8(0, payloadLength);\r\n                }\r\n                else if (payloadLength < 65536) {\r\n                    header = new Uint8Array(3);\r\n                    const view = new DataView(header.buffer);\r\n                    view.setUint8(0, 126);\r\n                    view.setUint16(1, payloadLength);\r\n                }\r\n                else {\r\n                    header = new Uint8Array(9);\r\n                    const view = new DataView(header.buffer);\r\n                    view.setUint8(0, 127);\r\n                    view.setBigUint64(1, BigInt(payloadLength));\r\n                }\r\n                // first bit indicates whether the payload is plain text (0) or binary (1)\r\n                if (packet.data && typeof packet.data !== \"string\") {\r\n                    header[0] |= 0x80;\r\n                }\r\n                controller.enqueue(header);\r\n                controller.enqueue(encodedPacket);\r\n            });\r\n        }\r\n    });\r\n}\r\nlet TEXT_DECODER;\r\nfunction totalLength(chunks) {\r\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\r\n}\r\nfunction concatChunks(chunks, size) {\r\n    if (chunks[0].length === size) {\r\n        return chunks.shift();\r\n    }\r\n    const buffer = new Uint8Array(size);\r\n    let j = 0;\r\n    for (let i = 0; i < size; i++) {\r\n        buffer[i] = chunks[0][j++];\r\n        if (j === chunks[0].length) {\r\n            chunks.shift();\r\n            j = 0;\r\n        }\r\n    }\r\n    if (chunks.length && j < chunks[0].length) {\r\n        chunks[0] = chunks[0].slice(j);\r\n    }\r\n    return buffer;\r\n}\r\nfunction createPacketDecoderStream(maxPayload, binaryType) {\r\n    if (!TEXT_DECODER) {\r\n        TEXT_DECODER = new TextDecoder();\r\n    }\r\n    const chunks = [];\r\n    let state = 0 /* READ_HEADER */;\r\n    let expectedLength = -1;\r\n    let isBinary = false;\r\n    return new TransformStream({\r\n        transform(chunk, controller) {\r\n            chunks.push(chunk);\r\n            while (true) {\r\n                if (state === 0 /* READ_HEADER */) {\r\n                    if (totalLength(chunks) < 1) {\r\n                        break;\r\n                    }\r\n                    const header = concatChunks(chunks, 1);\r\n                    isBinary = (header[0] & 0x80) === 0x80;\r\n                    expectedLength = header[0] & 0x7f;\r\n                    if (expectedLength < 126) {\r\n                        state = 3 /* READ_PAYLOAD */;\r\n                    }\r\n                    else if (expectedLength === 126) {\r\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\r\n                    }\r\n                    else {\r\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\r\n                    }\r\n                }\r\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\r\n                    if (totalLength(chunks) < 2) {\r\n                        break;\r\n                    }\r\n                    const headerArray = concatChunks(chunks, 2);\r\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\r\n                    state = 3 /* READ_PAYLOAD */;\r\n                }\r\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\r\n                    if (totalLength(chunks) < 8) {\r\n                        break;\r\n                    }\r\n                    const headerArray = concatChunks(chunks, 8);\r\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\r\n                    const n = view.getUint32(0);\r\n                    if (n > Math.pow(2, 53 - 32) - 1) {\r\n                        // the maximum safe integer in JavaScript is 2^53 - 1\r\n                        controller.enqueue(_commons_js__WEBPACK_IMPORTED_MODULE_2__.ERROR_PACKET);\r\n                        break;\r\n                    }\r\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\r\n                    state = 3 /* READ_PAYLOAD */;\r\n                }\r\n                else {\r\n                    if (totalLength(chunks) < expectedLength) {\r\n                        break;\r\n                    }\r\n                    const data = concatChunks(chunks, expectedLength);\r\n                    controller.enqueue((0,_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__.decodePacket)(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\r\n                    state = 0 /* READ_HEADER */;\r\n                }\r\n                if (expectedLength === 0 || expectedLength > maxPayload) {\r\n                    controller.enqueue(_commons_js__WEBPACK_IMPORTED_MODULE_2__.ERROR_PACKET);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nconst protocol = 4;\r\n\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/engine.io-parser/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/contrib/backo2.js":
/*!*******************************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/contrib/backo2.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Backoff: () => (/* binding */ Backoff)\n/* harmony export */ });\n/**\r\n * Initialize backoff timer with `opts`.\r\n *\r\n * - `min` initial timeout in milliseconds [100]\r\n * - `max` max timeout [10000]\r\n * - `jitter` [0]\r\n * - `factor` [2]\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\nfunction Backoff(opts) {\r\n    opts = opts || {};\r\n    this.ms = opts.min || 100;\r\n    this.max = opts.max || 10000;\r\n    this.factor = opts.factor || 2;\r\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\r\n    this.attempts = 0;\r\n}\r\n/**\r\n * Return the backoff duration.\r\n *\r\n * @return {Number}\r\n * @api public\r\n */\r\nBackoff.prototype.duration = function () {\r\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\r\n    if (this.jitter) {\r\n        var rand = Math.random();\r\n        var deviation = Math.floor(rand * this.jitter * ms);\r\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\r\n    }\r\n    return Math.min(ms, this.max) | 0;\r\n};\r\n/**\r\n * Reset the number of attempts.\r\n *\r\n * @api public\r\n */\r\nBackoff.prototype.reset = function () {\r\n    this.attempts = 0;\r\n};\r\n/**\r\n * Set the minimum duration\r\n *\r\n * @api public\r\n */\r\nBackoff.prototype.setMin = function (min) {\r\n    this.ms = min;\r\n};\r\n/**\r\n * Set the maximum duration\r\n *\r\n * @api public\r\n */\r\nBackoff.prototype.setMax = function (max) {\r\n    this.max = max;\r\n};\r\n/**\r\n * Set the jitter\r\n *\r\n * @api public\r\n */\r\nBackoff.prototype.setJitter = function (jitter) {\r\n    this.jitter = jitter;\r\n};\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-client/build/esm/contrib/backo2.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Manager: () => (/* reexport safe */ _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager),\n/* harmony export */   Socket: () => (/* reexport safe */ _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket),\n/* harmony export */   connect: () => (/* binding */ lookup),\n/* harmony export */   \"default\": () => (/* binding */ lookup),\n/* harmony export */   io: () => (/* binding */ lookup),\n/* harmony export */   protocol: () => (/* reexport safe */ socket_io_parser__WEBPACK_IMPORTED_MODULE_3__.protocol)\n/* harmony export */ });\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url.js */ \"./node_modules/socket.io-client/build/esm/url.js\");\n/* harmony import */ var _manager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./manager.js */ \"./node_modules/socket.io-client/build/esm/manager.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/socket.io-client/build/esm/socket.js\");\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n\r\n\r\n\r\n/**\r\n * Managers cache.\r\n */\r\nconst cache = {};\r\nfunction lookup(uri, opts) {\r\n    if (typeof uri === \"object\") {\r\n        opts = uri;\r\n        uri = undefined;\r\n    }\r\n    opts = opts || {};\r\n    const parsed = (0,_url_js__WEBPACK_IMPORTED_MODULE_0__.url)(uri, opts.path || \"/socket.io\");\r\n    const source = parsed.source;\r\n    const id = parsed.id;\r\n    const path = parsed.path;\r\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\r\n    const newConnection = opts.forceNew ||\r\n        opts[\"force new connection\"] ||\r\n        false === opts.multiplex ||\r\n        sameNamespace;\r\n    let io;\r\n    if (newConnection) {\r\n        io = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);\r\n    }\r\n    else {\r\n        if (!cache[id]) {\r\n            cache[id] = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);\r\n        }\r\n        io = cache[id];\r\n    }\r\n    if (parsed.query && !opts.query) {\r\n        opts.query = parsed.queryKey;\r\n    }\r\n    return io.socket(parsed.path, opts);\r\n}\r\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\r\n// namespace (e.g. `io.connect(...)`), for backward compatibility\r\nObject.assign(lookup, {\r\n    Manager: _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager,\r\n    Socket: _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket,\r\n    io: lookup,\r\n    connect: lookup,\r\n});\r\n/**\r\n * Protocol version.\r\n *\r\n * @public\r\n */\r\n\r\n/**\r\n * Expose constructors for standalone build.\r\n *\r\n * @public\r\n */\r\n\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-client/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/manager.js":
/*!************************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/manager.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Manager: () => (/* binding */ Manager)\n/* harmony export */ });\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./socket.js */ \"./node_modules/socket.io-client/build/esm/socket.js\");\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./on.js */ \"./node_modules/socket.io-client/build/esm/on.js\");\n/* harmony import */ var _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrib/backo2.js */ \"./node_modules/socket.io-client/build/esm/contrib/backo2.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass Manager extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__.Emitter {\r\n    constructor(uri, opts) {\r\n        var _a;\r\n        super();\r\n        this.nsps = {};\r\n        this.subs = [];\r\n        if (uri && \"object\" === typeof uri) {\r\n            opts = uri;\r\n            uri = undefined;\r\n        }\r\n        opts = opts || {};\r\n        opts.path = opts.path || \"/socket.io\";\r\n        this.opts = opts;\r\n        (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.installTimerFunctions)(this, opts);\r\n        this.reconnection(opts.reconnection !== false);\r\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\r\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\r\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\r\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\r\n        this.backoff = new _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__.Backoff({\r\n            min: this.reconnectionDelay(),\r\n            max: this.reconnectionDelayMax(),\r\n            jitter: this.randomizationFactor(),\r\n        });\r\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\r\n        this._readyState = \"closed\";\r\n        this.uri = uri;\r\n        const _parser = opts.parser || socket_io_parser__WEBPACK_IMPORTED_MODULE_2__;\r\n        this.encoder = new _parser.Encoder();\r\n        this.decoder = new _parser.Decoder();\r\n        this._autoConnect = opts.autoConnect !== false;\r\n        if (this._autoConnect)\r\n            this.open();\r\n    }\r\n    reconnection(v) {\r\n        if (!arguments.length)\r\n            return this._reconnection;\r\n        this._reconnection = !!v;\r\n        return this;\r\n    }\r\n    reconnectionAttempts(v) {\r\n        if (v === undefined)\r\n            return this._reconnectionAttempts;\r\n        this._reconnectionAttempts = v;\r\n        return this;\r\n    }\r\n    reconnectionDelay(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._reconnectionDelay;\r\n        this._reconnectionDelay = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\r\n        return this;\r\n    }\r\n    randomizationFactor(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._randomizationFactor;\r\n        this._randomizationFactor = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\r\n        return this;\r\n    }\r\n    reconnectionDelayMax(v) {\r\n        var _a;\r\n        if (v === undefined)\r\n            return this._reconnectionDelayMax;\r\n        this._reconnectionDelayMax = v;\r\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\r\n        return this;\r\n    }\r\n    timeout(v) {\r\n        if (!arguments.length)\r\n            return this._timeout;\r\n        this._timeout = v;\r\n        return this;\r\n    }\r\n    /**\r\n     * Starts trying to reconnect if reconnection is enabled and we have not\r\n     * started reconnecting yet\r\n     *\r\n     * @private\r\n     */\r\n    maybeReconnectOnOpen() {\r\n        // Only try to reconnect if it's the first time we're connecting\r\n        if (!this._reconnecting &&\r\n            this._reconnection &&\r\n            this.backoff.attempts === 0) {\r\n            // keeps reconnection from firing twice for the same reconnection loop\r\n            this.reconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Sets the current transport `socket`.\r\n     *\r\n     * @param {Function} fn - optional, callback\r\n     * @return self\r\n     * @public\r\n     */\r\n    open(fn) {\r\n        if (~this._readyState.indexOf(\"open\"))\r\n            return this;\r\n        this.engine = new engine_io_client__WEBPACK_IMPORTED_MODULE_0__.Socket(this.uri, this.opts);\r\n        const socket = this.engine;\r\n        const self = this;\r\n        this._readyState = \"opening\";\r\n        this.skipReconnect = false;\r\n        // emit `open`\r\n        const openSubDestroy = (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"open\", function () {\r\n            self.onopen();\r\n            fn && fn();\r\n        });\r\n        const onError = (err) => {\r\n            this.cleanup();\r\n            this._readyState = \"closed\";\r\n            this.emitReserved(\"error\", err);\r\n            if (fn) {\r\n                fn(err);\r\n            }\r\n            else {\r\n                // Only do this if there is no fn to handle the error\r\n                this.maybeReconnectOnOpen();\r\n            }\r\n        };\r\n        // emit `error`\r\n        const errorSub = (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"error\", onError);\r\n        if (false !== this._timeout) {\r\n            const timeout = this._timeout;\r\n            // set timer\r\n            const timer = this.setTimeoutFn(() => {\r\n                openSubDestroy();\r\n                onError(new Error(\"timeout\"));\r\n                socket.close();\r\n            }, timeout);\r\n            if (this.opts.autoUnref) {\r\n                timer.unref();\r\n            }\r\n            this.subs.push(() => {\r\n                this.clearTimeoutFn(timer);\r\n            });\r\n        }\r\n        this.subs.push(openSubDestroy);\r\n        this.subs.push(errorSub);\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for open()\r\n     *\r\n     * @return self\r\n     * @public\r\n     */\r\n    connect(fn) {\r\n        return this.open(fn);\r\n    }\r\n    /**\r\n     * Called upon transport open.\r\n     *\r\n     * @private\r\n     */\r\n    onopen() {\r\n        // clear old subs\r\n        this.cleanup();\r\n        // mark as open\r\n        this._readyState = \"open\";\r\n        this.emitReserved(\"open\");\r\n        // add new subs\r\n        const socket = this.engine;\r\n        this.subs.push((0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"ping\", this.onping.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"data\", this.ondata.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"error\", this.onerror.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, \"close\", this.onclose.bind(this)), (0,_on_js__WEBPACK_IMPORTED_MODULE_3__.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\r\n    }\r\n    /**\r\n     * Called upon a ping.\r\n     *\r\n     * @private\r\n     */\r\n    onping() {\r\n        this.emitReserved(\"ping\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @private\r\n     */\r\n    ondata(data) {\r\n        try {\r\n            this.decoder.add(data);\r\n        }\r\n        catch (e) {\r\n            this.onclose(\"parse error\", e);\r\n        }\r\n    }\r\n    /**\r\n     * Called when parser fully decodes a packet.\r\n     *\r\n     * @private\r\n     */\r\n    ondecoded(packet) {\r\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\r\n        (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {\r\n            this.emitReserved(\"packet\", packet);\r\n        }, this.setTimeoutFn);\r\n    }\r\n    /**\r\n     * Called upon socket error.\r\n     *\r\n     * @private\r\n     */\r\n    onerror(err) {\r\n        this.emitReserved(\"error\", err);\r\n    }\r\n    /**\r\n     * Creates a new socket for the given `nsp`.\r\n     *\r\n     * @return {Socket}\r\n     * @public\r\n     */\r\n    socket(nsp, opts) {\r\n        let socket = this.nsps[nsp];\r\n        if (!socket) {\r\n            socket = new _socket_js__WEBPACK_IMPORTED_MODULE_1__.Socket(this, nsp, opts);\r\n            this.nsps[nsp] = socket;\r\n        }\r\n        else if (this._autoConnect && !socket.active) {\r\n            socket.connect();\r\n        }\r\n        return socket;\r\n    }\r\n    /**\r\n     * Called upon a socket close.\r\n     *\r\n     * @param socket\r\n     * @private\r\n     */\r\n    _destroy(socket) {\r\n        const nsps = Object.keys(this.nsps);\r\n        for (const nsp of nsps) {\r\n            const socket = this.nsps[nsp];\r\n            if (socket.active) {\r\n                return;\r\n            }\r\n        }\r\n        this._close();\r\n    }\r\n    /**\r\n     * Writes a packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    _packet(packet) {\r\n        const encodedPackets = this.encoder.encode(packet);\r\n        for (let i = 0; i < encodedPackets.length; i++) {\r\n            this.engine.write(encodedPackets[i], packet.options);\r\n        }\r\n    }\r\n    /**\r\n     * Clean up transport subscriptions and packet buffer.\r\n     *\r\n     * @private\r\n     */\r\n    cleanup() {\r\n        this.subs.forEach((subDestroy) => subDestroy());\r\n        this.subs.length = 0;\r\n        this.decoder.destroy();\r\n    }\r\n    /**\r\n     * Close the current socket.\r\n     *\r\n     * @private\r\n     */\r\n    _close() {\r\n        this.skipReconnect = true;\r\n        this._reconnecting = false;\r\n        this.onclose(\"forced close\");\r\n        if (this.engine)\r\n            this.engine.close();\r\n    }\r\n    /**\r\n     * Alias for close()\r\n     *\r\n     * @private\r\n     */\r\n    disconnect() {\r\n        return this._close();\r\n    }\r\n    /**\r\n     * Called upon engine close.\r\n     *\r\n     * @private\r\n     */\r\n    onclose(reason, description) {\r\n        this.cleanup();\r\n        this.backoff.reset();\r\n        this._readyState = \"closed\";\r\n        this.emitReserved(\"close\", reason, description);\r\n        if (this._reconnection && !this.skipReconnect) {\r\n            this.reconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Attempt a reconnection.\r\n     *\r\n     * @private\r\n     */\r\n    reconnect() {\r\n        if (this._reconnecting || this.skipReconnect)\r\n            return this;\r\n        const self = this;\r\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\r\n            this.backoff.reset();\r\n            this.emitReserved(\"reconnect_failed\");\r\n            this._reconnecting = false;\r\n        }\r\n        else {\r\n            const delay = this.backoff.duration();\r\n            this._reconnecting = true;\r\n            const timer = this.setTimeoutFn(() => {\r\n                if (self.skipReconnect)\r\n                    return;\r\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\r\n                // check again for the case socket closed in above events\r\n                if (self.skipReconnect)\r\n                    return;\r\n                self.open((err) => {\r\n                    if (err) {\r\n                        self._reconnecting = false;\r\n                        self.reconnect();\r\n                        this.emitReserved(\"reconnect_error\", err);\r\n                    }\r\n                    else {\r\n                        self.onreconnect();\r\n                    }\r\n                });\r\n            }, delay);\r\n            if (this.opts.autoUnref) {\r\n                timer.unref();\r\n            }\r\n            this.subs.push(() => {\r\n                this.clearTimeoutFn(timer);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Called upon successful reconnect.\r\n     *\r\n     * @private\r\n     */\r\n    onreconnect() {\r\n        const attempt = this.backoff.attempts;\r\n        this._reconnecting = false;\r\n        this.backoff.reset();\r\n        this.emitReserved(\"reconnect\", attempt);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-client/build/esm/manager.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/on.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   on: () => (/* binding */ on)\n/* harmony export */ });\nfunction on(obj, ev, fn) {\r\n    obj.on(ev, fn);\r\n    return function subDestroy() {\r\n        obj.off(ev, fn);\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-client/build/esm/on.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/socket.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Socket: () => (/* binding */ Socket)\n/* harmony export */ });\n/* harmony import */ var socket_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-parser */ \"./node_modules/socket.io-parser/build/esm/index.js\");\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./on.js */ \"./node_modules/socket.io-client/build/esm/on.js\");\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n\r\n\r\n\r\n/**\r\n * Internal events.\r\n * These events can't be emitted by the user.\r\n */\r\nconst RESERVED_EVENTS = Object.freeze({\r\n    connect: 1,\r\n    connect_error: 1,\r\n    disconnect: 1,\r\n    disconnecting: 1,\r\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\r\n    newListener: 1,\r\n    removeListener: 1,\r\n});\r\n/**\r\n * A Socket is the fundamental class for interacting with the server.\r\n *\r\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\r\n *\r\n * @example\r\n * const socket = io();\r\n *\r\n * socket.on(\"connect\", () => {\r\n *   console.log(\"connected\");\r\n * });\r\n *\r\n * // send an event to the server\r\n * socket.emit(\"foo\", \"bar\");\r\n *\r\n * socket.on(\"foobar\", () => {\r\n *   // an event was received from the server\r\n * });\r\n *\r\n * // upon disconnection\r\n * socket.on(\"disconnect\", (reason) => {\r\n *   console.log(`disconnected due to ${reason}`);\r\n * });\r\n */\r\nclass Socket extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__.Emitter {\r\n    /**\r\n     * `Socket` constructor.\r\n     */\r\n    constructor(io, nsp, opts) {\r\n        super();\r\n        /**\r\n         * Whether the socket is currently connected to the server.\r\n         *\r\n         * @example\r\n         * const socket = io();\r\n         *\r\n         * socket.on(\"connect\", () => {\r\n         *   console.log(socket.connected); // true\r\n         * });\r\n         *\r\n         * socket.on(\"disconnect\", () => {\r\n         *   console.log(socket.connected); // false\r\n         * });\r\n         */\r\n        this.connected = false;\r\n        /**\r\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\r\n         * be transmitted by the server.\r\n         */\r\n        this.recovered = false;\r\n        /**\r\n         * Buffer for packets received before the CONNECT packet\r\n         */\r\n        this.receiveBuffer = [];\r\n        /**\r\n         * Buffer for packets that will be sent once the socket is connected\r\n         */\r\n        this.sendBuffer = [];\r\n        /**\r\n         * The queue of packets to be sent with retry in case of failure.\r\n         *\r\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\r\n         * @private\r\n         */\r\n        this._queue = [];\r\n        /**\r\n         * A sequence to generate the ID of the {@link QueuedPacket}.\r\n         * @private\r\n         */\r\n        this._queueSeq = 0;\r\n        this.ids = 0;\r\n        this.acks = {};\r\n        this.flags = {};\r\n        this.io = io;\r\n        this.nsp = nsp;\r\n        if (opts && opts.auth) {\r\n            this.auth = opts.auth;\r\n        }\r\n        this._opts = Object.assign({}, opts);\r\n        if (this.io._autoConnect)\r\n            this.open();\r\n    }\r\n    /**\r\n     * Whether the socket is currently disconnected\r\n     *\r\n     * @example\r\n     * const socket = io();\r\n     *\r\n     * socket.on(\"connect\", () => {\r\n     *   console.log(socket.disconnected); // false\r\n     * });\r\n     *\r\n     * socket.on(\"disconnect\", () => {\r\n     *   console.log(socket.disconnected); // true\r\n     * });\r\n     */\r\n    get disconnected() {\r\n        return !this.connected;\r\n    }\r\n    /**\r\n     * Subscribe to open, close and packet events\r\n     *\r\n     * @private\r\n     */\r\n    subEvents() {\r\n        if (this.subs)\r\n            return;\r\n        const io = this.io;\r\n        this.subs = [\r\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"open\", this.onopen.bind(this)),\r\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"packet\", this.onpacket.bind(this)),\r\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"error\", this.onerror.bind(this)),\r\n            (0,_on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, \"close\", this.onclose.bind(this)),\r\n        ];\r\n    }\r\n    /**\r\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\r\n     *\r\n     * @example\r\n     * const socket = io();\r\n     *\r\n     * console.log(socket.active); // true\r\n     *\r\n     * socket.on(\"disconnect\", (reason) => {\r\n     *   if (reason === \"io server disconnect\") {\r\n     *     // the disconnection was initiated by the server, you need to manually reconnect\r\n     *     console.log(socket.active); // false\r\n     *   }\r\n     *   // else the socket will automatically try to reconnect\r\n     *   console.log(socket.active); // true\r\n     * });\r\n     */\r\n    get active() {\r\n        return !!this.subs;\r\n    }\r\n    /**\r\n     * \"Opens\" the socket.\r\n     *\r\n     * @example\r\n     * const socket = io({\r\n     *   autoConnect: false\r\n     * });\r\n     *\r\n     * socket.connect();\r\n     */\r\n    connect() {\r\n        if (this.connected)\r\n            return this;\r\n        this.subEvents();\r\n        if (!this.io[\"_reconnecting\"])\r\n            this.io.open(); // ensure open\r\n        if (\"open\" === this.io._readyState)\r\n            this.onopen();\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for {@link connect()}.\r\n     */\r\n    open() {\r\n        return this.connect();\r\n    }\r\n    /**\r\n     * Sends a `message` event.\r\n     *\r\n     * This method mimics the WebSocket.send() method.\r\n     *\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\r\n     *\r\n     * @example\r\n     * socket.send(\"hello\");\r\n     *\r\n     * // this is equivalent to\r\n     * socket.emit(\"message\", \"hello\");\r\n     *\r\n     * @return self\r\n     */\r\n    send(...args) {\r\n        args.unshift(\"message\");\r\n        this.emit.apply(this, args);\r\n        return this;\r\n    }\r\n    /**\r\n     * Override `emit`.\r\n     * If the event is in `events`, it's emitted normally.\r\n     *\r\n     * @example\r\n     * socket.emit(\"hello\", \"world\");\r\n     *\r\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\r\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\r\n     *\r\n     * // with an acknowledgement from the server\r\n     * socket.emit(\"hello\", \"world\", (val) => {\r\n     *   // ...\r\n     * });\r\n     *\r\n     * @return self\r\n     */\r\n    emit(ev, ...args) {\r\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\r\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\r\n        }\r\n        args.unshift(ev);\r\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\r\n            this._addToQueue(args);\r\n            return this;\r\n        }\r\n        const packet = {\r\n            type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT,\r\n            data: args,\r\n        };\r\n        packet.options = {};\r\n        packet.options.compress = this.flags.compress !== false;\r\n        // event ack callback\r\n        if (\"function\" === typeof args[args.length - 1]) {\r\n            const id = this.ids++;\r\n            const ack = args.pop();\r\n            this._registerAckCallback(id, ack);\r\n            packet.id = id;\r\n        }\r\n        const isTransportWritable = this.io.engine &&\r\n            this.io.engine.transport &&\r\n            this.io.engine.transport.writable;\r\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\r\n        if (discardPacket) {\r\n        }\r\n        else if (this.connected) {\r\n            this.notifyOutgoingListeners(packet);\r\n            this.packet(packet);\r\n        }\r\n        else {\r\n            this.sendBuffer.push(packet);\r\n        }\r\n        this.flags = {};\r\n        return this;\r\n    }\r\n    /**\r\n     * @private\r\n     */\r\n    _registerAckCallback(id, ack) {\r\n        var _a;\r\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\r\n        if (timeout === undefined) {\r\n            this.acks[id] = ack;\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        const timer = this.io.setTimeoutFn(() => {\r\n            delete this.acks[id];\r\n            for (let i = 0; i < this.sendBuffer.length; i++) {\r\n                if (this.sendBuffer[i].id === id) {\r\n                    this.sendBuffer.splice(i, 1);\r\n                }\r\n            }\r\n            ack.call(this, new Error(\"operation has timed out\"));\r\n        }, timeout);\r\n        this.acks[id] = (...args) => {\r\n            // @ts-ignore\r\n            this.io.clearTimeoutFn(timer);\r\n            ack.apply(this, [null, ...args]);\r\n        };\r\n    }\r\n    /**\r\n     * Emits an event and waits for an acknowledgement\r\n     *\r\n     * @example\r\n     * // without timeout\r\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\r\n     *\r\n     * // with a specific timeout\r\n     * try {\r\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\r\n     * } catch (err) {\r\n     *   // the server did not acknowledge the event in the given delay\r\n     * }\r\n     *\r\n     * @return a Promise that will be fulfilled when the server acknowledges the event\r\n     */\r\n    emitWithAck(ev, ...args) {\r\n        // the timeout flag is optional\r\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\r\n        return new Promise((resolve, reject) => {\r\n            args.push((arg1, arg2) => {\r\n                if (withErr) {\r\n                    return arg1 ? reject(arg1) : resolve(arg2);\r\n                }\r\n                else {\r\n                    return resolve(arg1);\r\n                }\r\n            });\r\n            this.emit(ev, ...args);\r\n        });\r\n    }\r\n    /**\r\n     * Add the packet to the queue.\r\n     * @param args\r\n     * @private\r\n     */\r\n    _addToQueue(args) {\r\n        let ack;\r\n        if (typeof args[args.length - 1] === \"function\") {\r\n            ack = args.pop();\r\n        }\r\n        const packet = {\r\n            id: this._queueSeq++,\r\n            tryCount: 0,\r\n            pending: false,\r\n            args,\r\n            flags: Object.assign({ fromQueue: true }, this.flags),\r\n        };\r\n        args.push((err, ...responseArgs) => {\r\n            if (packet !== this._queue[0]) {\r\n                // the packet has already been acknowledged\r\n                return;\r\n            }\r\n            const hasError = err !== null;\r\n            if (hasError) {\r\n                if (packet.tryCount > this._opts.retries) {\r\n                    this._queue.shift();\r\n                    if (ack) {\r\n                        ack(err);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._queue.shift();\r\n                if (ack) {\r\n                    ack(null, ...responseArgs);\r\n                }\r\n            }\r\n            packet.pending = false;\r\n            return this._drainQueue();\r\n        });\r\n        this._queue.push(packet);\r\n        this._drainQueue();\r\n    }\r\n    /**\r\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\r\n     * @param force - whether to resend a packet that has not been acknowledged yet\r\n     *\r\n     * @private\r\n     */\r\n    _drainQueue(force = false) {\r\n        if (!this.connected || this._queue.length === 0) {\r\n            return;\r\n        }\r\n        const packet = this._queue[0];\r\n        if (packet.pending && !force) {\r\n            return;\r\n        }\r\n        packet.pending = true;\r\n        packet.tryCount++;\r\n        this.flags = packet.flags;\r\n        this.emit.apply(this, packet.args);\r\n    }\r\n    /**\r\n     * Sends a packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    packet(packet) {\r\n        packet.nsp = this.nsp;\r\n        this.io._packet(packet);\r\n    }\r\n    /**\r\n     * Called upon engine `open`.\r\n     *\r\n     * @private\r\n     */\r\n    onopen() {\r\n        if (typeof this.auth == \"function\") {\r\n            this.auth((data) => {\r\n                this._sendConnectPacket(data);\r\n            });\r\n        }\r\n        else {\r\n            this._sendConnectPacket(this.auth);\r\n        }\r\n    }\r\n    /**\r\n     * Sends a CONNECT packet to initiate the Socket.IO session.\r\n     *\r\n     * @param data\r\n     * @private\r\n     */\r\n    _sendConnectPacket(data) {\r\n        this.packet({\r\n            type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT,\r\n            data: this._pid\r\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\r\n                : data,\r\n        });\r\n    }\r\n    /**\r\n     * Called upon engine or manager `error`.\r\n     *\r\n     * @param err\r\n     * @private\r\n     */\r\n    onerror(err) {\r\n        if (!this.connected) {\r\n            this.emitReserved(\"connect_error\", err);\r\n        }\r\n    }\r\n    /**\r\n     * Called upon engine `close`.\r\n     *\r\n     * @param reason\r\n     * @param description\r\n     * @private\r\n     */\r\n    onclose(reason, description) {\r\n        this.connected = false;\r\n        delete this.id;\r\n        this.emitReserved(\"disconnect\", reason, description);\r\n    }\r\n    /**\r\n     * Called with socket packet.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onpacket(packet) {\r\n        const sameNamespace = packet.nsp === this.nsp;\r\n        if (!sameNamespace)\r\n            return;\r\n        switch (packet.type) {\r\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT:\r\n                if (packet.data && packet.data.sid) {\r\n                    this.onconnect(packet.data.sid, packet.data.pid);\r\n                }\r\n                else {\r\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\r\n                }\r\n                break;\r\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT:\r\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_EVENT:\r\n                this.onevent(packet);\r\n                break;\r\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK:\r\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_ACK:\r\n                this.onack(packet);\r\n                break;\r\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT:\r\n                this.ondisconnect();\r\n                break;\r\n            case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT_ERROR:\r\n                this.destroy();\r\n                const err = new Error(packet.data.message);\r\n                // @ts-ignore\r\n                err.data = packet.data.data;\r\n                this.emitReserved(\"connect_error\", err);\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon a server event.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onevent(packet) {\r\n        const args = packet.data || [];\r\n        if (null != packet.id) {\r\n            args.push(this.ack(packet.id));\r\n        }\r\n        if (this.connected) {\r\n            this.emitEvent(args);\r\n        }\r\n        else {\r\n            this.receiveBuffer.push(Object.freeze(args));\r\n        }\r\n    }\r\n    emitEvent(args) {\r\n        if (this._anyListeners && this._anyListeners.length) {\r\n            const listeners = this._anyListeners.slice();\r\n            for (const listener of listeners) {\r\n                listener.apply(this, args);\r\n            }\r\n        }\r\n        super.emit.apply(this, args);\r\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\r\n            this._lastOffset = args[args.length - 1];\r\n        }\r\n    }\r\n    /**\r\n     * Produces an ack callback to emit with an event.\r\n     *\r\n     * @private\r\n     */\r\n    ack(id) {\r\n        const self = this;\r\n        let sent = false;\r\n        return function (...args) {\r\n            // prevent double callbacks\r\n            if (sent)\r\n                return;\r\n            sent = true;\r\n            self.packet({\r\n                type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK,\r\n                id: id,\r\n                data: args,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Called upon a server acknowlegement.\r\n     *\r\n     * @param packet\r\n     * @private\r\n     */\r\n    onack(packet) {\r\n        const ack = this.acks[packet.id];\r\n        if (\"function\" === typeof ack) {\r\n            ack.apply(this, packet.data);\r\n            delete this.acks[packet.id];\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    /**\r\n     * Called upon server connect.\r\n     *\r\n     * @private\r\n     */\r\n    onconnect(id, pid) {\r\n        this.id = id;\r\n        this.recovered = pid && this._pid === pid;\r\n        this._pid = pid; // defined only if connection state recovery is enabled\r\n        this.connected = true;\r\n        this.emitBuffered();\r\n        this.emitReserved(\"connect\");\r\n        this._drainQueue(true);\r\n    }\r\n    /**\r\n     * Emit buffered events (received and emitted).\r\n     *\r\n     * @private\r\n     */\r\n    emitBuffered() {\r\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\r\n        this.receiveBuffer = [];\r\n        this.sendBuffer.forEach((packet) => {\r\n            this.notifyOutgoingListeners(packet);\r\n            this.packet(packet);\r\n        });\r\n        this.sendBuffer = [];\r\n    }\r\n    /**\r\n     * Called upon server disconnect.\r\n     *\r\n     * @private\r\n     */\r\n    ondisconnect() {\r\n        this.destroy();\r\n        this.onclose(\"io server disconnect\");\r\n    }\r\n    /**\r\n     * Called upon forced client/server side disconnections,\r\n     * this method ensures the manager stops tracking us and\r\n     * that reconnections don't get triggered for this.\r\n     *\r\n     * @private\r\n     */\r\n    destroy() {\r\n        if (this.subs) {\r\n            // clean subscriptions to avoid reconnections\r\n            this.subs.forEach((subDestroy) => subDestroy());\r\n            this.subs = undefined;\r\n        }\r\n        this.io[\"_destroy\"](this);\r\n    }\r\n    /**\r\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\r\n     *\r\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\r\n     *\r\n     * @example\r\n     * const socket = io();\r\n     *\r\n     * socket.on(\"disconnect\", (reason) => {\r\n     *   // console.log(reason); prints \"io client disconnect\"\r\n     * });\r\n     *\r\n     * socket.disconnect();\r\n     *\r\n     * @return self\r\n     */\r\n    disconnect() {\r\n        if (this.connected) {\r\n            this.packet({ type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT });\r\n        }\r\n        // remove socket from pool\r\n        this.destroy();\r\n        if (this.connected) {\r\n            // fire events\r\n            this.onclose(\"io client disconnect\");\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Alias for {@link disconnect()}.\r\n     *\r\n     * @return self\r\n     */\r\n    close() {\r\n        return this.disconnect();\r\n    }\r\n    /**\r\n     * Sets the compress flag.\r\n     *\r\n     * @example\r\n     * socket.compress(false).emit(\"hello\");\r\n     *\r\n     * @param compress - if `true`, compresses the sending data\r\n     * @return self\r\n     */\r\n    compress(compress) {\r\n        this.flags.compress = compress;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\r\n     * ready to send messages.\r\n     *\r\n     * @example\r\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\r\n     *\r\n     * @returns self\r\n     */\r\n    get volatile() {\r\n        this.flags.volatile = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\r\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\r\n     *\r\n     * @example\r\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\r\n     *   if (err) {\r\n     *     // the server did not acknowledge the event in the given delay\r\n     *   }\r\n     * });\r\n     *\r\n     * @returns self\r\n     */\r\n    timeout(timeout) {\r\n        this.flags.timeout = timeout;\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback.\r\n     *\r\n     * @example\r\n     * socket.onAny((event, ...args) => {\r\n     *   console.log(`got ${event}`);\r\n     * });\r\n     *\r\n     * @param listener\r\n     */\r\n    onAny(listener) {\r\n        this._anyListeners = this._anyListeners || [];\r\n        this._anyListeners.push(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback. The listener is added to the beginning of the listeners array.\r\n     *\r\n     * @example\r\n     * socket.prependAny((event, ...args) => {\r\n     *   console.log(`got event ${event}`);\r\n     * });\r\n     *\r\n     * @param listener\r\n     */\r\n    prependAny(listener) {\r\n        this._anyListeners = this._anyListeners || [];\r\n        this._anyListeners.unshift(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Removes the listener that will be fired when any event is emitted.\r\n     *\r\n     * @example\r\n     * const catchAllListener = (event, ...args) => {\r\n     *   console.log(`got event ${event}`);\r\n     * }\r\n     *\r\n     * socket.onAny(catchAllListener);\r\n     *\r\n     * // remove a specific listener\r\n     * socket.offAny(catchAllListener);\r\n     *\r\n     * // or remove all listeners\r\n     * socket.offAny();\r\n     *\r\n     * @param listener\r\n     */\r\n    offAny(listener) {\r\n        if (!this._anyListeners) {\r\n            return this;\r\n        }\r\n        if (listener) {\r\n            const listeners = this._anyListeners;\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                if (listener === listeners[i]) {\r\n                    listeners.splice(i, 1);\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._anyListeners = [];\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\r\n     * e.g. to remove listeners.\r\n     */\r\n    listenersAny() {\r\n        return this._anyListeners || [];\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback.\r\n     *\r\n     * Note: acknowledgements sent to the server are not included.\r\n     *\r\n     * @example\r\n     * socket.onAnyOutgoing((event, ...args) => {\r\n     *   console.log(`sent event ${event}`);\r\n     * });\r\n     *\r\n     * @param listener\r\n     */\r\n    onAnyOutgoing(listener) {\r\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\r\n        this._anyOutgoingListeners.push(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\r\n     * callback. The listener is added to the beginning of the listeners array.\r\n     *\r\n     * Note: acknowledgements sent to the server are not included.\r\n     *\r\n     * @example\r\n     * socket.prependAnyOutgoing((event, ...args) => {\r\n     *   console.log(`sent event ${event}`);\r\n     * });\r\n     *\r\n     * @param listener\r\n     */\r\n    prependAnyOutgoing(listener) {\r\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\r\n        this._anyOutgoingListeners.unshift(listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Removes the listener that will be fired when any event is emitted.\r\n     *\r\n     * @example\r\n     * const catchAllListener = (event, ...args) => {\r\n     *   console.log(`sent event ${event}`);\r\n     * }\r\n     *\r\n     * socket.onAnyOutgoing(catchAllListener);\r\n     *\r\n     * // remove a specific listener\r\n     * socket.offAnyOutgoing(catchAllListener);\r\n     *\r\n     * // or remove all listeners\r\n     * socket.offAnyOutgoing();\r\n     *\r\n     * @param [listener] - the catch-all listener (optional)\r\n     */\r\n    offAnyOutgoing(listener) {\r\n        if (!this._anyOutgoingListeners) {\r\n            return this;\r\n        }\r\n        if (listener) {\r\n            const listeners = this._anyOutgoingListeners;\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                if (listener === listeners[i]) {\r\n                    listeners.splice(i, 1);\r\n                    return this;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._anyOutgoingListeners = [];\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\r\n     * e.g. to remove listeners.\r\n     */\r\n    listenersAnyOutgoing() {\r\n        return this._anyOutgoingListeners || [];\r\n    }\r\n    /**\r\n     * Notify the listeners for each packet sent\r\n     *\r\n     * @param packet\r\n     *\r\n     * @private\r\n     */\r\n    notifyOutgoingListeners(packet) {\r\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\r\n            const listeners = this._anyOutgoingListeners.slice();\r\n            for (const listener of listeners) {\r\n                listener.apply(this, packet.data);\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-client/build/esm/socket.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/build/esm/url.js":
/*!********************************************************!*\
  !*** ./node_modules/socket.io-client/build/esm/url.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   url: () => (/* binding */ url)\n/* harmony export */ });\n/* harmony import */ var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! engine.io-client */ \"./node_modules/engine.io-client/build/esm/index.js\");\n\r\n/**\r\n * URL parser.\r\n *\r\n * @param uri - url\r\n * @param path - the request path of the connection\r\n * @param loc - An object meant to mimic window.location.\r\n *        Defaults to window.location.\r\n * @public\r\n */\r\nfunction url(uri, path = \"\", loc) {\r\n    let obj = uri;\r\n    // default to window.location\r\n    loc = loc || (typeof location !== \"undefined\" && location);\r\n    if (null == uri)\r\n        uri = loc.protocol + \"//\" + loc.host;\r\n    // relative path support\r\n    if (typeof uri === \"string\") {\r\n        if (\"/\" === uri.charAt(0)) {\r\n            if (\"/\" === uri.charAt(1)) {\r\n                uri = loc.protocol + uri;\r\n            }\r\n            else {\r\n                uri = loc.host + uri;\r\n            }\r\n        }\r\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n            if (\"undefined\" !== typeof loc) {\r\n                uri = loc.protocol + \"//\" + uri;\r\n            }\r\n            else {\r\n                uri = \"https://\" + uri;\r\n            }\r\n        }\r\n        // parse\r\n        obj = (0,engine_io_client__WEBPACK_IMPORTED_MODULE_0__.parse)(uri);\r\n    }\r\n    // make sure we treat `localhost:80` and `localhost` equally\r\n    if (!obj.port) {\r\n        if (/^(http|ws)$/.test(obj.protocol)) {\r\n            obj.port = \"80\";\r\n        }\r\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n            obj.port = \"443\";\r\n        }\r\n    }\r\n    obj.path = obj.path || \"/\";\r\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\r\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\r\n    // define unique id\r\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\r\n    // define href\r\n    obj.href =\r\n        obj.protocol +\r\n            \"://\" +\r\n            host +\r\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\r\n    return obj;\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-client/build/esm/url.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/binary.js":
/*!***********************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/binary.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deconstructPacket: () => (/* binding */ deconstructPacket),\n/* harmony export */   reconstructPacket: () => (/* binding */ reconstructPacket)\n/* harmony export */ });\n/* harmony import */ var _is_binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-binary.js */ \"./node_modules/socket.io-parser/build/esm/is-binary.js\");\n\r\n/**\r\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\r\n *\r\n * @param {Object} packet - socket.io event packet\r\n * @return {Object} with deconstructed packet and list of buffers\r\n * @public\r\n */\r\nfunction deconstructPacket(packet) {\r\n    const buffers = [];\r\n    const packetData = packet.data;\r\n    const pack = packet;\r\n    pack.data = _deconstructPacket(packetData, buffers);\r\n    pack.attachments = buffers.length; // number of binary 'attachments'\r\n    return { packet: pack, buffers: buffers };\r\n}\r\nfunction _deconstructPacket(data, buffers) {\r\n    if (!data)\r\n        return data;\r\n    if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_0__.isBinary)(data)) {\r\n        const placeholder = { _placeholder: true, num: buffers.length };\r\n        buffers.push(data);\r\n        return placeholder;\r\n    }\r\n    else if (Array.isArray(data)) {\r\n        const newData = new Array(data.length);\r\n        for (let i = 0; i < data.length; i++) {\r\n            newData[i] = _deconstructPacket(data[i], buffers);\r\n        }\r\n        return newData;\r\n    }\r\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\r\n        const newData = {};\r\n        for (const key in data) {\r\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n                newData[key] = _deconstructPacket(data[key], buffers);\r\n            }\r\n        }\r\n        return newData;\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * Reconstructs a binary packet from its placeholder packet and buffers\r\n *\r\n * @param {Object} packet - event packet with placeholders\r\n * @param {Array} buffers - binary buffers to put in placeholder positions\r\n * @return {Object} reconstructed packet\r\n * @public\r\n */\r\nfunction reconstructPacket(packet, buffers) {\r\n    packet.data = _reconstructPacket(packet.data, buffers);\r\n    delete packet.attachments; // no longer useful\r\n    return packet;\r\n}\r\nfunction _reconstructPacket(data, buffers) {\r\n    if (!data)\r\n        return data;\r\n    if (data && data._placeholder === true) {\r\n        const isIndexValid = typeof data.num === \"number\" &&\r\n            data.num >= 0 &&\r\n            data.num < buffers.length;\r\n        if (isIndexValid) {\r\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\r\n        }\r\n        else {\r\n            throw new Error(\"illegal attachments\");\r\n        }\r\n    }\r\n    else if (Array.isArray(data)) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            data[i] = _reconstructPacket(data[i], buffers);\r\n        }\r\n    }\r\n    else if (typeof data === \"object\") {\r\n        for (const key in data) {\r\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n                data[key] = _reconstructPacket(data[key], buffers);\r\n            }\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-parser/build/esm/binary.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Decoder: () => (/* binding */ Decoder),\n/* harmony export */   Encoder: () => (/* binding */ Encoder),\n/* harmony export */   PacketType: () => (/* binding */ PacketType),\n/* harmony export */   protocol: () => (/* binding */ protocol)\n/* harmony export */ });\n/* harmony import */ var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @socket.io/component-emitter */ \"./node_modules/@socket.io/component-emitter/index.mjs\");\n/* harmony import */ var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary.js */ \"./node_modules/socket.io-parser/build/esm/binary.js\");\n/* harmony import */ var _is_binary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is-binary.js */ \"./node_modules/socket.io-parser/build/esm/is-binary.js\");\n\r\n\r\n\r\n/**\r\n * These strings must not be used as event names, as they have a special meaning.\r\n */\r\nconst RESERVED_EVENTS = [\r\n    \"connect\",\r\n    \"connect_error\",\r\n    \"disconnect\",\r\n    \"disconnecting\",\r\n    \"newListener\",\r\n    \"removeListener\", // used by the Node.js EventEmitter\r\n];\r\n/**\r\n * Protocol version.\r\n *\r\n * @public\r\n */\r\nconst protocol = 5;\r\nvar PacketType;\r\n(function (PacketType) {\r\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\r\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\r\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\r\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\r\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\r\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\r\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\r\n})(PacketType || (PacketType = {}));\r\n/**\r\n * A socket.io Encoder instance\r\n */\r\nclass Encoder {\r\n    /**\r\n     * Encoder constructor\r\n     *\r\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\r\n     */\r\n    constructor(replacer) {\r\n        this.replacer = replacer;\r\n    }\r\n    /**\r\n     * Encode a packet as a single string if non-binary, or as a\r\n     * buffer sequence, depending on packet type.\r\n     *\r\n     * @param {Object} obj - packet object\r\n     */\r\n    encode(obj) {\r\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\r\n            if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_2__.hasBinary)(obj)) {\r\n                return this.encodeAsBinary({\r\n                    type: obj.type === PacketType.EVENT\r\n                        ? PacketType.BINARY_EVENT\r\n                        : PacketType.BINARY_ACK,\r\n                    nsp: obj.nsp,\r\n                    data: obj.data,\r\n                    id: obj.id,\r\n                });\r\n            }\r\n        }\r\n        return [this.encodeAsString(obj)];\r\n    }\r\n    /**\r\n     * Encode packet as string.\r\n     */\r\n    encodeAsString(obj) {\r\n        // first is type\r\n        let str = \"\" + obj.type;\r\n        // attachments if we have them\r\n        if (obj.type === PacketType.BINARY_EVENT ||\r\n            obj.type === PacketType.BINARY_ACK) {\r\n            str += obj.attachments + \"-\";\r\n        }\r\n        // if we have a namespace other than `/`\r\n        // we append it followed by a comma `,`\r\n        if (obj.nsp && \"/\" !== obj.nsp) {\r\n            str += obj.nsp + \",\";\r\n        }\r\n        // immediately followed by the id\r\n        if (null != obj.id) {\r\n            str += obj.id;\r\n        }\r\n        // json data\r\n        if (null != obj.data) {\r\n            str += JSON.stringify(obj.data, this.replacer);\r\n        }\r\n        return str;\r\n    }\r\n    /**\r\n     * Encode packet as 'buffer sequence' by removing blobs, and\r\n     * deconstructing packet into object with placeholders and\r\n     * a list of buffers.\r\n     */\r\n    encodeAsBinary(obj) {\r\n        const deconstruction = (0,_binary_js__WEBPACK_IMPORTED_MODULE_1__.deconstructPacket)(obj);\r\n        const pack = this.encodeAsString(deconstruction.packet);\r\n        const buffers = deconstruction.buffers;\r\n        buffers.unshift(pack); // add packet info to beginning of data list\r\n        return buffers; // write all the buffers\r\n    }\r\n}\r\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\r\nfunction isObject(value) {\r\n    return Object.prototype.toString.call(value) === \"[object Object]\";\r\n}\r\n/**\r\n * A socket.io Decoder instance\r\n *\r\n * @return {Object} decoder\r\n */\r\nclass Decoder extends _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__.Emitter {\r\n    /**\r\n     * Decoder constructor\r\n     *\r\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\r\n     */\r\n    constructor(reviver) {\r\n        super();\r\n        this.reviver = reviver;\r\n    }\r\n    /**\r\n     * Decodes an encoded packet string into packet JSON.\r\n     *\r\n     * @param {String} obj - encoded packet\r\n     */\r\n    add(obj) {\r\n        let packet;\r\n        if (typeof obj === \"string\") {\r\n            if (this.reconstructor) {\r\n                throw new Error(\"got plaintext data when reconstructing a packet\");\r\n            }\r\n            packet = this.decodeString(obj);\r\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\r\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\r\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\r\n                // binary packet's json\r\n                this.reconstructor = new BinaryReconstructor(packet);\r\n                // no attachments, labeled binary but no binary data to follow\r\n                if (packet.attachments === 0) {\r\n                    super.emitReserved(\"decoded\", packet);\r\n                }\r\n            }\r\n            else {\r\n                // non-binary full packet\r\n                super.emitReserved(\"decoded\", packet);\r\n            }\r\n        }\r\n        else if ((0,_is_binary_js__WEBPACK_IMPORTED_MODULE_2__.isBinary)(obj) || obj.base64) {\r\n            // raw binary data\r\n            if (!this.reconstructor) {\r\n                throw new Error(\"got binary data when not reconstructing a packet\");\r\n            }\r\n            else {\r\n                packet = this.reconstructor.takeBinaryData(obj);\r\n                if (packet) {\r\n                    // received final buffer\r\n                    this.reconstructor = null;\r\n                    super.emitReserved(\"decoded\", packet);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Unknown type: \" + obj);\r\n        }\r\n    }\r\n    /**\r\n     * Decode a packet String (JSON data)\r\n     *\r\n     * @param {String} str\r\n     * @return {Object} packet\r\n     */\r\n    decodeString(str) {\r\n        let i = 0;\r\n        // look up type\r\n        const p = {\r\n            type: Number(str.charAt(0)),\r\n        };\r\n        if (PacketType[p.type] === undefined) {\r\n            throw new Error(\"unknown packet type \" + p.type);\r\n        }\r\n        // look up attachments if type binary\r\n        if (p.type === PacketType.BINARY_EVENT ||\r\n            p.type === PacketType.BINARY_ACK) {\r\n            const start = i + 1;\r\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\r\n            const buf = str.substring(start, i);\r\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\r\n                throw new Error(\"Illegal attachments\");\r\n            }\r\n            p.attachments = Number(buf);\r\n        }\r\n        // look up namespace (if any)\r\n        if (\"/\" === str.charAt(i + 1)) {\r\n            const start = i + 1;\r\n            while (++i) {\r\n                const c = str.charAt(i);\r\n                if (\",\" === c)\r\n                    break;\r\n                if (i === str.length)\r\n                    break;\r\n            }\r\n            p.nsp = str.substring(start, i);\r\n        }\r\n        else {\r\n            p.nsp = \"/\";\r\n        }\r\n        // look up id\r\n        const next = str.charAt(i + 1);\r\n        if (\"\" !== next && Number(next) == next) {\r\n            const start = i + 1;\r\n            while (++i) {\r\n                const c = str.charAt(i);\r\n                if (null == c || Number(c) != c) {\r\n                    --i;\r\n                    break;\r\n                }\r\n                if (i === str.length)\r\n                    break;\r\n            }\r\n            p.id = Number(str.substring(start, i + 1));\r\n        }\r\n        // look up json data\r\n        if (str.charAt(++i)) {\r\n            const payload = this.tryParse(str.substr(i));\r\n            if (Decoder.isPayloadValid(p.type, payload)) {\r\n                p.data = payload;\r\n            }\r\n            else {\r\n                throw new Error(\"invalid payload\");\r\n            }\r\n        }\r\n        return p;\r\n    }\r\n    tryParse(str) {\r\n        try {\r\n            return JSON.parse(str, this.reviver);\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    static isPayloadValid(type, payload) {\r\n        switch (type) {\r\n            case PacketType.CONNECT:\r\n                return isObject(payload);\r\n            case PacketType.DISCONNECT:\r\n                return payload === undefined;\r\n            case PacketType.CONNECT_ERROR:\r\n                return typeof payload === \"string\" || isObject(payload);\r\n            case PacketType.EVENT:\r\n            case PacketType.BINARY_EVENT:\r\n                return (Array.isArray(payload) &&\r\n                    (typeof payload[0] === \"number\" ||\r\n                        (typeof payload[0] === \"string\" &&\r\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\r\n            case PacketType.ACK:\r\n            case PacketType.BINARY_ACK:\r\n                return Array.isArray(payload);\r\n        }\r\n    }\r\n    /**\r\n     * Deallocates a parser's resources\r\n     */\r\n    destroy() {\r\n        if (this.reconstructor) {\r\n            this.reconstructor.finishedReconstruction();\r\n            this.reconstructor = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * A manager of a binary event's 'buffer sequence'. Should\r\n * be constructed whenever a packet of type BINARY_EVENT is\r\n * decoded.\r\n *\r\n * @param {Object} packet\r\n * @return {BinaryReconstructor} initialized reconstructor\r\n */\r\nclass BinaryReconstructor {\r\n    constructor(packet) {\r\n        this.packet = packet;\r\n        this.buffers = [];\r\n        this.reconPack = packet;\r\n    }\r\n    /**\r\n     * Method to be called when binary data received from connection\r\n     * after a BINARY_EVENT packet.\r\n     *\r\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\r\n     * @return {null | Object} returns null if more binary data is expected or\r\n     *   a reconstructed packet object if all buffers have been received.\r\n     */\r\n    takeBinaryData(binData) {\r\n        this.buffers.push(binData);\r\n        if (this.buffers.length === this.reconPack.attachments) {\r\n            // done with buffer list\r\n            const packet = (0,_binary_js__WEBPACK_IMPORTED_MODULE_1__.reconstructPacket)(this.reconPack, this.buffers);\r\n            this.finishedReconstruction();\r\n            return packet;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Cleans up binary packet reconstruction variables.\r\n     */\r\n    finishedReconstruction() {\r\n        this.reconPack = null;\r\n        this.buffers = [];\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-parser/build/esm/index.js?");

/***/ }),

/***/ "./node_modules/socket.io-parser/build/esm/is-binary.js":
/*!**************************************************************!*\
  !*** ./node_modules/socket.io-parser/build/esm/is-binary.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBinary: () => (/* binding */ hasBinary),\n/* harmony export */   isBinary: () => (/* binding */ isBinary)\n/* harmony export */ });\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\r\nconst isView = (obj) => {\r\n    return typeof ArrayBuffer.isView === \"function\"\r\n        ? ArrayBuffer.isView(obj)\r\n        : obj.buffer instanceof ArrayBuffer;\r\n};\r\nconst toString = Object.prototype.toString;\r\nconst withNativeBlob = typeof Blob === \"function\" ||\r\n    (typeof Blob !== \"undefined\" &&\r\n        toString.call(Blob) === \"[object BlobConstructor]\");\r\nconst withNativeFile = typeof File === \"function\" ||\r\n    (typeof File !== \"undefined\" &&\r\n        toString.call(File) === \"[object FileConstructor]\");\r\n/**\r\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\r\n *\r\n * @private\r\n */\r\nfunction isBinary(obj) {\r\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\r\n        (withNativeBlob && obj instanceof Blob) ||\r\n        (withNativeFile && obj instanceof File));\r\n}\r\nfunction hasBinary(obj, toJSON) {\r\n    if (!obj || typeof obj !== \"object\") {\r\n        return false;\r\n    }\r\n    if (Array.isArray(obj)) {\r\n        for (let i = 0, l = obj.length; i < l; i++) {\r\n            if (hasBinary(obj[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    if (isBinary(obj)) {\r\n        return true;\r\n    }\r\n    if (obj.toJSON &&\r\n        typeof obj.toJSON === \"function\" &&\r\n        arguments.length === 1) {\r\n        return hasBinary(obj.toJSON(), true);\r\n    }\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\n\n//# sourceURL=webpack://server-client/./node_modules/socket.io-parser/build/esm/is-binary.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/tab-src/dashboard.js");
/******/ 	
/******/ })()
;